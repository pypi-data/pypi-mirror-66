#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
#  wxIconSaver.py
"""
wxPython GUI for saving icons to files
"""
#
#  Copyright 2019 Dominic Davis-Foster
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
# This file is suitable for sourcing inside bash as
# well as importing into Python
#
# generated by wxGlade 0.9.0 on Mon Feb 25 13:14:25 2019
#


__author__ = "Dominic Davis-Foster"
__copyright__ = "2019-2020 Dominic Davis-Foster"

__license__ = "GPL"
__version__ = "0.1.7"
__email__ = "dominic@davis-foster.co.uk"

# stdlib
import os

# 3rd party
import wx


# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class BitmapSaverFrame(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: BitmapSaverFrame.__init__
		kwds["style"] = kwds.get("style", 0) | wx.CAPTION | wx.CLIP_CHILDREN | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.SYSTEM_MENU
		wx.Frame.__init__(self, *args, **kwds)
		self.SetSize((467, 577))
		self.SetMinSize((467, 577))
		self.SetMaxSize((467, 577))
		self.SetSize((467, 577))
		self.size_spin_ctrl = wx.SpinCtrl(self, wx.ID_ANY, "16", min=1, max=512)
		self.icon_list_box = wx.ListBox(self, wx.ID_ANY, choices=[""])
		self.provider_list_box = wx.ListBox(self, wx.ID_ANY, choices=[""])
		self.filetype_list_box = wx.ListBox(self, wx.ID_ANY, choices=[""])
		self.close_button = wx.Button(self, wx.ID_ANY, "Close")
		self.save_button = wx.Button(self, wx.ID_ANY, "Save")
		
		self.__set_properties()
		self.__do_layout()
		
		self.Bind(wx.EVT_LISTBOX, self.update_preview, self.icon_list_box)
		self.Bind(wx.EVT_LISTBOX, self.update_preview, self.provider_list_box)
		self.Bind(wx.EVT_LISTBOX, self.update_preview, self.filetype_list_box)
		self.Bind(wx.EVT_BUTTON, self.on_close, self.close_button)
		self.Bind(wx.EVT_BUTTON, self.on_save, self.save_button)
		# end wxGlade
		
		self.Bind(wx.EVT_SPINCTRL, self.update_preview, self.size_spin_ctrl)
		self.size_spin_ctrl.SetValue("16")
		self.size_spin_ctrl.SetMin(1)
		self.size_spin_ctrl.SetMax(512)
		# style=wx.TE_NO_VSCROLL | wx.TE_PROCESS_ENTER)
		
		# self.FilePicker = wx.FilePickerCtrl(
		# 		self, wx.ID_ANY, style=wx.FLP_SAVE,
		# 		message="Choose where to save the imageFileSelectorPromptStr",
		# 		)
		
		self.size = 16
		self.icon = ''
		self.provider = ''
		self.filetype = ''
		self.filename = ''
		
		self.icon_list_box.Clear()
		self.icon_list_box.AppendItems([
				"ART_ADD_BOOKMARK",
				"ART_CDROM",
				"ART_CLOSE",
				"ART_COPY",
				"ART_CROSS_MARK",
				"ART_CUT",
				"ART_DELETE",
				"ART_DEL_BOOKMARK",
				"ART_ERROR",
				"ART_EXECUTABLE_FILE",
				"ART_FILE_OPEN",
				"ART_FILE_SAVE",
				"ART_FILE_SAVE_AS",
				"ART_FIND",
				"ART_FIND_AND_REPLACE",
				"ART_FLOPPY",
				"ART_FOLDER",
				"ART_FOLDER_OPEN",
				"ART_GOTO_FIRST",
				"ART_GOTO_LAST",
				"ART_GO_BACK",
				"ART_GO_DIR_UP",
				"ART_GO_DOWN",
				"ART_GO_FORWARD",
				"ART_GO_HOME",
				"ART_GO_TO_PARENT",
				"ART_GO_UP",
				"ART_HARDDISK",
				"ART_HELP",
				"ART_HELP_BOOK",
				"ART_HELP_FOLDER",
				"ART_HELP_PAGE",
				"ART_HELP_SETTINGS",
				"ART_HELP_SIDE_PANEL",
				"ART_INFORMATION",
				"ART_LIST_VIEW",
				"ART_MINUS",
				"ART_MISSING_IMAGE",
				"ART_NEW",
				"ART_NEW_DIR",
				"ART_NORMAL_FILE",
				"ART_PASTE",
				"ART_PLUS",
				"ART_PRINT",
				"ART_QUESTION",
				"ART_QUIT",
				"ART_REDO",
				"ART_REPORT_VIEW",
				"ART_TICK_MARK",
				"ART_TIP",
				"ART_UNDO",
				"ART_WARNING"
				])
		
		self.icon_list_box.SetSelection(0)
		self.provider_list_box.Clear()
		self.provider_list_box.AppendItems([
				"ART_TOOLBAR",
				"ART_MENU",
				"ART_BUTTON",
				"ART_FRAME_ICON",
				"ART_CMN_DIALOG",
				"ART_HELP_BROWSER",
				"ART_MESSAGE_BOX",
				"ART_OTHER",
				])
		
		self.provider_list_box.SetSelection(0)
		self.filetype_list_box.Clear()
		self.filetype_list_box.AppendItems([
				"BITMAP_TYPE_BMP",  # 1
				"BITMAP_TYPE_ICO",  # 3
				"BITMAP_TYPE_CUR",  # 5
				"BITMAP_TYPE_XBM",  # 7
				"BITMAP_TYPE_XBM_DATA",  # 8
				"wx.BITMAP_TYPE_XPM",  # 9
				"wx.BITMAP_TYPE_XPM_DATA",  # 10
				"BITMAP_TYPE_TIFF",  # 11
				"BITMAP_TYPE_TIF",  # 11
				"BITMAP_TYPE_GIF",  # 13
				"BITMAP_TYPE_PNG",  # 15
				"BITMAP_TYPE_JPEG",  # 17
				"BITMAP_TYPE_PNM",  # 19
				"BITMAP_TYPE_PCX",  # 21
				"BITMAP_TYPE_PICT",  # 23
				"BITMAP_TYPE_ICON",  # 25
				"BITMAP_TYPE_ANI",  # 27
				"BITMAP_TYPE_IFF",  # 28
				"BITMAP_TYPE_TGA",  # 29
				"BITMAP_TYPE_MACCURSOR",  # 30
				])
		
		self.filetype_list_box.SetSelection(0)
		self.update_preview()
	
	def __set_properties(self):
		# begin wxGlade: BitmapSaverFrame.__set_properties
		self.SetTitle("wxIconSaver")
		# end wxGlade
		_icon = wx.NullIcon
		_icon.CopyFromBitmap(wx.ArtProvider.GetBitmap(wx.ART_FILE_SAVE, wx.ART_BUTTON, wx.Size(64, 64)))
		self.SetIcon(_icon)
	
	def __do_layout(self):
		# begin wxGlade: BitmapSaverFrame.__do_layout
		sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_4 = wx.BoxSizer(wx.VERTICAL)
		sizer_3 = wx.BoxSizer(wx.VERTICAL)
		size_sizer = wx.BoxSizer(wx.HORIZONTAL)
		size_label = wx.StaticText(self, wx.ID_ANY, "Size")
		size_sizer.Add(size_label, 0, wx.ALIGN_CENTER | wx.ALL, 10)
		size_sizer.Add(self.size_spin_ctrl, 0, wx.ALIGN_CENTER, 0)
		sizer_1.Add(size_sizer, 1, wx.EXPAND, 0)
		icon_label = wx.StaticText(self, wx.ID_ANY, "Icon")
		sizer_3.Add(icon_label, 0, wx.LEFT | wx.RIGHT | wx.TOP, 10)
		sizer_3.Add(self.icon_list_box, 0, wx.BOTTOM | wx.LEFT | wx.RIGHT, 10)
		provider_label = wx.StaticText(self, wx.ID_ANY, "Provider")
		sizer_3.Add(provider_label, 0, wx.LEFT | wx.RIGHT | wx.TOP, 10)
		sizer_3.Add(self.provider_list_box, 0, wx.BOTTOM | wx.LEFT | wx.RIGHT, 10)
		sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
		filetype_label = wx.StaticText(self, wx.ID_ANY, "Filetype")
		sizer_4.Add(filetype_label, 0, wx.LEFT | wx.RIGHT | wx.TOP, 10)
		sizer_4.Add(self.filetype_list_box, 0, wx.BOTTOM | wx.LEFT | wx.RIGHT, 10)
		preview_label = wx.StaticText(self, wx.ID_ANY, "Preview")
		sizer_4.Add(preview_label, 0, wx.LEFT | wx.RIGHT | wx.TOP, 10)
		preview_bitmap = wx.StaticBitmap(self, wx.ID_ANY, wx.NullBitmap)
		sizer_4.Add(preview_bitmap, 0, 0, 0)
		sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)
		sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
		sizer_5.AddStretchSpacer()
		sizer_5.Add(self.close_button, 0, wx.ALIGN_CENTER | wx.LEFT, 100)
		sizer_5.Add(self.save_button, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 5)
		sizer_5.AddStretchSpacer()
		sizer_1.Add(sizer_5, 1, wx.EXPAND, 0)
		self.SetSizer(sizer_1)
		self.Layout()
		# end wxGlade
		# sizer_5.AddStretchSpacer()
		self.preview_bitmap = preview_bitmap
	
	def on_close(self, _):  # wxGlade: BitmapSaverFrame.<event_handler>
		self.Close()
	
	def on_save(self, event):  # wxGlade: BitmapSaverFrame.<event_handler>
		self.update_preview(self, event)
		
		if self.filetype == 1:
			extension = ".bmp"
			filetype_string = "BMP"
		elif self.filetype == 3:
			extension = ".ico"
			filetype_string = "ICO"
		elif self.filetype == 5:
			extension = ".cur"
			filetype_string = "CUR"
		elif self.filetype == 7:
			extension = ".xbm"
			filetype_string = "XBM"
		# elif self.filetype == 8:
		# 		extension = ".bmp"
		# 		filetype_string = "XBM DATA"
		elif self.filetype == 9:
			extension = ".xpm"
			filetype_string = "XBM"
		# elif self.filetype == 10:
		# 		extension = ".xpm"
		# 		filetype_string = "XPM DATA"
		elif self.filetype == 11:
			extension = ".tiff"
			filetype_string = "TIFF"
		elif self.filetype == 11:
			extension = ".tif"
			filetype_string = "TIFF"
		elif self.filetype == 13:
			extension = ".gif"
			filetype_string = "GIF"
		elif self.filetype == 15:
			extension = ".png"
			filetype_string = "PNG"
		elif self.filetype == 17:
			extension = ".jpg"
			filetype_string = "JPEG"
		elif self.filetype == 19:
			extension = ".pnm"
			filetype_string = "PNM"
		elif self.filetype == 21:
			extension = ".pcx"
			filetype_string = "PCX"
		elif self.filetype == 23:
			extension = ".pict"
			filetype_string = "PICT"
		elif self.filetype == 25:
			extension = ".ico"
			filetype_string = "ICON"
		elif self.filetype == 27:
			extension = ".ani"
			filetype_string = "ANI"
		elif self.filetype == 28:
			extension = ".iff"
			filetype_string = "IFF"
		elif self.filetype == 29:
			extension = ".tga"
			filetype_string = "TGA"
		elif self.filetype == 30:
			extension = ".*"
			filetype_string = "Mac Cursor"
		
		# from https://wxpython.org/Phoenix/docs/html/wx.FileDialog.html
		filedlg = wx.FileDialog(self, "Save {} file".format(filetype_string),
								wildcard="{} files (*{})|*{}".format(filetype_string, extension, extension),
								style=wx.FD_SAVE | wx.FD_OVERWRITE_PROMPT)
		
		if filedlg.ShowModal() == wx.ID_CANCEL:
			return  # the user changed their mind
		
		# save the current contents in the file
		self.filename = filedlg.GetPath()
		
		if os.path.splitext(self.filename)[-1] != extension:
			self.filename = self.filename + extension
		
		wx.ArtProvider.GetBitmap(
				self.icon,
				self.provider,
				wx.Size(self.size, self.size),
				).SaveFile(self.filename, self.filetype)
		
		filedlg.Destroy()
		
		event.Skip()
	
	def update_preview(self, *_):  # wxGlade: BitmapSaverFrame.<event_handler>
		
		self.size = int(self.size_spin_ctrl.GetValue())
		self.icon = bytes("wx" + self.icon_list_box.GetString(self.icon_list_box.GetSelection()), "utf-8")
		self.provider = bytes(
				"wx" + self.provider_list_box.GetString(
						self.provider_list_box.GetSelection(),
						) + "_C",
				"utf-8",
				)
		
		filetype_raw_index = self.filetype_list_box.GetSelection()
		
		if filetype_raw_index == 0:
			self.filetype = 1
		elif filetype_raw_index == 1:
			self.filetype = 3
		elif filetype_raw_index == 2:
			self.filetype = 5
		elif filetype_raw_index == 3:
			self.filetype = 7
		elif filetype_raw_index == 4:
			self.filetype = 8
		elif filetype_raw_index == 5:
			self.filetype = 9
		elif filetype_raw_index == 6:
			self.filetype = 10
		elif filetype_raw_index == 7:
			self.filetype = 11
		elif filetype_raw_index == 8:
			self.filetype = 11
		elif filetype_raw_index == 9:
			self.filetype = 13
		elif filetype_raw_index == 10:
			self.filetype = 15
		elif filetype_raw_index == 11:
			self.filetype = 17
		elif filetype_raw_index == 12:
			self.filetype = 19
		elif filetype_raw_index == 13:
			self.filetype = 21
		elif filetype_raw_index == 14:
			self.filetype = 23
		elif filetype_raw_index == 15:
			self.filetype = 25
		elif filetype_raw_index == 16:
			self.filetype = 27
		elif filetype_raw_index == 17:
			self.filetype = 28
		elif filetype_raw_index == 18:
			self.filetype = 29
		elif filetype_raw_index == 19:
			self.filetype = 30
		
		self.preview_bitmap.SetBitmap(wx.ArtProvider.GetBitmap(self.icon, self.provider, wx.Size(self.size, self.size)))


# end of class BitmapSaverFrame

class BitmapSaver(wx.App):
	def OnInit(self):
		self.frame = BitmapSaverFrame(None, wx.ID_ANY, "")
		self.SetTopWindow(self.frame)
		self.frame.Show()
		return True


# end of class BitmapSaver

def main():
	app = BitmapSaver(0)
	app.MainLoop()


if __name__ == "__main__":
	main()
