name: CI
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
env:
  IQSHARP_TELEMETRY_OPT_OUT: 1
jobs:
  linux:
    name: Build and test (Linux)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Install dotnet SDK
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        sudo apt-add-repository https://packages.microsoft.com/ubuntu/18.04/prod
        sudo apt-get update
        sudo apt-get install dotnet-sdk-3.1
        echo "::add-path::~/.dotnet/tools"
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install iqsharp and pytket_qsharp
      env:
        FURY_AUTH: ${{ secrets.FURY_AUTH }}
      run: |
        pip install --pre -r requirements.txt
        pip install .
        dotnet tool install -g Microsoft.Quantum.IQSharp
        dotnet iqsharp install --user
    - name: Run tests
      run: |
        cd tests
        pytest --doctest-modules --junitxml=${GITHUB_WORKSPACE}/junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml
    - name: Upload test results
      # Run this step even when there are test failures
      if: always()
      uses: actions/upload-artifact@master
      with:
        name: pytest-results-${{ runner.os }}-${{ matrix.python-version }}
        path: junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml
    - name: Deploy to Gemfury
      if: github.event_name == 'push'
      env:
        FURY_PUSH: ${{ secrets.FURY_PUSH }}
      run: |
        python setup.py sdist
        for sdist in dist/*.tar.gz ; do curl -F package=@"$sdist" https://${FURY_PUSH}@push.fury.io/cqcl/ ; done
