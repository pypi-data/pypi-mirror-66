{"version":3,"sources":["webpack:///./src/panels/lovelace/cards/hui-picture-glance-card.ts"],"names":["STATES_OFF","Set","customElement","HuiPictureGlanceCard","_callee","regeneratorRuntime","wrap","_context","prev","next","Promise","all","__webpack_require__","e","then","bind","abrupt","document","createElement","stop","hass","entities","entitiesFallback","type","title","image","findEntities","property","config","_this2","this","Array","isArray","camera_image","state_image","entity","Error","processConfigEntities","_entitiesDialog","_entitiesToggle","forEach","item","force_dialog","DOMAINS_TOGGLE","has","computeDomain","push","_config","changedProps","hasConfigOrEntityChanged","oldHass","get","themes","language","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","value","states","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_get","_getPrototypeOf","prototype","call","oldConfig","theme","applyThemesOnElement","_this3","html","_templateObject2","classMap","clickable","Boolean","tap_action","hold_action","_handleAction","actionHandler","hasHold","hasAction","hasDoubleClick","double_tap_action","ifDefined","state_filter","camera_view","aspect_ratio","_templateObject3","map","entityConf","renderEntity","_templateObject","dialog","stateObj","Object","assign","action","_templateObject5","state-on","state","icon","stateIcon","concat","computeStateName","computeStateDisplay","localize","show_state","_templateObject6","_templateObject7","attribute","_templateObject8","prefix","attributes","suffix","_templateObject4","ev","currentTarget","handleAction","detail","css","_templateObject9","LitElement"],"mappings":"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","file":"chunk.333bffc87011af29a9e0.js","sourcesContent":["import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n  PropertyValues,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { ifDefined } from \"lit-html/directives/if-defined\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon\";\nimport \"../components/hui-image\";\nimport \"../components/hui-warning-element\";\n\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { stateIcon } from \"../../../common/entity/state_icon\";\nimport { computeStateDisplay } from \"../../../common/entity/compute_state_display\";\nimport { DOMAINS_TOGGLE } from \"../../../common/const\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { HomeAssistant } from \"../../../types\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport { PictureGlanceCardConfig, PictureGlanceEntityConfig } from \"./types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { actionHandler } from \"../common/directives/action-handler-directive\";\nimport { hasAction } from \"../common/has-action\";\nimport { ActionHandlerEvent } from \"../../../data/lovelace\";\nimport { handleAction } from \"../common/handle-action\";\nimport { findEntities } from \"../common/find-entites\";\n\nconst STATES_OFF = new Set([\"closed\", \"locked\", \"not_home\", \"off\"]);\n\n@customElement(\"hui-picture-glance-card\")\nclass HuiPictureGlanceCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\n      /* webpackChunkName: \"hui-picture-glance-card-editor\" */ \"../editor/config-elements/hui-picture-glance-card-editor\"\n    );\n    return document.createElement(\"hui-picture-glance-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFallback: string[]\n  ): PictureGlanceCardConfig {\n    const maxEntities = 2;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFallback,\n      [\"sensor\", \"binary_sensor\"]\n    );\n\n    return {\n      type: \"picture-glance\",\n      title: \"Kitchen\",\n      image: \"https://demo.home-assistant.io/stub_config/kitchen.png\",\n      entities: foundEntities,\n    };\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: PictureGlanceCardConfig;\n\n  private _entitiesDialog?: PictureGlanceEntityConfig[];\n\n  private _entitiesToggle?: PictureGlanceEntityConfig[];\n\n  public getCardSize(): number {\n    return 3;\n  }\n\n  public setConfig(config: PictureGlanceCardConfig): void {\n    if (\n      !config ||\n      !config.entities ||\n      !Array.isArray(config.entities) ||\n      !(config.image || config.camera_image || config.state_image) ||\n      (config.state_image && !config.entity)\n    ) {\n      throw new Error(\"Invalid card configuration\");\n    }\n\n    const entities = processConfigEntities(config.entities);\n    this._entitiesDialog = [];\n    this._entitiesToggle = [];\n\n    entities.forEach((item) => {\n      if (\n        config.force_dialog ||\n        !DOMAINS_TOGGLE.has(computeDomain(item.entity))\n      ) {\n        this._entitiesDialog!.push(item);\n      } else {\n        this._entitiesToggle!.push(item);\n      }\n    });\n\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (hasConfigOrEntityChanged(this, changedProps)) {\n      return true;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n\n    if (\n      !oldHass ||\n      oldHass.themes !== this.hass!.themes ||\n      oldHass.language !== this.hass!.language\n    ) {\n      return true;\n    }\n\n    if (this._entitiesDialog) {\n      for (const entity of this._entitiesDialog) {\n        if (\n          oldHass!.states[entity.entity] !== this.hass!.states[entity.entity]\n        ) {\n          return true;\n        }\n      }\n    }\n\n    if (this._entitiesToggle) {\n      for (const entity of this._entitiesToggle) {\n        if (\n          oldHass!.states[entity.entity] !== this.hass!.states[entity.entity]\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | PictureGlanceCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    return html`\n      <ha-card>\n        <hui-image\n          class=${classMap({\n            clickable: Boolean(\n              this._config.tap_action ||\n                this._config.hold_action ||\n                this._config.camera_image\n            ),\n          })}\n          @action=${this._handleAction}\n          .actionHandler=${actionHandler({\n            hasHold: hasAction(this._config!.hold_action),\n            hasDoubleClick: hasAction(this._config!.double_tap_action),\n          })}\n          tabindex=${ifDefined(\n            hasAction(this._config.tap_action) ? \"0\" : undefined\n          )}\n          .config=${this._config}\n          .hass=${this.hass}\n          .image=${this._config.image}\n          .stateImage=${this._config.state_image}\n          .stateFilter=${this._config.state_filter}\n          .cameraImage=${this._config.camera_image}\n          .cameraView=${this._config.camera_view}\n          .entity=${this._config.entity}\n          .aspectRatio=${this._config.aspect_ratio}\n        ></hui-image>\n        <div class=\"box\">\n          ${this._config.title\n            ? html`\n                <div class=\"title\">${this._config.title}</div>\n              `\n            : \"\"}\n          <div class=\"row\">\n            ${this._entitiesDialog!.map((entityConf) =>\n              this.renderEntity(entityConf, true)\n            )}\n          </div>\n          <div class=\"row\">\n            ${this._entitiesToggle!.map((entityConf) =>\n              this.renderEntity(entityConf, false)\n            )}\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private renderEntity(\n    entityConf: PictureGlanceEntityConfig,\n    dialog: boolean\n  ): TemplateResult {\n    const stateObj = this.hass!.states[entityConf.entity];\n\n    entityConf = {\n      tap_action: { action: dialog ? \"more-info\" : \"toggle\" },\n      ...entityConf,\n    };\n\n    if (!stateObj) {\n      return html`\n        <hui-warning-element\n          label=${this.hass!.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            entityConf.entity\n          )}\n        ></hui-warning-element>\n      `;\n    }\n\n    return html`\n      <div class=\"wrapper\">\n        <ha-icon\n          @action=${this._handleAction}\n          .actionHandler=${actionHandler({\n            hasHold: hasAction(entityConf.hold_action),\n            hasDoubleClick: hasAction(entityConf.double_tap_action),\n          })}\n          tabindex=${ifDefined(\n            hasAction(entityConf.tap_action) ? \"0\" : undefined\n          )}\n          .config=${entityConf}\n          class=\"${classMap({\n            \"state-on\": !STATES_OFF.has(stateObj.state),\n          })}\"\n          .icon=\"${entityConf.icon || stateIcon(stateObj)}\"\n          title=\"${`\n            ${computeStateName(stateObj)} : ${computeStateDisplay(\n            this.hass!.localize,\n            stateObj,\n            this.hass!.language\n          )}\n          `}\"\n        ></ha-icon>\n        ${this._config!.show_state !== true && entityConf.show_state !== true\n          ? html`\n              <div class=\"state\"></div>\n            `\n          : html`\n              <div class=\"state\">\n                ${entityConf.attribute\n                  ? html`\n                      ${entityConf.prefix}${stateObj.attributes[\n                        entityConf.attribute\n                      ]}${entityConf.suffix}\n                    `\n                  : computeStateDisplay(\n                      this.hass!.localize,\n                      stateObj,\n                      this.hass!.language\n                    )}\n              </div>\n            `}\n      </div>\n    `;\n  }\n\n  private _handleAction(ev: ActionHandlerEvent) {\n    const config = (ev.currentTarget as any).config as any;\n    handleAction(this, this.hass!, config, ev.detail.action!);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        position: relative;\n        min-height: 48px;\n        overflow: hidden;\n      }\n\n      hui-image.clickable {\n        cursor: pointer;\n      }\n\n      .box {\n        /* start paper-font-common-nowrap style */\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        /* end paper-font-common-nowrap style */\n\n        position: absolute;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, 0.3);\n        padding: 4px 8px;\n        font-size: 16px;\n        line-height: 40px;\n        color: white;\n        display: flex;\n        justify-content: space-between;\n        flex-direction: row;\n      }\n\n      .box .title {\n        font-weight: 500;\n        margin-left: 8px;\n      }\n\n      ha-icon {\n        cursor: pointer;\n        padding: 8px;\n        color: #a9a9a9;\n      }\n\n      ha-icon.state-on {\n        color: white;\n      }\n      ha-icon.show-state {\n        width: 20px;\n        height: 20px;\n        padding-bottom: 4px;\n        padding-top: 4px;\n      }\n      ha-icon:focus {\n        outline: none;\n        background: var(--divider-color);\n        border-radius: 100%;\n      }\n      .state {\n        display: block;\n        font-size: 12px;\n        text-align: center;\n        line-height: 12px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .row {\n        display: flex;\n        flex-direction: row;\n      }\n      .wrapper {\n        display: flex;\n        flex-direction: column;\n        width: 40px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-glance-card\": HuiPictureGlanceCard;\n  }\n}\n"],"sourceRoot":""}