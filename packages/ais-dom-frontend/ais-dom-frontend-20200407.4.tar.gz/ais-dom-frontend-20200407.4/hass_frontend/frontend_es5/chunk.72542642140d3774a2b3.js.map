{"version":3,"sources":["webpack:///./src/panels/lovelace/components/hui-graph-base.ts","webpack:///./src/data/graph.ts","webpack:///./src/panels/lovelace/common/graph/get-path.ts","webpack:///./src/panels/lovelace/common/graph/coordinates.ts","webpack:///./src/panels/lovelace/common/graph/get-history-coordinates.ts","webpack:///./src/panels/lovelace/header-footer/hui-graph-header-footer.ts"],"names":["_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiGraphBase","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","d","kind","decorators","property","key","value","html","_templateObject","_path","svg","_templateObject2","_templateObject3","changedProps","coordinates","has","coords","next","Z","path","last","filter","Boolean","_Ax","_Ay","_Bx","_By","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","err","getPath","static","css","_templateObject4","LitElement","average","items","reduce","sum","entry","parseFloat","state","lastValue","history","hours","width","detail","forEach","item","Number","isNaN","min","Math","map","max","now","Date","getTime","res","point","age","last_changed","abs","floor","round","toString","push","yRatio","xRatio","isFinite","first","getCoords","i","offset","depth","subItem","index","x","y","height","calcPoints","getHistoryCoordinates","_ref","regeneratorRuntime","mark","_callee","hass","entity","endTime","startTime","stateHistory","wrap","_context","prev","setHours","getHours","fetchRecent","sent","abrupt","stop","_x","_x2","_x3","_x4","HuiGraphHeaderFooter","hui_graph_header_footer_decorate","hui_graph_header_footer_classCallCheck","hui_graph_header_footer_getPrototypeOf","hui_graph_header_footer_assertThisInitialized","hui_graph_header_footer_inherits","config","split","Error","cardConfig","Object","assign","hours_to_show","_config","_coordinates","hui_graph_header_footer_templateObject3","hui_graph_header_footer_templateObject2","hui_graph_header_footer_templateObject","_date","_getCoordinates","_getCoordinates2","hui_graph_header_footer_templateObject4"],"mappings":"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","file":"chunk.72542642140d3774a2b3.js","sourcesContent":["import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n  svg,\n  PropertyValues,\n} from \"lit-element\";\n\nimport { strokeWidth } from \"../../../data/graph\";\nimport { getPath } from \"../common/graph/get-path\";\n\n@customElement(\"hui-graph-base\")\nexport class HuiGraphBase extends LitElement {\n  @property() public coordinates?: any;\n  @property() private _path?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this._path\n        ? svg`<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 100\">\n          <g>\n            <mask id=\"fill\">\n              <path\n                class='fill'\n                fill='white'\n                d=\"${this._path} L 500, 100 L 0, 100 z\"\n              />\n            </mask>\n            <rect height=\"100%\" width=\"100%\" id=\"fill-rect\" fill=\"var(--accent-color)\" mask=\"url(#fill)\"></rect>\n            <mask id=\"line\">\n              <path\n                fill=\"none\"\n                stroke=\"var(--accent-color)\"\n                stroke-width=\"${strokeWidth}\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                d=${this._path}\n              ></path>\n            </mask>\n            <rect height=\"100%\" width=\"100%\" id=\"rect\" fill=\"var(--accent-color)\" mask=\"url(#line)\"></rect>\n          </g>\n        </svg>`\n        : svg`<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 100\"></svg>`}\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!this.coordinates) {\n      return;\n    }\n\n    if (changedProps.has(\"coordinates\")) {\n      this._path = getPath(this.coordinates);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: flex;\n        width: 100%;\n      }\n      .fill {\n        opacity: 0.1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-graph-base\": HuiGraphBase;\n  }\n}\n","export const strokeWidth = 5;\n","const midPoint = (\n  _Ax: number,\n  _Ay: number,\n  _Bx: number,\n  _By: number\n): number[] => {\n  const _Zx = (_Ax - _Bx) / 2 + _Bx;\n  const _Zy = (_Ay - _By) / 2 + _By;\n  return [_Zx, _Zy];\n};\n\nexport const getPath = (coords: number[][]): string => {\n  if (!coords.length) {\n    return \"\";\n  }\n\n  let next: number[];\n  let Z: number[];\n  const X = 0;\n  const Y = 1;\n  let path = \"\";\n  let last = coords.filter(Boolean)[0];\n\n  path += `M ${last[X]},${last[Y]}`;\n\n  for (const coord of coords) {\n    next = coord;\n    Z = midPoint(last[X], last[Y], next[X], next[Y]);\n    path += ` ${Z[X]},${Z[Y]}`;\n    path += ` Q${next[X]},${next[Y]}`;\n    last = next;\n  }\n\n  path += ` ${next![X]},${next![Y]}`;\n  return path;\n};\n","import { strokeWidth } from \"../../../../data/graph\";\n\nconst average = (items: any[]): number => {\n  return (\n    items.reduce((sum, entry) => sum + parseFloat(entry.state), 0) /\n    items.length\n  );\n};\n\nconst lastValue = (items: any[]): number => {\n  return parseFloat(items[items.length - 1].state) || 0;\n};\n\nconst calcPoints = (\n  history: any,\n  hours: number,\n  width: number,\n  detail: number,\n  min: number,\n  max: number\n): number[][] => {\n  const coords = [] as number[][];\n  const height = 80;\n  let yRatio = (max - min) / height;\n  yRatio = yRatio !== 0 ? yRatio : height;\n  let xRatio = width / (hours - (detail === 1 ? 1 : 0));\n  xRatio = isFinite(xRatio) ? xRatio : width;\n\n  const first = history.filter(Boolean)[0];\n  let last = [average(first), lastValue(first)];\n\n  const getCoords = (item: any[], i: number, offset = 0, depth = 1) => {\n    if (depth > 1 && item) {\n      return item.forEach((subItem, index) =>\n        getCoords(subItem, i, index, depth - 1)\n      );\n    }\n\n    const x = xRatio * (i + offset / 6);\n\n    if (item) {\n      last = [average(item), lastValue(item)];\n    }\n    const y =\n      height + strokeWidth / 2 - ((item ? last[0] : last[1]) - min) / yRatio;\n    return coords.push([x, y]);\n  };\n\n  for (let i = 0; i < history.length; i += 1) {\n    getCoords(history[i], i, 0, detail);\n  }\n\n  if (coords.length === 1) {\n    coords[1] = [width, coords[0][1]];\n  }\n\n  coords.push([width, coords[coords.length - 1][1]]);\n  return coords;\n};\n\nexport const coordinates = (\n  history: any,\n  hours: number,\n  width: number,\n  detail: number\n): number[][] | undefined => {\n  history.forEach((item) => (item.state = Number(item.state)));\n  history = history.filter((item) => !Number.isNaN(item.state));\n\n  const min = Math.min.apply(\n    Math,\n    history.map((item) => item.state)\n  );\n  const max = Math.max.apply(\n    Math,\n    history.map((item) => item.state)\n  );\n  const now = new Date().getTime();\n\n  const reduce = (res, item, point) => {\n    const age = now - new Date(item.last_changed).getTime();\n\n    let key = Math.abs(age / (1000 * 3600) - hours);\n    if (point) {\n      key = (key - Math.floor(key)) * 60;\n      key = Number((Math.round(key / 10) * 10).toString()[0]);\n    } else {\n      key = Math.floor(key);\n    }\n    if (!res[key]) {\n      res[key] = [];\n    }\n    res[key].push(item);\n    return res;\n  };\n\n  history = history.reduce((res, item) => reduce(res, item, false), []);\n  if (detail > 1) {\n    history = history.map((entry) =>\n      entry.reduce((res, item) => reduce(res, item, true), [])\n    );\n  }\n\n  if (!history.length) {\n    return undefined;\n  }\n\n  return calcPoints(history, hours, width, detail, min, max);\n};\n","import { fetchRecent } from \"../../../../data/history\";\nimport { coordinates } from \"../graph/coordinates\";\nimport { HomeAssistant } from \"../../../../types\";\n\nexport const getHistoryCoordinates = async (\n  hass: HomeAssistant,\n  entity: string,\n  hours: number,\n  detail: number\n) => {\n  const endTime = new Date();\n  const startTime = new Date();\n  startTime.setHours(endTime.getHours() - hours);\n\n  const stateHistory = await fetchRecent(hass, entity, startTime, endTime);\n\n  if (stateHistory.length < 1 || stateHistory[0].length < 1) {\n    return;\n  }\n\n  const coords = coordinates(stateHistory[0], hours, 500, detail);\n\n  return coords;\n};\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  PropertyValues,\n  CSSResult,\n  css,\n} from \"lit-element\";\n\nimport \"../components/hui-graph-base\";\n\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { HomeAssistant } from \"../../../types\";\nimport { GraphHeaderFooterConfig } from \"./types\";\nimport { getHistoryCoordinates } from \"../common/graph/get-history-coordinates\";\n\nconst MINUTE = 60000;\n\n@customElement(\"hui-graph-header-footer\")\nexport class HuiGraphHeaderFooter extends LitElement\n  implements LovelaceHeaderFooter {\n  public static getStubConfig(): object {\n    return {};\n  }\n\n  @property() public hass?: HomeAssistant;\n  @property() protected _config?: GraphHeaderFooterConfig;\n  @property() private _coordinates?: any;\n  private _date?: Date;\n\n  public setConfig(config: GraphHeaderFooterConfig): void {\n    if (!config?.entity || config.entity.split(\".\")[0] !== \"sensor\") {\n      throw new Error(\n        \"Invalid Configuration: An entity from within the sensor domain required\"\n      );\n    }\n\n    const cardConfig = {\n      detail: 1,\n      hours_to_show: 24,\n      ...config,\n    };\n\n    cardConfig.hours_to_show = Number(cardConfig.hours_to_show);\n    cardConfig.detail =\n      cardConfig.detail === 1 || cardConfig.detail === 2\n        ? cardConfig.detail\n        : 1;\n\n    this._config = cardConfig;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    if (!this._coordinates) {\n      return html`\n        <div class=\"info\">\n          No state history found.\n        </div>\n      `;\n    }\n\n    return html`\n      <hui-graph-base .coordinates=${this._coordinates}></hui-graph-base>\n    `;\n  }\n\n  protected firstUpdated(): void {\n    this._date = new Date();\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    if (changedProps.has(\"_config\")) {\n      this._getCoordinates();\n    } else if (Date.now() - this._date!.getTime() >= MINUTE) {\n      this._getCoordinates();\n    }\n  }\n\n  private async _getCoordinates(): Promise<void> {\n    this._coordinates = await getHistoryCoordinates(\n      this.hass!,\n      this._config!.entity,\n      this._config!.hours_to_show!,\n      this._config!.detail!\n    );\n\n    this._date = new Date();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .info {\n        text-align: center;\n        line-height: 58px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-graph-header-footer\": HuiGraphHeaderFooter;\n  }\n}\n"],"sourceRoot":""}