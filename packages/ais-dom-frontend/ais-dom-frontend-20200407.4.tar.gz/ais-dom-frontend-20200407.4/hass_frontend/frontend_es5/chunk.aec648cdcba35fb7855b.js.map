{"version":3,"sources":["webpack:///./src/panels/lovelace/common/validate-condition.ts","webpack:///./src/panels/lovelace/components/hui-conditional-base.ts","webpack:///./src/panels/lovelace/cards/hui-conditional-card.ts"],"names":["checkConditionsMet","conditions","hass","every","c","state","states","entity","state_not","validateConditionalConfig","__webpack_require__","d","__webpack_exports__","HuiConditionalBase","_decorate","customElement","_initialize","_UpdatingElement","F","_UpdatingElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","value","config","Error","isArray","lastChild","removeChild","_config","_element","editMode","visible","style","setProperty","parentElement","appendChild","UpdatingElement","_callee","regeneratorRuntime","wrap","_context","prev","next","Promise","all","e","then","bind","abrupt","document","createElement","stop","type","card","validateConfig","_createCardElement","computeCardSize","cardConfig","_this2","element","createCardElement","addEventListener","ev","stopPropagation","_rebuildCard","once","replaceChild"],"mappings":"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","file":"chunk.aec648cdcba35fb7855b.js","sourcesContent":["import { HomeAssistant } from \"../../../types\";\n\nexport interface Condition {\n  entity: string;\n  state?: string;\n  state_not?: string;\n}\n\nexport function checkConditionsMet(\n  conditions: Condition[],\n  hass: HomeAssistant\n): boolean {\n  return conditions.every((c) => {\n    const state = hass.states[c.entity]\n      ? hass!.states[c.entity].state\n      : \"unavailable\";\n\n    return c.state ? state === c.state : state !== c.state_not;\n  });\n}\n\nexport function validateConditionalConfig(conditions: Condition[]): boolean {\n  return conditions.every(\n    (c) => ((c.entity && (c.state || c.state_not)) as unknown) as boolean\n  );\n}\n","import { customElement, property, UpdatingElement } from \"lit-element\";\n\nimport {\n  checkConditionsMet,\n  validateConditionalConfig,\n} from \"../common/validate-condition\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCard } from \"../types\";\nimport { LovelaceRow, ConditionalRowConfig } from \"../entity-rows/types\";\nimport { ConditionalCardConfig } from \"../cards/types\";\n\n@customElement(\"hui-conditional-base\")\nexport class HuiConditionalBase extends UpdatingElement {\n  @property() public hass?: HomeAssistant;\n  @property() public editMode?: boolean;\n  @property() protected _config?: ConditionalCardConfig | ConditionalRowConfig;\n  protected _element?: LovelaceCard | LovelaceRow;\n\n  protected validateConfig(\n    config: ConditionalCardConfig | ConditionalRowConfig\n  ): void {\n    if (!config.conditions) {\n      throw new Error(\"No conditions configured.\");\n    }\n\n    if (!Array.isArray(config.conditions)) {\n      throw new Error(\"Conditions should be in an array.\");\n    }\n\n    if (!validateConditionalConfig(config.conditions)) {\n      throw new Error(\"Conditions are invalid.\");\n    }\n\n    if (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    this._config = config;\n  }\n\n  protected update(): void {\n    if (!this._element || !this.hass || !this._config) {\n      return;\n    }\n\n    this._element.editMode = this.editMode;\n\n    const visible =\n      this.editMode || checkConditionsMet(this._config.conditions, this.hass);\n\n    this.style.setProperty(\"display\", visible ? \"\" : \"none\");\n\n    if (visible) {\n      this._element.hass = this.hass;\n      if (!this._element.parentElement) {\n        this.appendChild(this._element);\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-base\": HuiConditionalBase;\n  }\n}\n","import { customElement } from \"lit-element\";\n\nimport { HuiConditionalBase } from \"../components/hui-conditional-base\";\nimport { createCardElement } from \"../create-element/create-card-element\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport { ConditionalCardConfig } from \"./types\";\nimport { LovelaceCardConfig } from \"../../../data/lovelace\";\n\n@customElement(\"hui-conditional-card\")\nclass HuiConditionalCard extends HuiConditionalBase implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\n      /* webpackChunkName: \"hui-conditional-card-editor\" */ \"../editor/config-elements/hui-conditional-card-editor\"\n    );\n    return document.createElement(\"hui-conditional-card-editor\");\n  }\n\n  public static getStubConfig(): ConditionalCardConfig {\n    return {\n      type: \"conditional\",\n      conditions: [],\n      // @ts-ignore\n      card: {},\n    };\n  }\n\n  public setConfig(config: ConditionalCardConfig): void {\n    this.validateConfig(config);\n\n    if (!config.card) {\n      throw new Error(\"No card configured.\");\n    }\n\n    this._element = this._createCardElement(config.card);\n  }\n\n  public getCardSize(): number {\n    return computeCardSize(this._element as LovelaceCard);\n  }\n\n  private _createCardElement(cardConfig: LovelaceCardConfig) {\n    const element = createCardElement(cardConfig) as LovelaceCard;\n    if (this.hass) {\n      element.hass = this.hass;\n    }\n    element.addEventListener(\n      \"ll-rebuild\",\n      (ev) => {\n        ev.stopPropagation();\n        this._rebuildCard(cardConfig);\n      },\n      { once: true }\n    );\n    return element;\n  }\n\n  private _rebuildCard(config: LovelaceCardConfig): void {\n    this._element = this._createCardElement(config);\n    if (this.lastChild) {\n      this.replaceChild(this._element, this.lastChild);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-card\": HuiConditionalCard;\n  }\n}\n"],"sourceRoot":""}