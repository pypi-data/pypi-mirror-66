{"version":3,"sources":["webpack:///./src/panels/lovelace/common/evaluate-filter.ts","webpack:///./src/panels/lovelace/cards/hui-entity-filter-card.ts"],"names":["__webpack_require__","d","__webpack_exports__","evaluateFilter","stateObj","filter","operator","value","state","attribute","attributes","match","EntityFilterCard","HTMLElement","this","_element","getCardSize","config","entities","Array","isArray","Error","state_filter","every","entity","_typeof","_config","_configEntities","undefined","_baseCardConfig","Object","assign","type","card","lastChild","removeChild","hass","_hass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","states","localize","err","element","createCardElement","editMode","_editMode","_this2","haveEntitiesChanged","processConfigEntities","entitiesList","entityConf","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","length","show_empty","_cardElement","tagName","_oldEntities","idx","setConfig","isPanel","appendChild","style","display","customElements","define"],"mappings":"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","file":"chunk.1933b7742be44d5d7eb0.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const evaluateFilter = (stateObj: HassEntity, filter: any): boolean => {\n  const operator = filter.operator || \"==\";\n  const value = filter.value || filter;\n  const state = filter.attribute\n    ? stateObj.attributes[filter.attribute]\n    : stateObj.state;\n\n  switch (operator) {\n    case \"==\":\n      return state === value;\n    case \"<=\":\n      return state <= value;\n    case \"<\":\n      return state < value;\n    case \">=\":\n      return state >= value;\n    case \">\":\n      return state > value;\n    case \"!=\":\n      return state !== value;\n    case \"regex\": {\n      return state.match(value);\n    }\n    default:\n      return false;\n  }\n};\n","import { createCardElement } from \"../create-element/create-card-element\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport { LovelaceCard } from \"../types\";\nimport { LovelaceCardConfig } from \"../../../data/lovelace\";\nimport { EntityFilterEntityConfig } from \"../entity-rows/types\";\nimport { HomeAssistant } from \"../../../types\";\nimport { EntityFilterCardConfig } from \"./types\";\nimport { evaluateFilter } from \"../common/evaluate-filter\";\n\nclass EntityFilterCard extends HTMLElement implements LovelaceCard {\n  public isPanel?: boolean;\n  private _editMode = false;\n  private _element?: LovelaceCard;\n  private _config?: EntityFilterCardConfig;\n  private _configEntities?: EntityFilterEntityConfig[];\n  private _baseCardConfig?: LovelaceCardConfig;\n  private _hass?: HomeAssistant;\n  private _oldEntities?: EntityFilterEntityConfig[];\n\n  public getCardSize(): number {\n    return this._element ? this._element.getCardSize() : 1;\n  }\n\n  public setConfig(config: EntityFilterCardConfig): void {\n    if (!config.entities || !Array.isArray(config.entities)) {\n      throw new Error(\"entities must be specified.\");\n    }\n\n    if (\n      !(config.state_filter && Array.isArray(config.state_filter)) &&\n      !config.entities.every(\n        (entity) =>\n          typeof entity === \"object\" &&\n          entity.state_filter &&\n          Array.isArray(entity.state_filter)\n      )\n    ) {\n      throw new Error(\"Incorrect filter config.\");\n    }\n\n    this._config = config;\n    this._configEntities = undefined;\n    this._baseCardConfig = {\n      type: \"entities\",\n      entities: [],\n      ...this._config.card,\n    };\n\n    if (this.lastChild) {\n      this.removeChild(this.lastChild);\n      this._element = undefined;\n    }\n  }\n\n  set editMode(editMode: boolean) {\n    this._editMode = editMode;\n    if (!this._element) {\n      return;\n    }\n    this._element.editMode = editMode;\n  }\n\n  set hass(hass: HomeAssistant) {\n    if (!hass || !this._config) {\n      return;\n    }\n\n    if (!this.haveEntitiesChanged(hass)) {\n      this._hass = hass;\n      return;\n    }\n\n    this._hass = hass;\n\n    if (!this._configEntities) {\n      this._configEntities = processConfigEntities(this._config.entities);\n    }\n\n    const entitiesList = this._configEntities.filter((entityConf) => {\n      const stateObj = hass.states[entityConf.entity];\n\n      if (!stateObj) {\n        return false;\n      }\n\n      if (entityConf.state_filter) {\n        for (const filter of entityConf.state_filter) {\n          if (evaluateFilter(stateObj, filter)) {\n            return true;\n          }\n        }\n      } else {\n        for (const filter of this._config!.state_filter) {\n          if (evaluateFilter(stateObj, filter)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    });\n\n    if (entitiesList.length === 0 && this._config.show_empty === false) {\n      this.style.display = \"none\";\n      return;\n    }\n\n    const element = this._cardElement();\n\n    if (!element) {\n      return;\n    }\n\n    if (element.tagName !== \"HUI-ERROR-CARD\") {\n      const isSame =\n        this._oldEntities &&\n        entitiesList.length === this._oldEntities.length &&\n        entitiesList.every((entity, idx) => entity === this._oldEntities![idx]);\n\n      if (!isSame) {\n        this._oldEntities = entitiesList;\n        element.setConfig({ ...this._baseCardConfig!, entities: entitiesList });\n      }\n\n      element.isPanel = this.isPanel;\n      element.editMode = this._editMode;\n      element.hass = hass;\n    }\n\n    // Attach element if it has never been attached.\n    if (!this.lastChild) {\n      this.appendChild(element);\n    }\n\n    this.style.display = \"block\";\n  }\n\n  private haveEntitiesChanged(hass: HomeAssistant): boolean {\n    if (!this._hass) {\n      return true;\n    }\n\n    if (!this._configEntities) {\n      return true;\n    }\n\n    for (const config of this._configEntities) {\n      if (\n        this._hass.states[config.entity] !== hass.states[config.entity] ||\n        this._hass.localize !== hass.localize\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private _cardElement(): LovelaceCard | undefined {\n    if (!this._element && this._config) {\n      const element = createCardElement(this._baseCardConfig!);\n      this._element = element;\n    }\n\n    return this._element;\n  }\n}\ncustomElements.define(\"hui-entity-filter-card\", EntityFilterCard);\n"],"sourceRoot":""}