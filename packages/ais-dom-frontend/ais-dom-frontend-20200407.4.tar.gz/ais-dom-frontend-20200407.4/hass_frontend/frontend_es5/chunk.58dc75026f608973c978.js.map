{"version":3,"sources":["webpack:///./src/panels/lovelace/common/evaluate-filter.ts","webpack:///./src/panels/lovelace/badges/hui-entity-filter-badge.ts"],"names":["__webpack_require__","d","__webpack_exports__","evaluateFilter","stateObj","filter","operator","value","state","attribute","attributes","match","EntityFilterBadge","HTMLElement","config","entities","Array","isArray","Error","state_filter","every","entity","_typeof","this","_config","_configEntities","undefined","lastChild","removeChild","_elements","hass","_hass","localize","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","states","err","_this2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","haveEntitiesChanged","processConfigEntities","entitiesList","entityConf","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","length","_oldEntities","idx","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","badgeConfig","element","createBadgeElement","push","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","appendChild","style","display","customElements","define"],"mappings":"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","file":"chunk.58dc75026f608973c978.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const evaluateFilter = (stateObj: HassEntity, filter: any): boolean => {\n  const operator = filter.operator || \"==\";\n  const value = filter.value || filter;\n  const state = filter.attribute\n    ? stateObj.attributes[filter.attribute]\n    : stateObj.state;\n\n  switch (operator) {\n    case \"==\":\n      return state === value;\n    case \"<=\":\n      return state <= value;\n    case \"<\":\n      return state < value;\n    case \">=\":\n      return state >= value;\n    case \">\":\n      return state > value;\n    case \"!=\":\n      return state !== value;\n    case \"regex\": {\n      return state.match(value);\n    }\n    default:\n      return false;\n  }\n};\n","import { createBadgeElement } from \"../create-element/create-badge-element\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport { LovelaceBadge } from \"../types\";\nimport { EntityFilterEntityConfig } from \"../entity-rows/types\";\nimport { HomeAssistant } from \"../../../types\";\nimport { EntityFilterBadgeConfig } from \"./types\";\nimport { evaluateFilter } from \"../common/evaluate-filter\";\n\nclass EntityFilterBadge extends HTMLElement implements LovelaceBadge {\n  private _elements?: LovelaceBadge[];\n  private _config?: EntityFilterBadgeConfig;\n  private _configEntities?: EntityFilterEntityConfig[];\n  private _hass?: HomeAssistant;\n  private _oldEntities?: EntityFilterEntityConfig[];\n\n  public setConfig(config: EntityFilterBadgeConfig): void {\n    if (!config.entities || !Array.isArray(config.entities)) {\n      throw new Error(\"entities must be specified.\");\n    }\n\n    if (\n      !(config.state_filter && Array.isArray(config.state_filter)) &&\n      !config.entities.every(\n        (entity) =>\n          typeof entity === \"object\" &&\n          entity.state_filter &&\n          Array.isArray(entity.state_filter)\n      )\n    ) {\n      throw new Error(\"Incorrect filter config.\");\n    }\n\n    this._config = config;\n    this._configEntities = undefined;\n\n    if (this.lastChild) {\n      this.removeChild(this.lastChild);\n      this._elements = undefined;\n    }\n  }\n\n  set hass(hass: HomeAssistant) {\n    if (!hass || !this._config) {\n      return;\n    }\n\n    if (this._elements) {\n      for (const element of this._elements) {\n        element.hass = hass;\n      }\n    }\n\n    if (!this.haveEntitiesChanged(hass)) {\n      this._hass = hass;\n      return;\n    }\n\n    this._hass = hass;\n\n    if (!this._configEntities) {\n      this._configEntities = processConfigEntities(this._config.entities);\n    }\n\n    const entitiesList = this._configEntities.filter((entityConf) => {\n      const stateObj = hass.states[entityConf.entity];\n\n      if (!stateObj) {\n        return false;\n      }\n\n      if (entityConf.state_filter) {\n        for (const filter of entityConf.state_filter) {\n          if (evaluateFilter(stateObj, filter)) {\n            return true;\n          }\n        }\n      } else {\n        for (const filter of this._config!.state_filter) {\n          if (evaluateFilter(stateObj, filter)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    });\n\n    if (entitiesList.length === 0) {\n      this.style.display = \"none\";\n      return;\n    }\n\n    const isSame =\n      this._oldEntities &&\n      entitiesList.length === this._oldEntities.length &&\n      entitiesList.every((entity, idx) => entity === this._oldEntities![idx]);\n\n    if (!isSame) {\n      this._elements = [];\n      for (const badgeConfig of entitiesList) {\n        const element = createBadgeElement(badgeConfig);\n        element.hass = hass;\n        this._elements.push(element);\n      }\n      this._oldEntities = entitiesList;\n    }\n\n    if (!this._elements) {\n      return;\n    }\n\n    while (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    for (const element of this._elements) {\n      this.appendChild(element);\n    }\n\n    this.style.display = \"inline\";\n  }\n\n  private haveEntitiesChanged(hass: HomeAssistant): boolean {\n    if (!this._hass) {\n      return true;\n    }\n\n    if (!this._configEntities || this._hass.localize !== hass.localize) {\n      return true;\n    }\n\n    for (const config of this._configEntities) {\n      if (this._hass.states[config.entity] !== hass.states[config.entity]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\ncustomElements.define(\"hui-entity-filter-badge\", EntityFilterBadge);\n"],"sourceRoot":""}