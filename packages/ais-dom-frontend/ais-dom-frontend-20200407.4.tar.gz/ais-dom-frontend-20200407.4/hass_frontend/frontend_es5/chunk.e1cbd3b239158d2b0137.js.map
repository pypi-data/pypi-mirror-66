{"version":3,"sources":["webpack:///./src/data/input_select.ts","webpack:///./src/data/input_text.ts","webpack:///./src/data/input_datetime.ts","webpack:///./src/data/input_boolean.ts","webpack:///./src/data/input_number.ts","webpack:///./src/panels/config/helpers/forms/ha-input_boolean-form.ts","webpack:///./src/panels/config/helpers/forms/ha-input_text-form.ts","webpack:///./src/panels/config/helpers/forms/ha-input_datetime-form.ts","webpack:///./src/panels/config/helpers/forms/ha-input_select-form.ts","webpack:///./src/panels/config/helpers/forms/ha-input_number-form.ts"],"names":["__webpack_require__","d","__webpack_exports__","setInputSelectOption","fetchInputSelect","createInputSelect","updateInputSelect","deleteInputSelect","hass","entity","option","callService","entity_id","callWS","type","values","Object","assign","id","updates","input_select_id","setValue","fetchInputText","createInputText","updateInputText","deleteInputText","value","split","input_text_id","setInputDateTimeValue","fetchInputDateTime","createInputDateTime","updateInputDateTime","deleteInputDateTime","entityId","param","time","arguments","length","undefined","date","input_datetime_id","fetchInputBoolean","createInputBoolean","updateInputBoolean","deleteInputBoolean","input_boolean_id","fetchInputNumber","createInputNumber","updateInputNumber","deleteInputNumber","input_number_id","customElement","property","item","this","_item","_name","name","_icon","icon","_this2","updateComplete","then","_ref","_this2$shadowRoot","shadowRoot","querySelector","focus","html","_templateObject","nameInvalid","trim","_templateObject2","_valueChanged","localize","ev","stopPropagation","configValue","target","detail","concat","newValue","fireEvent","haStyle","css","_templateObject3","LitElement","_max","max","_min","min","_mode","mode","_pattern","pattern","_this$hass$userData","userData","showAdvanced","_modeChanged","_templateObject4","has_time","has_date","includes","query","_options","options","_this3","map","index","_removeOption","_handleKeyAdd","_addOption","keyCode","input","_optionInput","_toConsumableArray","_callee","regeneratorRuntime","wrap","_context","prev","next","showConfirmationDialog","title","text","sent","abrupt","splice","stop","_templateObject5","_item$max","_item$min","_step","step","_unit_of_measurement","unit_of_measurement"],"mappings":"uFAiBAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAO,IAAMJ,EAAuB,SAClCK,EACAC,EACAC,GAHkC,OAKlCF,EAAKG,YAAY,eAAgB,gBAAiB,CAChDD,SACAE,UAAWH,KAGFL,EAAmB,SAACI,GAAD,OAC9BA,EAAKK,OAAsB,CAAEC,KAAM,uBAExBT,EAAoB,SAC/BG,EACAO,GAF+B,OAI/BP,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,uBACHC,KAGMT,EAAoB,SAC/BE,EACAU,EACAC,GAH+B,OAK/BX,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,sBACNM,gBAAiBF,GACdC,KAGMZ,EAAoB,SAACC,EAAqBU,GAAtB,OAC/BV,EAAKK,OAAO,CACVC,KAAM,sBACNM,gBAAiBF,uCC9BrBlB,EAAAC,EAAAC,EAAA,sBAAAmB,IAAArB,EAAAC,EAAAC,EAAA,sBAAAoB,IAAAtB,EAAAC,EAAAC,EAAA,sBAAAqB,IAAAvB,EAAAC,EAAAC,EAAA,sBAAAsB,IAAAxB,EAAAC,EAAAC,EAAA,sBAAAuB,IAAO,IAAMJ,EAAW,SAACb,EAAqBC,EAAgBiB,GAAtC,OACtBlB,EAAKG,YAAYF,EAAOkB,MAAM,IAAK,GAAG,GAAI,YAAa,CACrDD,QACAd,UAAWH,KAGFa,EAAiB,SAACd,GAAD,OAC5BA,EAAKK,OAAoB,CAAEC,KAAM,qBAEtBS,EAAkB,SAC7Bf,EACAO,GAF6B,OAI7BP,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,qBACHC,KAGMS,EAAkB,SAC7BhB,EACAU,EACAC,GAH6B,OAK7BX,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,oBACNc,cAAeV,GACZC,KAGMM,EAAkB,SAACjB,EAAqBU,GAAtB,OAC7BV,EAAKK,OAAO,CACVC,KAAM,oBACNc,cAAeV,uCCpCnBlB,EAAAC,EAAAC,EAAA,sBAAA2B,IAAA7B,EAAAC,EAAAC,EAAA,sBAAA4B,IAAA9B,EAAAC,EAAAC,EAAA,sBAAA6B,IAAA/B,EAAAC,EAAAC,EAAA,sBAAA8B,IAAAhC,EAAAC,EAAAC,EAAA,sBAAA+B,IAAO,IAAMJ,EAAwB,SACnCrB,EACA0B,GAGG,IACGC,EAAQ,CAAEvB,UAAWsB,EAAUE,KADlCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAFwBE,EAGgBC,KADxCH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QADwBE,GAG3B/B,EAAKG,YAAYuB,EAASP,MAAM,IAAK,GAAG,GAAI,eAAgBQ,IAGjDL,EAAqB,SAACtB,GAAD,OAChCA,EAAKK,OAAwB,CAAEC,KAAM,yBAE1BiB,EAAsB,SACjCvB,EACAO,GAFiC,OAIjCP,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,yBACHC,KAGMiB,EAAsB,SACjCxB,EACAU,EACAC,GAHiC,OAKjCX,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,wBACN2B,kBAAmBvB,GAChBC,KAGMc,EAAsB,SAACzB,EAAqBU,GAAtB,OACjCV,EAAKK,OAAO,CACVC,KAAM,wBACN2B,kBAAmBvB,uCCxCvBlB,EAAAC,EAAAC,EAAA,sBAAAwC,IAAA1C,EAAAC,EAAAC,EAAA,sBAAAyC,IAAA3C,EAAAC,EAAAC,EAAA,sBAAA0C,IAAA5C,EAAAC,EAAAC,EAAA,sBAAA2C,IAAO,IAAMH,EAAoB,SAAClC,GAAD,OAC/BA,EAAKK,OAAuB,CAAEC,KAAM,wBAEzB6B,EAAqB,SAChCnC,EACAO,GAFgC,OAIhCP,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,wBACHC,KAGM6B,EAAqB,SAChCpC,EACAU,EACAC,GAHgC,OAKhCX,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,uBACNgC,iBAAkB5B,GACfC,KAGM0B,EAAqB,SAACrC,EAAqBU,GAAtB,OAChCV,EAAKK,OAAO,CACVC,KAAM,uBACNgC,iBAAkB5B,uCChBtBlB,EAAAC,EAAAC,EAAA,sBAAA6C,IAAA/C,EAAAC,EAAAC,EAAA,sBAAA8C,IAAAhD,EAAAC,EAAAC,EAAA,sBAAA+C,IAAAjD,EAAAC,EAAAC,EAAA,sBAAAgD,IAAO,IAAMH,EAAmB,SAACvC,GAAD,OAC9BA,EAAKK,OAAsB,CAAEC,KAAM,uBAExBkC,EAAoB,SAC/BxC,EACAO,GAF+B,OAI/BP,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,uBACHC,KAGMkC,EAAoB,SAC/BzC,EACAU,EACAC,GAH+B,OAK/BX,EAAKK,OAALG,OAAAC,OAAA,CACEH,KAAM,sBACNqC,gBAAiBjC,GACdC,KAGM+B,EAAoB,SAAC1C,EAAqBU,GAAtB,OAC/BV,EAAKK,OAAO,CACVC,KAAM,sBACNqC,gBAAiBjC,khRChCpBkC,YAAc,0oBAEZC,kEACAA,yGAEAA,mEACAA,sEAED,SAASC,GACPC,KAAKC,MAAQF,EACTA,GACFC,KAAKE,MAAQH,EAAKI,MAAQ,GAC1BH,KAAKI,MAAQL,EAAKM,MAAQ,KAE1BL,KAAKE,MAAQ,GACbF,KAAKI,MAAQ,uCAIjB,WAAe,IAAAE,EAAAN,KACbA,KAAKO,eAAeC,KAAK,eAAAC,EAAAC,EAAA,eAAAD,EAAA,QAAAC,EACtBJ,EAAKK,kBADiB,IAAAD,OAAA,EACtBA,EAAiBE,cAChB,+BAFqB,IAAAH,OAAA,EACvBA,EAEmBI,8CAIvB,WACE,IAAKb,KAAK/C,KACR,OAAO6D,YAAPC,KAEF,IAAMC,GAAehB,KAAKE,OAA+B,KAAtBF,KAAKE,MAAMe,OAE9C,OAAOH,YAAPI,IAGelB,KAAKE,MACC,OACEF,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAEepB,KAAK/C,KAAMmE,SAC1B,iDAESJ,EAIFhB,KAAKI,MACC,OACEJ,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAIFpB,KAAK/C,KAAMmE,SACX,wGAMR,SAAsBC,GACpB,GAAKrB,KAAA,KAAaA,KAAKC,MAAvB,CAGAoB,EAAGC,kBACH,IAAMC,EAAeF,EAAGG,OAAeD,YACjCpD,EAAQkD,EAAGI,OAAOtD,MACxB,GAAI6B,KAAA,IAAA0B,OAASH,MAAmBpD,EAAhC,CAGA,IAAMwD,EAAQlE,OAAAC,OAAA,GAAQsC,KAAKC,OACtB9B,EAGHwD,EAASJ,GAAeF,EAAGI,OAAOtD,aAF3BwD,EAASJ,GAIlBK,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAOwD,iDAIX,WACE,MAAO,CACLE,IACAC,YAFKC,WArFsBC,s2TCDhCnC,YAAc,uoBAEZC,kEACAA,yGAEAA,mEACAA,mEACAA,kEACAA,kEACAA,mEACAA,yEAED,SAASC,GACPC,KAAKC,MAAQF,EACTA,GACFC,KAAKE,MAAQH,EAAKI,MAAQ,GAC1BH,KAAKI,MAAQL,EAAKM,MAAQ,GAC1BL,KAAKiC,KAAOlC,EAAKmC,KAAO,IACxBlC,KAAKmC,KAAOpC,EAAKqC,KAAO,EACxBpC,KAAKqC,MAAQtC,EAAKuC,MAAQ,OAC1BtC,KAAKuC,SAAWxC,EAAKyC,UAErBxC,KAAKE,MAAQ,GACbF,KAAKI,MAAQ,GACbJ,KAAKiC,KAAO,IACZjC,KAAKmC,KAAO,EACZnC,KAAKqC,MAAQ,2CAIjB,WAAe,IAAA/B,EAAAN,KACbA,KAAKO,eAAeC,KAAK,eAAAC,EAAAC,EAAA,eAAAD,EAAA,QAAAC,EACtBJ,EAAKK,kBADiB,IAAAD,OAAA,EACtBA,EAAiBE,cAChB,+BAFqB,IAAAH,OAAA,EACvBA,EAEmBI,8CAIvB,WAAmC,IAAA4B,EACjC,IAAKzC,KAAK/C,KACR,OAAO6D,YAAPC,KAEF,IAAMC,GAAehB,KAAKE,OAA+B,KAAtBF,KAAKE,MAAMe,OAE9C,OAAOH,YAAPI,IAGelB,KAAKE,MACC,OACEF,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAEepB,KAAK/C,KAAMmE,SAC1B,iDAESJ,EAIFhB,KAAKI,MACC,OACEJ,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,4CAGF,QAAAqB,EAAAzC,KAAK/C,KAAKyF,gBAAV,IAAAD,OAAA,EAAAA,EAAoBE,cAClB7B,YADFiB,IAGe/B,KAAKmC,KACC,MAIEnC,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,6CAIOpB,KAAKiC,KACC,MAIEjC,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,6CAIApB,KAAK/C,KAAKmE,SACV,8CAGYpB,KAAKqC,MACGrC,KAAK4C,aAGrB5C,KAAK/C,KAAKmE,SACV,8CAIApB,KAAK/C,KAAKmE,SACV,kDAMGpB,KAAKuC,SACC,UACEvC,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,kDAIN,8CAKV,SAAqBC,GACnBO,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAKV,OAAAC,OAAA,GAAOsC,KAAKC,MAAZ,CAAmBqC,KAAMjB,EAAGI,OAAOtD,qDAI5C,SAAsBkD,GACpB,GAAKrB,KAAA,KAAaA,KAAKC,MAAvB,CAGAoB,EAAGC,kBACH,IAAMC,EAAeF,EAAGG,OAAeD,YACjCpD,EAAQkD,EAAGI,OAAOtD,MACxB,GAAI6B,KAAA,IAAA0B,OAASH,MAAmBpD,EAAhC,CAGA,IAAMwD,EAAQlE,OAAAC,OAAA,GAAQsC,KAAKC,OACtB9B,EAGHwD,EAASJ,GAAeF,EAAGI,OAAOtD,aAF3BwD,EAASJ,GAIlBK,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAOwD,iDAIX,WACE,MAAO,CACLE,IACAC,YAFKe,WAxJmBb,g8RCD7BnC,YAAc,2oBAEZC,kEACAA,yGAEAA,mEACAA,mEACAA,sEAED,SAASC,GACPC,KAAKC,MAAQF,EACTA,GACFC,KAAKE,MAAQH,EAAKI,MAAQ,GAC1BH,KAAKI,MAAQL,EAAKM,MAAQ,GAC1BL,KAAKqC,MACHtC,EAAK+C,UAAY/C,EAAKgD,SAClB,WACAhD,EAAK+C,SACL,OACA,SAEN9C,KAAKE,MAAQ,GACbF,KAAKI,MAAQ,GACbJ,KAAKqC,MAAQ,2CAIjB,WAAe,IAAA/B,EAAAN,KACbA,KAAKO,eAAeC,KAAK,eAAAC,EAAAC,EAAA,eAAAD,EAAA,QAAAC,EACtBJ,EAAKK,kBADiB,IAAAD,OAAA,EACtBA,EAAiBE,cAChB,+BAFqB,IAAAH,OAAA,EACvBA,EAEmBI,8CAIvB,WACE,IAAKb,KAAK/C,KACR,OAAO6D,YAAPC,KAEF,IAAMC,GAAehB,KAAKE,OAA+B,KAAtBF,KAAKE,MAAMe,OAE9C,OAAOH,YAAPI,IAGelB,KAAKE,MACC,OACEF,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAEepB,KAAK/C,KAAMmE,SAC1B,iDAESJ,EAIFhB,KAAKI,MACC,OACEJ,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAIFpB,KAAK/C,KAAKmE,SAAS,kDAGPpB,KAAKqC,MACGrC,KAAK4C,aAGrB5C,KAAK/C,KAAKmE,SACV,kDAIApB,KAAK/C,KAAKmE,SACV,kDAIApB,KAAK/C,KAAKmE,SACV,iGAQZ,SAAqBC,GACnB,IAAMiB,EAAOjB,EAAGI,OAAOtD,MACvByD,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAKV,OAAAC,OAAA,GACAsC,KAAKC,MADL,CAEH6C,SAAU,CAAC,OAAQ,YAAYE,SAASV,GACxCS,SAAU,CAAC,OAAQ,YAAYC,SAASV,kDAK9C,SAAsBjB,GACpB,GAAKrB,KAAA,KAAaA,KAAKC,MAAvB,CAGAoB,EAAGC,kBACH,IAAMC,EAAeF,EAAGG,OAAeD,YACjCpD,EAAQkD,EAAGI,OAAOtD,MACxB,GAAI6B,KAAA,IAAA0B,OAASH,MAAmBpD,EAAhC,CAGA,IAAMwD,EAAQlE,OAAAC,OAAA,GAAQsC,KAAKC,OACtB9B,EAGHwD,EAASJ,GAAeF,EAAGI,OAAOtD,aAF3BwD,EAASJ,GAIlBK,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAOwD,iDAIX,WACE,MAAO,CACLE,IACAC,YAFKC,WA3HuBC,47TCGjCnC,YAAc,yoBAEZC,kEACAA,yGAEAA,mEACAA,mEACAA,qDAAwC,+BACxCmD,YAAM,gFAEP,SAASlD,GACPC,KAAKC,MAAQF,EACTA,GACFC,KAAKE,MAAQH,EAAKI,MAAQ,GAC1BH,KAAKI,MAAQL,EAAKM,MAAQ,GAC1BL,KAAKkD,SAAWnD,EAAKoD,SAAW,KAEhCnD,KAAKE,MAAQ,GACbF,KAAKI,MAAQ,GACbJ,KAAKkD,SAAW,uCAIpB,WAAe,IAAA5C,EAAAN,KACbA,KAAKO,eAAeC,KAAK,eAAAC,EAAAC,EAAA,eAAAD,EAAA,QAAAC,EACtBJ,EAAKK,kBADiB,IAAAD,OAAA,EACtBA,EAAiBE,cAChB,+BAFqB,IAAAH,OAAA,EACvBA,EAEmBI,8CAIvB,WAAmC,IAAAuC,EAAApD,KACjC,IAAKA,KAAK/C,KACR,OAAO6D,YAAPC,KAEF,IAAMC,GAAehB,KAAKE,OAA+B,KAAtBF,KAAKE,MAAMe,OAE9C,OAAOH,YAAPI,IAGelB,KAAKE,MACC,OACEF,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAEepB,KAAK/C,KAAMmE,SAC1B,iDAESJ,EAIFhB,KAAKI,MACC,OACEJ,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAGFpB,KAAK/C,KAAMmE,SACX,mDAEApB,KAAKkD,SAASnE,OACZiB,KAAKkD,SAASG,IAAI,SAAClG,EAAQmG,GACzB,OAAOxC,YAAPiB,IAEwB5E,EAETmG,EACAF,EAAKnG,KAAKmE,SACjB,yDAEOgC,EAAKG,iBAMtBzC,YAhBF+B,IAkBQ7C,KAAK/C,KAAMmE,SACX,uDAQGpB,KAAK/C,KAAMmE,SAClB,sDAESpB,KAAKwD,cAEGxD,KAAKyD,WACrBzD,KAAK/C,KAAMmE,SACZ,2FAQZ,SAAsBC,GACpBA,EAAGC,kBACgB,KAAfD,EAAGqC,SAGP1D,KAAKyD,qDAGP,WACE,IAAME,EAAQ3D,KAAK4D,aACdD,GAAUA,EAAMxF,QAGrByD,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAKV,OAAAC,OAAA,GAAOsC,KAAKC,MAAZ,CAAmBkD,QAAO,GAAAzB,OAAAmC,EAAM7D,KAAKkD,UAAX,CAAqBS,EAAMxF,YAE5DwF,EAAMxF,MAAQ,6FAGhB,SAAA2F,EAA4BzC,GAA5B,IAAAiC,EAAAH,EAAA,OAAAY,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYC,YAAuBpE,KAAM,CACnCqE,MAAO,oBACPC,KAAM,+CAJZ,UAAAL,EAAAM,KAAA,CAAAN,EAAAE,KAAA,eAAAF,EAAAO,OAAA,iBASQlB,EAASjC,EAAGG,OAAe8B,OAC3BH,EAVRU,EAUsB7D,KAAKkD,WACjBuB,OAAOnB,EAAO,GACtB1B,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAKV,OAAAC,OAAA,GAAOsC,KAAKC,MAAZ,CAAmBkD,cAb5B,wBAAAc,EAAAS,SAAAZ,EAAA9D,qRAiBA,SAAsBqB,GACpB,GAAKrB,KAAA,KAAaA,KAAKC,MAAvB,CAGAoB,EAAGC,kBACH,IAAMC,EAAeF,EAAGG,OAAeD,YACjCpD,EAAQkD,EAAGI,OAAOtD,MACxB,GAAI6B,KAAA,IAAA0B,OAASH,MAAmBpD,EAAhC,CAGA,IAAMwD,EAAQlE,OAAAC,OAAA,GAAQsC,KAAKC,OACtB9B,EAGHwD,EAASJ,GAAeF,EAAGI,OAAOtD,aAF3BwD,EAASJ,GAIlBK,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAOwD,iDAIX,WACE,MAAO,CACLE,IACAC,YAFK6C,WAlKqB3C,00TCL/BnC,YAAc,yoBAEZC,kEACAA,yGAEAA,mEACAA,mEACAA,kEACAA,kEACAA,mEACAA,mEAEAA,qFAED,SAASC,GAEG,IAAA6E,EAAAC,GADV7E,KAAKC,MAAQF,EACTA,IACFC,KAAKE,MAAQH,EAAKI,MAAQ,GAC1BH,KAAKI,MAAQL,EAAKM,MAAQ,GAC1BL,KAAKiC,KAAL,QAAA2C,EAAY7E,EAAKmC,WAAjB,IAAA0C,IAAwB,IACxB5E,KAAKmC,KAAL,QAAA0C,EAAY9E,EAAKqC,WAAjB,IAAAyC,IAAwB,EACxB7E,KAAKqC,MAAQtC,EAAKuC,MAAQ,SAC1BtC,KAAK8E,MAAQ/E,EAAKgF,MAAQ,EAC1B/E,KAAKgF,qBAAuBjF,EAAKkF,sBAEjCjF,KAAKC,MAAQ,CACXmC,IAAK,EACLF,IAAK,GAEPlC,KAAKE,MAAQ,GACbF,KAAKI,MAAQ,GACbJ,KAAKiC,KAAO,IACZjC,KAAKmC,KAAO,EACZnC,KAAKqC,MAAQ,SACbrC,KAAK8E,MAAQ,sCAIjB,WAAe,IAAAxE,EAAAN,KACbA,KAAKO,eAAeC,KAAK,eAAAC,EAAAC,EAAA,eAAAD,EAAA,QAAAC,EACtBJ,EAAKK,kBADiB,IAAAD,OAAA,EACtBA,EAAiBE,cAChB,+BAFqB,IAAAH,OAAA,EACvBA,EAEmBI,8CAIvB,WAAmC,IAAA4B,EACjC,IAAKzC,KAAK/C,KACR,OAAO6D,YAAPC,KAEF,IAAMC,GAAehB,KAAKE,OAA+B,KAAtBF,KAAKE,MAAMe,OAE9C,OAAOH,YAAPI,IAGelB,KAAKE,MACC,OACEF,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAEepB,KAAK/C,KAAMmE,SAC1B,iDAESJ,EAIFhB,KAAKI,MACC,OACEJ,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,2CAIOpB,KAAKmC,KACC,MAEEnC,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,+CAIOpB,KAAKiC,KACC,MAEEjC,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,gDAGF,QAAAqB,EAAAzC,KAAK/C,KAAKyF,gBAAV,IAAAD,OAAA,EAAAA,EAAoBE,cAClB7B,YADFiB,IAGQ/B,KAAK/C,KAAKmE,SACV,gDAGYpB,KAAKqC,MACGrC,KAAK4C,aAGrB5C,KAAK/C,KAAKmE,SACV,kDAIApB,KAAK/C,KAAKmE,SACV,+CAMGpB,KAAK8E,MACC,OAEE9E,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,gDAKOpB,KAAKgF,qBACC,sBACEhF,KAAKmB,cACbnB,KAAK/C,KAAMmE,SAClB,gEAIN,8CAKV,SAAqBC,GACnBO,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAKV,OAAAC,OAAA,GAAOsC,KAAKC,MAAZ,CAAmBqC,KAAMjB,EAAGI,OAAOtD,qDAI5C,SAAsBkD,GACpB,GAAKrB,KAAA,KAAaA,KAAKC,MAAvB,CAGAoB,EAAGC,kBACH,IAAMC,EAAeF,EAAGG,OAAeD,YACjCpD,EAAQkD,EAAGI,OAAOtD,MACxB,GAAI6B,KAAA,IAAA0B,OAASH,MAAmBpD,EAAhC,CAGA,IAAMwD,EAAQlE,OAAAC,OAAA,GAAQsC,KAAKC,YACbjB,IAAVb,GAAiC,KAAVA,SAClBwD,EAASJ,GAEhBI,EAASJ,GAAeF,EAAGI,OAAOtD,MAEpCyD,YAAU5B,KAAM,gBAAiB,CAC/B7B,MAAOwD,iDAIX,WACE,MAAO,CACLE,IACAC,YAFKe,WAtKqBb","file":"chunk.e1cbd3b239158d2b0137.js","sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport interface InputSelect {\n  id: string;\n  name: string;\n  options: string[];\n  icon?: string;\n  initial?: string;\n}\n\nexport interface InputSelectMutableParams {\n  name: string;\n  icon: string;\n  initial: string;\n  options: string[];\n}\n\nexport const setInputSelectOption = (\n  hass: HomeAssistant,\n  entity: string,\n  option: string\n) =>\n  hass.callService(\"input_select\", \"select_option\", {\n    option,\n    entity_id: entity,\n  });\n\nexport const fetchInputSelect = (hass: HomeAssistant) =>\n  hass.callWS<InputSelect[]>({ type: \"input_select/list\" });\n\nexport const createInputSelect = (\n  hass: HomeAssistant,\n  values: InputSelectMutableParams\n) =>\n  hass.callWS<InputSelect>({\n    type: \"input_select/create\",\n    ...values,\n  });\n\nexport const updateInputSelect = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<InputSelectMutableParams>\n) =>\n  hass.callWS<InputSelect>({\n    type: \"input_select/update\",\n    input_select_id: id,\n    ...updates,\n  });\n\nexport const deleteInputSelect = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"input_select/delete\",\n    input_select_id: id,\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface InputText {\n  id: string;\n  name: string;\n  icon?: string;\n  initial?: string;\n  min?: number;\n  max?: number;\n  pattern?: string;\n  mode?: \"text\" | \"password\";\n}\n\nexport interface InputTextMutableParams {\n  name: string;\n  icon: string;\n  initial: string;\n  min: number;\n  max: number;\n  pattern: string;\n  mode: \"text\" | \"password\";\n}\n\nexport const setValue = (hass: HomeAssistant, entity: string, value: string) =>\n  hass.callService(entity.split(\".\", 1)[0], \"set_value\", {\n    value,\n    entity_id: entity,\n  });\n\nexport const fetchInputText = (hass: HomeAssistant) =>\n  hass.callWS<InputText[]>({ type: \"input_text/list\" });\n\nexport const createInputText = (\n  hass: HomeAssistant,\n  values: InputTextMutableParams\n) =>\n  hass.callWS<InputText>({\n    type: \"input_text/create\",\n    ...values,\n  });\n\nexport const updateInputText = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<InputTextMutableParams>\n) =>\n  hass.callWS<InputText>({\n    type: \"input_text/update\",\n    input_text_id: id,\n    ...updates,\n  });\n\nexport const deleteInputText = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"input_text/delete\",\n    input_text_id: id,\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface InputDateTime {\n  id: string;\n  name: string;\n  icon?: string;\n  initial?: string;\n  has_time: boolean;\n  has_date: boolean;\n}\n\nexport interface InputDateTimeMutableParams {\n  name: string;\n  icon: string;\n  initial: string;\n  has_time: boolean;\n  has_date: boolean;\n}\n\nexport const setInputDateTimeValue = (\n  hass: HomeAssistant,\n  entityId: string,\n  time: string | undefined = undefined,\n  date: string | undefined = undefined\n) => {\n  const param = { entity_id: entityId, time, date };\n  hass.callService(entityId.split(\".\", 1)[0], \"set_datetime\", param);\n};\n\nexport const fetchInputDateTime = (hass: HomeAssistant) =>\n  hass.callWS<InputDateTime[]>({ type: \"input_datetime/list\" });\n\nexport const createInputDateTime = (\n  hass: HomeAssistant,\n  values: InputDateTimeMutableParams\n) =>\n  hass.callWS<InputDateTime>({\n    type: \"input_datetime/create\",\n    ...values,\n  });\n\nexport const updateInputDateTime = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<InputDateTimeMutableParams>\n) =>\n  hass.callWS<InputDateTime>({\n    type: \"input_datetime/update\",\n    input_datetime_id: id,\n    ...updates,\n  });\n\nexport const deleteInputDateTime = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"input_datetime/delete\",\n    input_datetime_id: id,\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface InputBoolean {\n  id: string;\n  name: string;\n  icon?: string;\n  initial?: boolean;\n}\n\nexport interface InputBooleanMutableParams {\n  name: string;\n  icon: string;\n  initial: boolean;\n}\n\nexport const fetchInputBoolean = (hass: HomeAssistant) =>\n  hass.callWS<InputBoolean[]>({ type: \"input_boolean/list\" });\n\nexport const createInputBoolean = (\n  hass: HomeAssistant,\n  values: InputBooleanMutableParams\n) =>\n  hass.callWS<InputBoolean>({\n    type: \"input_boolean/create\",\n    ...values,\n  });\n\nexport const updateInputBoolean = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<InputBooleanMutableParams>\n) =>\n  hass.callWS<InputBoolean>({\n    type: \"input_boolean/update\",\n    input_boolean_id: id,\n    ...updates,\n  });\n\nexport const deleteInputBoolean = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"input_boolean/delete\",\n    input_boolean_id: id,\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface InputNumber {\n  id: string;\n  name: string;\n  min: number;\n  max: number;\n  icon?: string;\n  initial?: number;\n  step?: number;\n  mode?: \"box\" | \"slider\";\n  unit_of_measurement?: string;\n}\n\nexport interface InputNumberMutableParams {\n  name: string;\n  icon: string;\n  initial: number;\n  min: number;\n  max: number;\n  step: number;\n  mode: \"box\" | \"slider\";\n  unit_of_measurement?: string;\n}\n\nexport const fetchInputNumber = (hass: HomeAssistant) =>\n  hass.callWS<InputNumber[]>({ type: \"input_number/list\" });\n\nexport const createInputNumber = (\n  hass: HomeAssistant,\n  values: InputNumberMutableParams\n) =>\n  hass.callWS<InputNumber>({\n    type: \"input_number/create\",\n    ...values,\n  });\n\nexport const updateInputNumber = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<InputNumberMutableParams>\n) =>\n  hass.callWS<InputNumber>({\n    type: \"input_number/update\",\n    input_number_id: id,\n    ...updates,\n  });\n\nexport const deleteInputNumber = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"input_number/delete\",\n    input_number_id: id,\n  });\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../../../components/ha-switch\";\nimport \"../../../../components/ha-icon-input\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { InputBoolean } from \"../../../../data/input_boolean\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { haStyle } from \"../../../../resources/styles\";\n\n@customElement(\"ha-input_boolean-form\")\nclass HaInputBooleanForm extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public new?: boolean;\n  private _item?: InputBoolean;\n  @property() private _name!: string;\n  @property() private _icon!: string;\n\n  set item(item: InputBoolean) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (this.shadowRoot?.querySelector(\n        \"[dialogInitialFocus]\"\n      ) as HTMLElement)?.focus()\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n    const nameInvalid = !this._name || this._name.trim() === \"\";\n\n    return html`\n      <div class=\"form\">\n        <paper-input\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          .errorMessage=\"${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\"\n          .invalid=${nameInvalid}\n          dialogInitialFocus\n        ></paper-input>\n        <ha-icon-input\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-input>\n        <br />\n        ${this.hass!.localize(\n          \"ui.dialogs.helper_settings.generic.initial_value_explain\"\n        )}\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail.value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = ev.detail.value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_boolean-form\": HaInputBooleanForm;\n  }\n}\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../../../components/ha-switch\";\nimport \"../../../../components/ha-icon-input\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { InputText } from \"../../../../data/input_text\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { haStyle } from \"../../../../resources/styles\";\n\n@customElement(\"ha-input_text-form\")\nclass HaInputTextForm extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public new?: boolean;\n  private _item?: InputText;\n  @property() private _name!: string;\n  @property() private _icon!: string;\n  @property() private _max?: number;\n  @property() private _min?: number;\n  @property() private _mode?: string;\n  @property() private _pattern?: string;\n\n  set item(item: InputText) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._max = item.max || 100;\n      this._min = item.min || 0;\n      this._mode = item.mode || \"text\";\n      this._pattern = item.pattern;\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._max = 100;\n      this._min = 0;\n      this._mode = \"text\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (this.shadowRoot?.querySelector(\n        \"[dialogInitialFocus]\"\n      ) as HTMLElement)?.focus()\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n    const nameInvalid = !this._name || this._name.trim() === \"\";\n\n    return html`\n      <div class=\"form\">\n        <paper-input\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          .errorMessage=\"${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\"\n          .invalid=${nameInvalid}\n          dialogInitialFocus\n        ></paper-input>\n        <ha-icon-input\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-input>\n        ${this.hass.userData?.showAdvanced\n          ? html`\n              <paper-input\n                .value=${this._min}\n                .configValue=${\"min\"}\n                type=\"number\"\n                min=\"0\"\n                max=\"255\"\n                @value-changed=${this._valueChanged}\n                .label=${this.hass!.localize(\n                  \"ui.dialogs.helper_settings.input_text.min\"\n                )}\n              ></paper-input>\n              <paper-input\n                .value=${this._max}\n                .configValue=${\"max\"}\n                min=\"0\"\n                max=\"255\"\n                type=\"number\"\n                @value-changed=${this._valueChanged}\n                .label=${this.hass!.localize(\n                  \"ui.dialogs.helper_settings.input_text.max\"\n                )}\n              ></paper-input>\n              <div class=\"layout horizontal center justified\">\n                ${this.hass.localize(\n                  \"ui.dialogs.helper_settings.input_text.mode\"\n                )}\n                <paper-radio-group\n                  .selected=${this._mode}\n                  @selected-changed=${this._modeChanged}\n                >\n                  <paper-radio-button name=\"text\">\n                    ${this.hass.localize(\n                      \"ui.dialogs.helper_settings.input_text.text\"\n                    )}\n                  </paper-radio-button>\n                  <paper-radio-button name=\"password\">\n                    ${this.hass.localize(\n                      \"ui.dialogs.helper_settings.input_text.password\"\n                    )}\n                  </paper-radio-button>\n                </paper-radio-group>\n              </div>\n              <paper-input\n                .value=${this._pattern}\n                .configValue=${\"pattern\"}\n                @value-changed=${this._valueChanged}\n                .label=${this.hass!.localize(\n                  \"ui.dialogs.helper_settings.input_text.pattern\"\n                )}\n              ></paper-input>\n            `\n          : \"\"}\n      </div>\n    `;\n  }\n\n  private _modeChanged(ev: CustomEvent) {\n    fireEvent(this, \"value-changed\", {\n      value: { ...this._item, mode: ev.detail.value },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail.value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = ev.detail.value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n        ha-paper-dropdown-menu {\n          display: block;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_text-form\": HaInputTextForm;\n  }\n}\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../../../components/ha-switch\";\nimport \"../../../../components/ha-icon-input\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport { InputDateTime } from \"../../../../data/input_datetime\";\n\n@customElement(\"ha-input_datetime-form\")\nclass HaInputDateTimeForm extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public new?: boolean;\n  private _item?: InputDateTime;\n  @property() private _name!: string;\n  @property() private _icon!: string;\n  @property() private _mode!: \"date\" | \"time\" | \"datetime\";\n\n  set item(item: InputDateTime) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._mode =\n        item.has_time && item.has_date\n          ? \"datetime\"\n          : item.has_time\n          ? \"time\"\n          : \"date\";\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._mode = \"date\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (this.shadowRoot?.querySelector(\n        \"[dialogInitialFocus]\"\n      ) as HTMLElement)?.focus()\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n    const nameInvalid = !this._name || this._name.trim() === \"\";\n\n    return html`\n      <div class=\"form\">\n        <paper-input\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          .errorMessage=\"${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\"\n          .invalid=${nameInvalid}\n          dialogInitialFocus\n        ></paper-input>\n        <ha-icon-input\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-input>\n        <br />\n        ${this.hass.localize(\"ui.dialogs.helper_settings.input_datetime.mode\")}:\n        <br />\n        <paper-radio-group\n          .selected=${this._mode}\n          @selected-changed=${this._modeChanged}\n        >\n          <paper-radio-button name=\"date\">\n            ${this.hass.localize(\n              \"ui.dialogs.helper_settings.input_datetime.date\"\n            )}\n          </paper-radio-button>\n          <paper-radio-button name=\"time\">\n            ${this.hass.localize(\n              \"ui.dialogs.helper_settings.input_datetime.time\"\n            )}\n          </paper-radio-button>\n          <paper-radio-button name=\"datetime\">\n            ${this.hass.localize(\n              \"ui.dialogs.helper_settings.input_datetime.datetime\"\n            )}\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n    `;\n  }\n\n  private _modeChanged(ev: CustomEvent) {\n    const mode = ev.detail.value;\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this._item,\n        has_time: [\"time\", \"datetime\"].includes(mode),\n        has_date: [\"date\", \"datetime\"].includes(mode),\n      },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail.value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = ev.detail.value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_datetime-form\": HaInputDateTimeForm;\n  }\n}\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n  customElement,\n  query,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../../../components/ha-switch\";\nimport \"../../../../components/ha-icon-input\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport { InputSelect } from \"../../../../data/input_select\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { showConfirmationDialog } from \"../../../../dialogs/generic/show-dialog-box\";\n\n@customElement(\"ha-input_select-form\")\nclass HaInputSelectForm extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public new?: boolean;\n  private _item?: InputSelect;\n  @property() private _name!: string;\n  @property() private _icon!: string;\n  @property() private _options: string[] = [];\n  @query(\"#option_input\") private _optionInput?: PaperInputElement;\n\n  set item(item: InputSelect) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._options = item.options || [];\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._options = [];\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (this.shadowRoot?.querySelector(\n        \"[dialogInitialFocus]\"\n      ) as HTMLElement)?.focus()\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n    const nameInvalid = !this._name || this._name.trim() === \"\";\n\n    return html`\n      <div class=\"form\">\n        <paper-input\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          .errorMessage=\"${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\"\n          .invalid=${nameInvalid}\n          dialogInitialFocus\n        ></paper-input>\n        <ha-icon-input\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-input>\n        ${this.hass!.localize(\n          \"ui.dialogs.helper_settings.input_select.options\"\n        )}:\n        ${this._options.length\n          ? this._options.map((option, index) => {\n              return html`\n                <paper-item class=\"option\">\n                  <paper-item-body> ${option} </paper-item-body>\n                  <paper-icon-button\n                    .index=${index}\n                    .title=${this.hass.localize(\n                      \"ui.dialogs.helper_settings.input_select.remove_option\"\n                    )}\n                    @click=${this._removeOption}\n                    icon=\"hass:delete\"\n                  ></paper-icon-button>\n                </paper-item>\n              `;\n            })\n          : html`\n              <paper-item>\n                ${this.hass!.localize(\n                  \"ui.dialogs.helper_settings.input_select.no_options\"\n                )}\n              </paper-item>\n            `}\n        <div class=\"layout horizontal bottom\">\n          <paper-input\n            class=\"flex-auto\"\n            id=\"option_input\"\n            .label=${this.hass!.localize(\n              \"ui.dialogs.helper_settings.input_select.add_option\"\n            )}\n            @keydown=${this._handleKeyAdd}\n          ></paper-input>\n          <mwc-button @click=${this._addOption}\n            >${this.hass!.localize(\n              \"ui.dialogs.helper_settings.input_select.add\"\n            )}</mwc-button\n          >\n        </div>\n      </div>\n    `;\n  }\n\n  private _handleKeyAdd(ev: KeyboardEvent) {\n    ev.stopPropagation();\n    if (ev.keyCode !== 13) {\n      return;\n    }\n    this._addOption();\n  }\n\n  private _addOption() {\n    const input = this._optionInput;\n    if (!input || !input.value) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: { ...this._item, options: [...this._options, input.value] },\n    });\n    input.value = \"\";\n  }\n\n  private async _removeOption(ev: Event) {\n    if (\n      !(await showConfirmationDialog(this, {\n        title: \"Delete this item?\",\n        text: \"Are you sure you want to delete this item?\",\n      }))\n    ) {\n      return;\n    }\n    const index = (ev.target as any).index;\n    const options = [...this._options];\n    options.splice(index, 1);\n    fireEvent(this, \"value-changed\", {\n      value: { ...this._item, options },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail.value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = ev.detail.value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .option {\n          border: 1px solid var(--divider-color);\n          border-radius: 4px;\n          margin-top: 4px;\n        }\n        mwc-button {\n          margin-left: 8px;\n        }\n        ha-paper-dropdown-menu {\n          display: block;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_select-form\": HaInputSelectForm;\n  }\n}\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../../../components/ha-switch\";\nimport \"../../../../components/ha-icon-input\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport { InputNumber } from \"../../../../data/input_number\";\n\n@customElement(\"ha-input_number-form\")\nclass HaInputNumberForm extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public new?: boolean;\n  private _item?: Partial<InputNumber>;\n  @property() private _name!: string;\n  @property() private _icon!: string;\n  @property() private _max?: number;\n  @property() private _min?: number;\n  @property() private _mode?: string;\n  @property() private _step?: number;\n  // tslint:disable-next-line: variable-name\n  @property() private _unit_of_measurement?: string;\n\n  set item(item: InputNumber) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._max = item.max ?? 100;\n      this._min = item.min ?? 0;\n      this._mode = item.mode || \"slider\";\n      this._step = item.step || 1;\n      this._unit_of_measurement = item.unit_of_measurement;\n    } else {\n      this._item = {\n        min: 0,\n        max: 0,\n      };\n      this._name = \"\";\n      this._icon = \"\";\n      this._max = 100;\n      this._min = 0;\n      this._mode = \"slider\";\n      this._step = 1;\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (this.shadowRoot?.querySelector(\n        \"[dialogInitialFocus]\"\n      ) as HTMLElement)?.focus()\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n    const nameInvalid = !this._name || this._name.trim() === \"\";\n\n    return html`\n      <div class=\"form\">\n        <paper-input\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          .errorMessage=\"${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\"\n          .invalid=${nameInvalid}\n          dialogInitialFocus\n        ></paper-input>\n        <ha-icon-input\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-input>\n        <paper-input\n          .value=${this._min}\n          .configValue=${\"min\"}\n          type=\"number\"\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.input_number.min\"\n          )}\n        ></paper-input>\n        <paper-input\n          .value=${this._max}\n          .configValue=${\"max\"}\n          type=\"number\"\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.input_number.max\"\n          )}\n        ></paper-input>\n        ${this.hass.userData?.showAdvanced\n          ? html`\n              <div class=\"layout horizontal center justified\">\n                ${this.hass.localize(\n                  \"ui.dialogs.helper_settings.input_number.mode\"\n                )}\n                <paper-radio-group\n                  .selected=${this._mode}\n                  @selected-changed=${this._modeChanged}\n                >\n                  <paper-radio-button name=\"slider\">\n                    ${this.hass.localize(\n                      \"ui.dialogs.helper_settings.input_number.slider\"\n                    )}\n                  </paper-radio-button>\n                  <paper-radio-button name=\"box\">\n                    ${this.hass.localize(\n                      \"ui.dialogs.helper_settings.input_number.box\"\n                    )}\n                  </paper-radio-button>\n                </paper-radio-group>\n              </div>\n              <paper-input\n                .value=${this._step}\n                .configValue=${\"step\"}\n                type=\"number\"\n                @value-changed=${this._valueChanged}\n                .label=${this.hass!.localize(\n                  \"ui.dialogs.helper_settings.input_number.step\"\n                )}\n              ></paper-input>\n\n              <paper-input\n                .value=${this._unit_of_measurement}\n                .configValue=${\"unit_of_measurement\"}\n                @value-changed=${this._valueChanged}\n                .label=${this.hass!.localize(\n                  \"ui.dialogs.helper_settings.input_number.unit_of_measurement\"\n                )}\n              ></paper-input>\n            `\n          : \"\"}\n      </div>\n    `;\n  }\n\n  private _modeChanged(ev: CustomEvent) {\n    fireEvent(this, \"value-changed\", {\n      value: { ...this._item, mode: ev.detail.value },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail.value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (value === undefined || value === \"\") {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = ev.detail.value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        ha-paper-dropdown-menu {\n          display: block;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_number-form\": HaInputNumberForm;\n  }\n}\n"],"sourceRoot":""}