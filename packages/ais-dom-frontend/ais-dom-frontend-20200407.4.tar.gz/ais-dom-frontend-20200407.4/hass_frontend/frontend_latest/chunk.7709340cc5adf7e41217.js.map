{"version":3,"sources":["webpack:///./src/common/dom/dynamic-element-directive.ts","webpack:///./src/dialogs/generic/show-dialog-box.ts","webpack:///./src/components/ha-switch.ts","webpack:///src/mwc-switch-css.ts","webpack:///constants.ts","webpack:///foundation.ts","webpack:///src/mwc-switch-base.ts","webpack:///src/mwc-switch.ts","webpack:///./src/components/ha-icon-input.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/helpers/dialog-helper-detail.ts"],"names":["__webpack_require__","d","__webpack_exports__","dynamicElement","lit_html__WEBPACK_IMPORTED_MODULE_0__","directive","tag","properties","part","NodePart","Error","element","value","undefined","toUpperCase","tagName","document","createElement","Object","entries","forEach","key","setValue","showAlertDialog","showConfirmationDialog","showPromptDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadGenericDialog","Promise","all","e","then","bind","showDialogHelper","dialogParams","extra","resolve","origCancel","cancel","origConfirm","confirm","fireEvent","dialogTag","dialogImport","assign","prompt","out","confirmation","MwcSwitch","customElements","get","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","[object Object]","args","super","this","F","kind","decorators","property","type","Boolean","query","_get","_getPrototypeOf","prototype","call","style","setProperty","classList","toggle","_slot","assignedNodes","length","addEventListener","haptic","forwardHaptic","html","ripple","interactionNode","_haChangeHandler","static","css","mdcFoundation","handleChange","checked","formElement","cssClasses","CHECKED","DISABLED","strings","ARIA_CHECKED_ATTR","NATIVE_CONTROL_SELECTOR","RIPPLE_SURFACE_SELECTOR","switch_foundation","_super","MDCSwitchFoundation","adapter","tslib_es6","defaultAdapter","defineProperty","addClass","removeClass","setNativeControlChecked","setNativeControlDisabled","setNativeControlAttr","setChecked","adapter_","updateAriaChecked_","updateCheckedStyling_","setDisabled","disabled","evt","nativeControl","target","foundation","mwc_switch_base_SwitchBase","form_element","mdcFoundationClass","mdcRoot","attr","setAttribute","rippleNode","lit_element","ripple_directive","_changeHandler","mwc_switch_Switch","styles","mwc_switch_css","_LitElement","attribute","label","placeholder","_valueChanged","errorMessage","ev","detail","bubbles","composed","LitElement","MwcDialog","createCloseHeading","hass","title","localize","_MwcDialog","HELPERS","input_boolean","createInputBoolean","input_text","createInputText","input_number","createInputNumber","input_datetime","createInputDateTime","input_select","createInputSelect","DialogHelperDetail","async","_platform","_item","_opened","updateComplete","_error","closeDialog","classMap","button-left","item","new","_createItem","_submitting","_goBack","keys","map","platform","isLoaded","isComponentLoaded","_platformPicked","_handleEnter","domainIcon","err","message","keyCode","stopPropagation","preventDefault","currentTarget","_focusForm","_this$_form","_form","lastElementChild","focus","haStyleDialog"],"mappings":"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","file":"chunk.7709340cc5adf7e41217.js","sourcesContent":["import { directive, Part, NodePart } from \"lit-html\";\n\nexport const dynamicElement = directive(\n  (tag: string, properties?: { [key: string]: any }) => (part: Part): void => {\n    if (!(part instanceof NodePart)) {\n      throw new Error(\n        \"dynamicElementDirective can only be used in content bindings\"\n      );\n    }\n\n    let element = part.value as HTMLElement | undefined;\n\n    if (\n      element !== undefined &&\n      tag.toUpperCase() === (element as HTMLElement).tagName\n    ) {\n      if (properties) {\n        Object.entries(properties).forEach(([key, value]) => {\n          element![key] = value;\n        });\n      }\n      return;\n    }\n\n    element = document.createElement(tag);\n    if (properties) {\n      Object.entries(properties).forEach(([key, value]) => {\n        element![key] = value;\n      });\n    }\n    part.setValue(element);\n  }\n);\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport { TemplateResult } from \"lit-html\";\n\ninterface BaseDialogParams {\n  confirmText?: string;\n  text?: string | TemplateResult;\n  title?: string;\n}\n\nexport interface AlertDialogParams extends BaseDialogParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n}\n\nexport interface PromptDialogParams extends BaseDialogParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  confirm?: (out?: string) => void;\n}\n\nexport interface DialogParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogParams,\n  extra?: {\n    confirmation?: DialogParams[\"confirmation\"];\n    prompt?: DialogParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { confirmation: true }) as Promise<\n    boolean\n  >;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","import {\n  customElement,\n  CSSResult,\n  css,\n  query,\n  html,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\nimport { forwardHaptic } from \"../data/haptics\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  // Generate a haptic vibration.\n  // Only set to true if the new value of the switch is applied right away when toggling.\n  // Do not add haptic when a user is required to press save.\n  @property({ type: Boolean }) public haptic = false;\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n    this.addEventListener(\"change\", () => {\n      if (this.haptic) {\n        forwardHaptic(\"light\");\n      }\n    });\n  }\n\n  protected render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div\n          class=\"mdc-switch__thumb-underlay\"\n          .ripple=\"${ripple({\n            interactionNode: this,\n          })}\"\n        >\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"${this._haChangeHandler}\"\n            />\n          </div>\n        </div>\n      </div>\n      <label for=\"basic-switch\"><slot></slot></label>\n    `;\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n\n  private _haChangeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {css} from 'lit-element';\n\nexport const style = css`.mdc-switch__thumb-underlay{left:-18px;right:initial;top:-17px;width:48px;height:48px}[dir=rtl] .mdc-switch__thumb-underlay,.mdc-switch__thumb-underlay[dir=rtl]{left:initial;right:-18px}.mdc-switch__native-control{width:68px;height:48px}.mdc-switch{display:inline-block;position:relative;outline:none;user-select:none}.mdc-switch.mdc-switch--checked .mdc-switch__track{background-color:#018786;background-color:var(--mdc-theme-secondary, #018786)}.mdc-switch.mdc-switch--checked .mdc-switch__thumb{background-color:#018786;background-color:var(--mdc-theme-secondary, #018786);border-color:#018786;border-color:var(--mdc-theme-secondary, #018786)}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__track{background-color:#000}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb{background-color:#fff;border-color:#fff}.mdc-switch__native-control{left:0;right:initial;position:absolute;top:0;margin:0;opacity:0;cursor:pointer;pointer-events:auto}[dir=rtl] .mdc-switch__native-control,.mdc-switch__native-control[dir=rtl]{left:initial;right:0}.mdc-switch__track{box-sizing:border-box;width:32px;height:14px;border:1px solid;border-radius:7px;opacity:.38;transition:opacity 90ms cubic-bezier(0.4, 0, 0.2, 1),background-color 90ms cubic-bezier(0.4, 0, 0.2, 1),border-color 90ms cubic-bezier(0.4, 0, 0.2, 1);border-color:transparent}.mdc-switch__thumb-underlay{display:flex;position:absolute;align-items:center;justify-content:center;transform:translateX(0);transition:transform 90ms cubic-bezier(0.4, 0, 0.2, 1),background-color 90ms cubic-bezier(0.4, 0, 0.2, 1),border-color 90ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-switch__thumb{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0,0,0,.12);box-sizing:border-box;width:20px;height:20px;border:10px solid;border-radius:50%;pointer-events:none;z-index:1}.mdc-switch--checked .mdc-switch__track{opacity:.54}.mdc-switch--checked .mdc-switch__thumb-underlay{transform:translateX(20px)}[dir=rtl] .mdc-switch--checked .mdc-switch__thumb-underlay,.mdc-switch--checked .mdc-switch__thumb-underlay[dir=rtl]{transform:translateX(-20px)}.mdc-switch--checked .mdc-switch__native-control{transform:translateX(-20px)}[dir=rtl] .mdc-switch--checked .mdc-switch__native-control,.mdc-switch--checked .mdc-switch__native-control[dir=rtl]{transform:translateX(20px)}.mdc-switch--disabled{opacity:.38;pointer-events:none}.mdc-switch--disabled .mdc-switch__thumb{border-width:1px}.mdc-switch--disabled .mdc-switch__native-control{cursor:default;pointer-events:none}@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb-underlay::before,.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb-underlay::after{background-color:#9e9e9e}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb-underlay:hover::before{opacity:.08}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb-underlay.mdc-ripple-upgraded--background-focused::before,.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb-underlay:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.24}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb-underlay:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb-underlay:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.24}.mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb-underlay.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.24}.mdc-switch__thumb-underlay{--mdc-ripple-fg-size: 0;--mdc-ripple-left: 0;--mdc-ripple-top: 0;--mdc-ripple-fg-scale: 1;--mdc-ripple-fg-translate-end: 0;--mdc-ripple-fg-translate-start: 0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-switch__thumb-underlay::before,.mdc-switch__thumb-underlay::after{position:absolute;border-radius:50%;opacity:0;pointer-events:none;content:\"\"}.mdc-switch__thumb-underlay::before{transition:opacity 15ms linear,background-color 15ms linear;z-index:1}.mdc-switch__thumb-underlay.mdc-ripple-upgraded::before{transform:scale(var(--mdc-ripple-fg-scale, 1))}.mdc-switch__thumb-underlay.mdc-ripple-upgraded::after{top:0;left:0;transform:scale(0);transform-origin:center center}.mdc-switch__thumb-underlay.mdc-ripple-upgraded--unbounded::after{top:var(--mdc-ripple-top, 0);left:var(--mdc-ripple-left, 0)}.mdc-switch__thumb-underlay.mdc-ripple-upgraded--foreground-activation::after{animation:mdc-ripple-fg-radius-in 225ms forwards,mdc-ripple-fg-opacity-in 75ms forwards}.mdc-switch__thumb-underlay.mdc-ripple-upgraded--foreground-deactivation::after{animation:mdc-ripple-fg-opacity-out 150ms;transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}.mdc-switch__thumb-underlay::before,.mdc-switch__thumb-underlay::after{top:calc(50% - 50%);left:calc(50% - 50%);width:100%;height:100%}.mdc-switch__thumb-underlay.mdc-ripple-upgraded::before,.mdc-switch__thumb-underlay.mdc-ripple-upgraded::after{top:var(--mdc-ripple-top, calc(50% - 50%));left:var(--mdc-ripple-left, calc(50% - 50%));width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-switch__thumb-underlay.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-switch__thumb-underlay::before,.mdc-switch__thumb-underlay::after{background-color:#018786;background-color:var(--mdc-theme-secondary, #018786)}.mdc-switch__thumb-underlay:hover::before{opacity:.04}.mdc-switch__thumb-underlay.mdc-ripple-upgraded--background-focused::before,.mdc-switch__thumb-underlay:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.12}.mdc-switch__thumb-underlay:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-switch__thumb-underlay:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.12}.mdc-switch__thumb-underlay.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.12}:host{outline:none}`;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/** CSS classes used by the switch. */\nvar cssClasses = {\n    /** Class used for a switch that is in the \"checked\" (on) position. */\n    CHECKED: 'mdc-switch--checked',\n    /** Class used for a switch that is disabled. */\n    DISABLED: 'mdc-switch--disabled',\n};\n/** String constants used by the switch. */\nvar strings = {\n    /** Aria attribute for checked or unchecked state of switch */\n    ARIA_CHECKED_ATTR: 'aria-checked',\n    /** A CSS selector used to locate the native HTML control for the switch.  */\n    NATIVE_CONTROL_SELECTOR: '.mdc-switch__native-control',\n    /** A CSS selector used to locate the ripple surface element for the switch. */\n    RIPPLE_SURFACE_SELECTOR: '.mdc-switch__thumb-underlay',\n};\nexport { cssClasses, strings };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCSwitchFoundation = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCSwitchFoundation, _super);\n    function MDCSwitchFoundation(adapter) {\n        return _super.call(this, tslib_1.__assign({}, MDCSwitchFoundation.defaultAdapter, adapter)) || this;\n    }\n    Object.defineProperty(MDCSwitchFoundation, \"strings\", {\n        /** The string constants used by the switch. */\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSwitchFoundation, \"cssClasses\", {\n        /** The CSS classes used by the switch. */\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSwitchFoundation, \"defaultAdapter\", {\n        /** The default Adapter for the switch. */\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                setNativeControlChecked: function () { return undefined; },\n                setNativeControlDisabled: function () { return undefined; },\n                setNativeControlAttr: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the checked state of the switch. */\n    MDCSwitchFoundation.prototype.setChecked = function (checked) {\n        this.adapter_.setNativeControlChecked(checked);\n        this.updateAriaChecked_(checked);\n        this.updateCheckedStyling_(checked);\n    };\n    /** Sets the disabled state of the switch. */\n    MDCSwitchFoundation.prototype.setDisabled = function (disabled) {\n        this.adapter_.setNativeControlDisabled(disabled);\n        if (disabled) {\n            this.adapter_.addClass(cssClasses.DISABLED);\n        }\n        else {\n            this.adapter_.removeClass(cssClasses.DISABLED);\n        }\n    };\n    /** Handles the change event for the switch native control. */\n    MDCSwitchFoundation.prototype.handleChange = function (evt) {\n        var nativeControl = evt.target;\n        this.updateAriaChecked_(nativeControl.checked);\n        this.updateCheckedStyling_(nativeControl.checked);\n    };\n    /** Updates the styling of the switch based on its checked state. */\n    MDCSwitchFoundation.prototype.updateCheckedStyling_ = function (checked) {\n        if (checked) {\n            this.adapter_.addClass(cssClasses.CHECKED);\n        }\n        else {\n            this.adapter_.removeClass(cssClasses.CHECKED);\n        }\n    };\n    MDCSwitchFoundation.prototype.updateAriaChecked_ = function (checked) {\n        this.adapter_.setNativeControlAttr(strings.ARIA_CHECKED_ATTR, \"\" + !!checked);\n    };\n    return MDCSwitchFoundation;\n}(MDCFoundation));\nexport { MDCSwitchFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCSwitchFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {addHasRemoveClass, FormElement, HTMLElementWithRipple, observer} from '@material/mwc-base/form-element.js';\nimport {ripple} from '@material/mwc-ripple/ripple-directive.js';\nimport {MDCSwitchAdapter} from '@material/switch/adapter';\nimport MDCSwitchFoundation from '@material/switch/foundation.js';\nimport {html, property, query} from 'lit-element';\n\nexport class SwitchBase extends FormElement {\n  @property({type: Boolean})\n  @observer(function(this: SwitchBase, value: boolean) {\n    this.mdcFoundation.setChecked(value);\n  })\n  checked = false;\n\n  @property({type: Boolean})\n  @observer(function(this: SwitchBase, value: boolean) {\n    this.mdcFoundation.setDisabled(value);\n  })\n  disabled = false;\n\n  @query('.mdc-switch') protected mdcRoot!: HTMLElement;\n\n  @query('input') protected formElement!: HTMLInputElement;\n\n  protected mdcFoundation!: MDCSwitchFoundation;\n\n  private _changeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n\n  protected readonly mdcFoundationClass = MDCSwitchFoundation;\n\n  protected createAdapter(): MDCSwitchAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      setNativeControlChecked: (checked: boolean) => {\n        this.formElement.checked = checked;\n      },\n      setNativeControlDisabled: (disabled: boolean) => {\n        this.formElement.disabled = disabled;\n      },\n      setNativeControlAttr: (attr, value) => {\n        this.formElement.setAttribute(attr, value);\n      },\n    };\n  }\n\n  get ripple() {\n    return this.rippleNode.ripple;\n  }\n\n  @query('.mdc-switch__thumb-underlay')\n  protected rippleNode!: HTMLElementWithRipple;\n\n  protected render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div class=\"mdc-switch__thumb-underlay\" .ripple=\"${ripple({\n      interactionNode: this\n    })}\">\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"${this._changeHandler}\">\n          </div>\n        </div>\n      </div>\n      <slot></slot>`;\n  }\n}\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {customElement} from 'lit-element';\n\nimport {SwitchBase} from './mwc-switch-base.js';\nimport {style} from './mwc-switch-css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-switch': Switch;\n  }\n}\n\n@customElement('mwc-switch')\nexport class Switch extends SwitchBase {\n  static styles = style;\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"./ha-icon\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public placeholder?: string;\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","import { customElement, CSSResult, css, html } from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\n// tslint:disable-next-line\nimport { Dialog } from \"@material/mwc-dialog\";\nimport { Constructor, HomeAssistant } from \"../types\";\n// tslint:disable-next-line\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n  query,\n} from \"lit-element\";\nimport \"../../../components/ha-dialog\";\nimport { HomeAssistant } from \"../../../types\";\nimport { dynamicElement } from \"../../../common/dom/dynamic-element-directive\";\nimport { createInputBoolean } from \"../../../data/input_boolean\";\nimport { createInputText } from \"../../../data/input_text\";\nimport { createInputNumber } from \"../../../data/input_number\";\nimport { createInputDateTime } from \"../../../data/input_datetime\";\nimport { createInputSelect } from \"../../../data/input_select\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { Helper } from \"./const\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport \"./forms/ha-input_boolean-form\";\nimport \"./forms/ha-input_text-form\";\nimport \"./forms/ha-input_datetime-form\";\nimport \"./forms/ha-input_select-form\";\nimport \"./forms/ha-input_number-form\";\nimport { domainIcon } from \"../../../common/entity/domain_icon\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { haStyleDialog } from \"../../../resources/styles\";\n\nconst HELPERS = {\n  input_boolean: createInputBoolean,\n  input_text: createInputText,\n  input_number: createInputNumber,\n  input_datetime: createInputDateTime,\n  input_select: createInputSelect,\n};\n\n@customElement(\"dialog-helper-detail\")\nexport class DialogHelperDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _item?: Helper;\n  @property() private _opened = false;\n  @property() private _platform?: string;\n  @property() private _error?: string;\n  @property() private _submitting = false;\n  @query(\".form\") private _form?: HTMLDivElement;\n\n  public async showDialog(): Promise<void> {\n    this._platform = undefined;\n    this._item = undefined;\n    this._opened = true;\n    await this.updateComplete;\n  }\n\n  public closeDialog(): void {\n    this._opened = false;\n    this._error = \"\";\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-dialog\n        .open=${this._opened}\n        @closing=${this.closeDialog}\n        class=${classMap({ \"button-left\": !this._platform })}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${this._platform\n          ? this.hass.localize(\n              \"ui.panel.config.helpers.dialog.add_platform\",\n              \"platform\",\n              this.hass.localize(\n                `ui.panel.config.helpers.types.${this._platform}`\n              ) || this._platform\n            )\n          : this.hass.localize(\"ui.panel.config.helpers.dialog.add_helper\")}\n      >\n        ${this._platform\n          ? html`\n              <div class=\"form\" @value-changed=${this._valueChanged}>\n                ${this._error\n                  ? html`\n                      <div class=\"error\">${this._error}</div>\n                    `\n                  : \"\"}\n                ${dynamicElement(`ha-${this._platform}-form`, {\n                  hass: this.hass,\n                  item: this._item,\n                  new: true,\n                })}\n              </div>\n              <mwc-button\n                slot=\"primaryAction\"\n                @click=\"${this._createItem}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\"ui.panel.config.helpers.dialog.create\")}\n              </mwc-button>\n              <mwc-button\n                slot=\"secondaryAction\"\n                @click=\"${this._goBack}\"\n                .disabled=${this._submitting}\n              >\n                Back\n              </mwc-button>\n            `\n          : html`\n              ${Object.keys(HELPERS).map((platform: string) => {\n                const isLoaded = isComponentLoaded(this.hass, platform);\n                return html`\n                  <div class=\"form\">\n                    <paper-icon-item\n                      .disabled=${!isLoaded}\n                      @click=${this._platformPicked}\n                      @keydown=${this._handleEnter}\n                      .platform=${platform}\n                      dialogInitialFocus\n                    >\n                      <ha-icon\n                        slot=\"item-icon\"\n                        .icon=${domainIcon(platform)}\n                      ></ha-icon>\n                      <span class=\"item-text\">\n                        ${this.hass.localize(\n                          `ui.panel.config.helpers.types.${platform}`\n                        ) || platform}\n                      </span>\n                    </paper-icon-item>\n                    ${!isLoaded\n                      ? html`\n                          <paper-tooltip\n                            >${this.hass.localize(\n                              \"ui.dialogs.helper_settings.platform_not_loaded\",\n                              \"platform\",\n                              platform\n                            )}</paper-tooltip\n                          >\n                        `\n                      : \"\"}\n                  </div>\n                `;\n              })}\n              <mwc-button slot=\"primaryAction\" @click=\"${this.closeDialog}\">\n                ${this.hass!.localize(\"ui.common.cancel\")}\n              </mwc-button>\n            `}\n      </ha-dialog>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    this._item = ev.detail.value;\n  }\n\n  private async _createItem(): Promise<void> {\n    if (!this._platform || !this._item) {\n      return;\n    }\n    this._submitting = true;\n    this._error = \"\";\n    try {\n      await HELPERS[this._platform](this.hass, this._item);\n      this.closeDialog();\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _handleEnter(ev: KeyboardEvent) {\n    if (ev.keyCode !== 13) {\n      return;\n    }\n    ev.stopPropagation();\n    ev.preventDefault();\n    this._platformPicked(ev);\n  }\n\n  private _platformPicked(ev: Event): void {\n    this._platform = (ev.currentTarget! as any).platform;\n    this._focusForm();\n  }\n\n  private async _focusForm(): Promise<void> {\n    await this.updateComplete;\n    (this._form?.lastElementChild as HTMLElement).focus();\n  }\n\n  private _goBack() {\n    this._platform = undefined;\n    this._item = undefined;\n    this._error = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-dialog.button-left {\n          --justify-action-buttons: flex-start;\n        }\n        paper-icon-item {\n          cursor: pointer;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-helper-detail\": DialogHelperDetail;\n  }\n}\n"],"sourceRoot":""}