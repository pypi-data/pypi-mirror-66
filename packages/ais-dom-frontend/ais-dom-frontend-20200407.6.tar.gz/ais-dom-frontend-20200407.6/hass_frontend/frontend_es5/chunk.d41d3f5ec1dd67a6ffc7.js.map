{"version":3,"sources":["webpack:///./node_modules/memoize-one/dist/memoize-one.esm.js","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js","webpack:///./src/panels/lovelace/editor/config-elements/hui-conditional-card-editor.ts"],"names":["simpleIsEqual","newArgs","lastArgs","length","every","newArg","index","newValue","oldValue","resultFn","isEqual","lastThis","lastResult","calledOnce","_len","arguments","Array","_key","this","apply","Polymer","_template","html","_templateObject","is","behaviors","PaperItemBehavior","rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","computeStateName","entity_id","HaEntityPicker","property","type","Boolean","attribute","memoizeOne","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","_this2","value","attributes","device_class","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_templateObject2","_clearValue","_templateObject3","ev","stopPropagation","_setValue","detail","_this3","setTimeout","fireEvent","css","_templateObject4","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","icon","IronScrollTargetBehavior","properties","scrollTarget","HTMLElement","_defaultScrollTarget","observers","_shouldHaveListener","_scrollTargetChanged","isAttached","_oldScrollTarget","_toggleScrollListener","_doc","domHost","$","dom","ownerDocument","_isValidScrollTarget","_scrollHandler","documentElement","_scrollTop","window","pageYOffset","scrollTop","_scrollLeft","pageXOffset","scrollLeft","top","scrollTo","left","scroll","leftOrOptions","_typeof","_scrollTargetWidth","innerWidth","offsetWidth","_scrollTargetHeight","innerHeight","offsetHeight","yes","eventTarget","_boundScrollHandler","bind","addEventListener","removeEventListener","toggleScrollListener","conditionStruct","entity","state","state_not","cardConfigStruct","card","conditions","optional","HuiConditionalCardEditor","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","args","concat","_assertThisInitialized","_inherits","kind","decorators","query","config","_config","_cardTab","_selectTab","_toggleMode","_guiModeAvailable","_cardEditorEl","_GUImode","_handleReplaceCard","lovelace","_handleCardChanged","_handleGUIModeChanged","_templateObject5","_handleCardPicked","_templateObject6","cond","idx","_this2$hass","_templateObject7","_changeCondition","_addCondition","parseInt","target","selected","_this$_cardEditorEl","toggleMode","GUImode","guiMode","guiModeAvailable","_setMode","push","configValue","splice","condition","static","_templateObject8"],"mappings":"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","file":"chunk.d41d3f5ec1dd67a6ffc7.js","sourcesContent":["var shallowEqual = function shallowEqual(newValue, oldValue) {\n  return newValue === oldValue;\n};\n\nvar simpleIsEqual = function simpleIsEqual(newArgs, lastArgs) {\n  return newArgs.length === lastArgs.length && newArgs.every(function (newArg, index) {\n    return shallowEqual(newArg, lastArgs[index]);\n  });\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter,\n      this.includeDeviceClasses\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 0px 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nexport const IronScrollTargetBehavior = {\n\n  properties: {\n\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function() {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n\n  _scrollTargetChanged: function(scrollTarget, isAttached) {\n    var eventTarget;\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n\n      this.scrollTarget = domHost && domHost.$ ?\n          domHost.$[scrollTarget] :\n          dom(this.ownerDocument).querySelector('#' + scrollTarget);\n\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset :\n                                               this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset :\n                                               this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function(leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth :\n                                               this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight :\n                                               this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function() {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n\n  _toggleScrollListener: function(yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function(yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n\n};\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n  css,\n  query,\n} from \"lit-element\";\nimport \"@polymer/paper-tabs\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { ConditionalCardConfig } from \"../../cards/types\";\nimport { fireEvent, HASSDomEvent } from \"../../../../common/dom/fire_event\";\nimport { LovelaceConfig } from \"../../../../data/lovelace\";\n\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-switch\";\nimport {\n  HuiCardEditor,\n  ConfigChangedEvent,\n} from \"../card-editor/hui-card-editor\";\nimport { GUIModeChangedEvent } from \"../types\";\n\nconst conditionStruct = struct({\n  entity: \"string\",\n  state: \"string?\",\n  state_not: \"string?\",\n});\nconst cardConfigStruct = struct({\n  type: \"string\",\n  card: \"any\",\n  conditions: struct.optional([conditionStruct]),\n});\n\n@customElement(\"hui-conditional-card-editor\")\nexport class HuiConditionalCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n  @property() public lovelace?: LovelaceConfig;\n  @property() private _config?: ConditionalCardConfig;\n  @property() private _GUImode = true;\n  @property() private _guiModeAvailable? = true;\n  @property() private _cardTab: boolean = false;\n  @query(\"hui-card-editor\") private _cardEditorEl?: HuiCardEditor;\n\n  public setConfig(config: ConditionalCardConfig): void {\n    this._config = cardConfigStruct(config);\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      <paper-tabs\n        .selected=${this._cardTab ? \"1\" : \"0\"}\n        @iron-select=${this._selectTab}\n      >\n        <paper-tab\n          >${this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.conditional.conditions\"\n          )}</paper-tab\n        >\n        <paper-tab\n          >${this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.conditional.card\"\n          )}</paper-tab\n        >\n      </paper-tabs>\n      ${this._cardTab\n        ? html`\n            <div class=\"card\">\n              ${this._config.card.type !== undefined\n                ? html`\n                    <div class=\"card-options\">\n                      <mwc-button\n                        @click=${this._toggleMode}\n                        .disabled=${!this._guiModeAvailable}\n                        class=\"gui-mode-button\"\n                      >\n                        ${this.hass!.localize(\n                          !this._cardEditorEl || this._GUImode\n                            ? \"ui.panel.lovelace.editor.edit_card.show_code_editor\"\n                            : \"ui.panel.lovelace.editor.edit_card.show_visual_editor\"\n                        )}\n                      </mwc-button>\n                      <mwc-button @click=${this._handleReplaceCard}\n                        >${this.hass!.localize(\n                          \"ui.panel.lovelace.editor.card.conditional.change_type\"\n                        )}</mwc-button\n                      >\n                    </div>\n                    <hui-card-editor\n                      .hass=${this.hass}\n                      .value=${this._config.card}\n                      .lovelace=${this.lovelace}\n                      @config-changed=${this._handleCardChanged}\n                      @GUImode-changed=${this._handleGUIModeChanged}\n                    ></hui-card-editor>\n                  `\n                : html`\n                    <hui-card-picker\n                      .hass=${this.hass}\n                      .lovelace=${this.lovelace}\n                      @config-changed=${this._handleCardPicked}\n                    ></hui-card-picker>\n                  `}\n            </div>\n          `\n        : html`\n            <div class=\"conditions\">\n              ${this.hass!.localize(\n                \"ui.panel.lovelace.editor.card.conditional.condition_explanation\"\n              )}\n              ${this._config.conditions.map((cond, idx) => {\n                return html`\n                  <div class=\"condition\">\n                    <div class=\"entity\">\n                      <ha-entity-picker\n                        .hass=${this.hass}\n                        .value=${cond.entity}\n                        .index=${idx}\n                        .configValue=${\"entity\"}\n                        @change=${this._changeCondition}\n                        allow-custom-entity\n                      ></ha-entity-picker>\n                    </div>\n                    <div class=\"state\">\n                      <paper-dropdown-menu>\n                        <paper-listbox\n                          .selected=${cond.state_not !== undefined ? 1 : 0}\n                          slot=\"dropdown-content\"\n                          .index=${idx}\n                          .configValue=${\"invert\"}\n                          @selected-item-changed=${this._changeCondition}\n                        >\n                          <paper-item\n                            >${this.hass!.localize(\n                              \"ui.panel.lovelace.editor.card.conditional.state_equal\"\n                            )}</paper-item\n                          >\n                          <paper-item\n                            >${this.hass!.localize(\n                              \"ui.panel.lovelace.editor.card.conditional.state_not_equal\"\n                            )}</paper-item\n                          >\n                        </paper-listbox>\n                      </paper-dropdown-menu>\n                      <paper-input\n                        .label=\"${this.hass!.localize(\n                          \"ui.panel.lovelace.editor.card.generic.state\"\n                        )} (${this.hass!.localize(\n                          \"ui.panel.lovelace.editor.card.conditional.current_state\"\n                        )}: '${this.hass?.states[cond.entity].state}')\"\n                        .value=${cond.state_not !== undefined\n                          ? cond.state_not\n                          : cond.state}\n                        .index=${idx}\n                        .configValue=${\"state\"}\n                        @value-changed=${this._changeCondition}\n                      ></paper-input>\n                    </div>\n                  </div>\n                `;\n              })}\n              <div class=\"condition\">\n                <ha-entity-picker\n                  .hass=${this.hass}\n                  @change=${this._addCondition}\n                ></ha-entity-picker>\n              </div>\n            </div>\n          `}\n    `;\n  }\n\n  private _selectTab(ev: Event): void {\n    this._cardTab = parseInt((ev.target! as any).selected!, 10) === 1;\n  }\n\n  private _toggleMode(): void {\n    this._cardEditorEl?.toggleMode();\n  }\n\n  private _setMode(value: boolean): void {\n    this._GUImode = value;\n    if (this._cardEditorEl) {\n      this._cardEditorEl!.GUImode = value;\n    }\n  }\n\n  private _handleGUIModeChanged(ev: HASSDomEvent<GUIModeChangedEvent>): void {\n    ev.stopPropagation();\n    this._GUImode = ev.detail.guiMode;\n    this._guiModeAvailable = ev.detail.guiModeAvailable;\n  }\n\n  private _handleCardPicked(ev: CustomEvent): void {\n    ev.stopPropagation();\n    if (!this._config) {\n      return;\n    }\n    this._setMode(true);\n    this._guiModeAvailable = true;\n    this._config.card = ev.detail.config;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleCardChanged(ev: HASSDomEvent<ConfigChangedEvent>): void {\n    ev.stopPropagation();\n    if (!this._config) {\n      return;\n    }\n    this._config.card = ev.detail.config;\n    this._guiModeAvailable = ev.detail.guiModeAvailable;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleReplaceCard(): void {\n    if (!this._config) {\n      return;\n    }\n    // @ts-ignore\n    this._config.card = {};\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _addCondition(ev: Event): void {\n    const target = ev.target! as any;\n    if (target.value === \"\" || !this._config) {\n      return;\n    }\n    this._config.conditions.push({\n      entity: target.value,\n      state: \"\",\n    });\n    target.value = \"\";\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n  private _changeCondition(ev: Event): void {\n    const target = ev.target as any;\n    if (!this._config || !target) {\n      return;\n    }\n    if (target.configValue === \"entity\" && target.value === \"\") {\n      this._config.conditions.splice(target.index, 1);\n    } else {\n      const condition = this._config.conditions[target.index];\n      if (target.configValue === \"entity\") {\n        condition.entity = target.value;\n      } else if (target.configValue === \"state\") {\n        if (condition.state_not !== undefined) {\n          condition.state_not = target.value;\n        } else {\n          condition.state = target.value;\n        }\n      } else if (target.configValue === \"invert\") {\n        if (target.selected === 1) {\n          if (condition.state) {\n            condition.state_not = condition.state;\n            delete condition.state;\n          }\n        } else {\n          if (condition.state_not) {\n            condition.state = condition.state_not;\n            delete condition.state_not;\n          }\n        }\n      }\n      this._config.conditions[target.index] = condition;\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-tabs {\n        --paper-tabs-selection-bar-color: var(--primary-color);\n        --paper-tab-ink: var(--primary-color);\n        border-bottom: 1px solid var(--divider-color);\n      }\n      .conditions {\n        margin-top: 8px;\n      }\n      .condition {\n        margin-top: 8px;\n        border: 1px solid var(--divider-color);\n        padding: 12px;\n      }\n      .condition .state {\n        display: flex;\n        align-items: flex-end;\n      }\n      .condition .state paper-dropdown-menu {\n        margin-right: 16px;\n      }\n      .condition .state paper-input {\n        flex-grow: 1;\n      }\n\n      .card {\n        margin-top: 8px;\n        border: 1px solid var(--divider-color);\n        padding: 12px;\n      }\n      @media (max-width: 450px) {\n        .card,\n        .condition {\n          margin: 8px -12px 0;\n        }\n      }\n      .card .card-options {\n        display: flex;\n        justify-content: flex-end;\n        width: 100%;\n      }\n      .gui-mode-button {\n        margin-right: auto;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-card-editor\": HuiConditionalCardEditor;\n  }\n}\n"],"sourceRoot":""}