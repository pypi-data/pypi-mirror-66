# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class Workspace(Resource):
    """An object that represents a machine learning workspace.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Specifies the resource ID.
    :vartype id: str
    :ivar name: Specifies the name of the resource.
    :vartype name: str
    :param location: Specifies the location of the resource.
    :type location: str
    :ivar type: Specifies the type of the resource.
    :vartype type: str
    :param tags: Contains resource tags defined as key/value pairs.
    :type tags: dict[str, str]
    :ivar workspaceid: The immutable id associated with this workspace.
    :vartype workspaceid: str
    :param description: The description of this workspace.
    :type description: str
    :param friendly_name: The friendly name for this workspace. This will be
     the workspace name in the arm id when the workspace object gets created
    :type friendly_name: str
    :ivar creation_date: The creation date of the machine learning workspace
     in ISO8601 format.
    :vartype creation_date: datetime
    :param container_registry: Container Registry properties.
    :type container_registry:
     ~machinelearningservicesswagger.models.ContainerRegistryProperties
    :param storage_account: The properties of the storage account for the
     machine learning workspace.
    :type storage_account:
     ~machinelearningservicesswagger.models.StorageAccountProperties
    :ivar provisioning_state: The current deployment state of workspace
     resource. The provisioningState is to indicate states for resource
     provisioning. Possible values include: 'Unknown', 'Updating', 'Creating',
     'Deleting', 'Succeeded', 'Failed', 'Canceled'
    :vartype provisioning_state: str or
     ~machinelearningservicesswagger.models.ProvisioningState
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'workspaceid': {'readonly': True},
        'creation_time': {'readonly': True},
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'workspaceid': {'key': 'properties.workspaceId', 'type': 'str'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'friendly_name': {'key': 'properties.friendlyName', 'type': 'str'},
        'creation_time': {'key': 'properties.creationTime', 'type': 'str'},
        'container_registry': {'key': 'properties.containerRegistry', 'type': 'str'},
        'key_vault': {'key': 'properties.keyVault', 'type': 'str'},
        'application_insights': {'key': 'properties.applicationInsights', 'type': 'str'},
        'identity_principal_id': {'key': 'identity.principalId', 'type': 'str'},
        'identity_tenant_id': {'key': 'identity.tenantId', 'type': 'str'},
        'identity_type': {'key': 'identity.type', 'type': 'str'},
        'storage_account': {'key': 'properties.storageAccount', 'type': 'str'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
    }

    def __init__(self, location=None, tags=None, description=None, friendly_name=None,
                 container_registry=None, storage_account=None, key_vault=None,
                 application_insights=None, identity_tenant_id=None,
                 identity_principal_id=None, identity_type=None):
        super(Workspace, self).__init__(location=location, tags=tags)
        self.workspaceid = None
        self.description = description
        self.friendly_name = friendly_name
        self.creation_time = None
        self.container_registry = container_registry
        self.storage_account = storage_account
        self.key_vault = key_vault
        self.application_insights = application_insights
        self.identity_tenant_id = identity_tenant_id
        self.identity_type = identity_type
        self.identity_principal_id = identity_principal_id
        self.provisioning_state = None
