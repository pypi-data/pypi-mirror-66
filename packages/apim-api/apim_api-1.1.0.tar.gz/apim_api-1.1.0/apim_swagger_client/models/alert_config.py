# coding: utf-8

"""
    API Manager API v1.3

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.3.0
    Contact: support@axway.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AlertConfig(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'run_sysquota_exceeded': 'bool',
        'run_sysquota_warning': 'bool',
        'run_appquota_exceeded': 'bool',
        'run_appquota_warning': 'bool',
        'quota_override_changed': 'bool',
        'quota_override_deleted': 'bool',
        'quota_default_changed': 'bool',
        'quota_system_changed': 'bool',
        'organization_create': 'bool',
        'organization_delete': 'bool',
        'organization_enable': 'bool',
        'organization_disable': 'bool',
        'organization_addapi': 'bool',
        'organization_removeapi': 'bool',
        'organization_enableapi': 'bool',
        'organization_disableapi': 'bool',
        'appdev_register': 'bool',
        'appdev_approve': 'bool',
        'appdev_delete': 'bool',
        'appdev_enable': 'bool',
        'appdev_disable': 'bool',
        'appdev_resetpwd': 'bool',
        'application_register': 'bool',
        'application_approve': 'bool',
        'application_delete': 'bool',
        'application_enable': 'bool',
        'application_disable': 'bool',
        'application_requestapi': 'bool',
        'application_approveapi': 'bool',
        'application_removeapi': 'bool',
        'application_enableapi': 'bool',
        'application_disableapi': 'bool',
        'apicatalog_enable': 'bool',
        'apicatalog_disable': 'bool',
        'apiproxy_publish': 'bool',
        'apiproxy_deprecate': 'bool',
        'apiproxy_undeprecate': 'bool',
        'apiproxy_retire': 'bool',
        'apiproxy_unpublish': 'bool',
        'applicationcredentials_create': 'bool',
        'applicationcredentials_update': 'bool',
        'applicationcredentials_delete': 'bool',
        'applicationcredentials_enable': 'bool',
        'applicationcredentials_disable': 'bool'
    }

    attribute_map = {
        'run_sysquota_exceeded': 'runSysquotaExceeded',
        'run_sysquota_warning': 'runSysquotaWarning',
        'run_appquota_exceeded': 'runAppquotaExceeded',
        'run_appquota_warning': 'runAppquotaWarning',
        'quota_override_changed': 'quotaOverrideChanged',
        'quota_override_deleted': 'quotaOverrideDeleted',
        'quota_default_changed': 'quotaDefaultChanged',
        'quota_system_changed': 'quotaSystemChanged',
        'organization_create': 'organizationCreate',
        'organization_delete': 'organizationDelete',
        'organization_enable': 'organizationEnable',
        'organization_disable': 'organizationDisable',
        'organization_addapi': 'organizationAddapi',
        'organization_removeapi': 'organizationRemoveapi',
        'organization_enableapi': 'organizationEnableapi',
        'organization_disableapi': 'organizationDisableapi',
        'appdev_register': 'appdevRegister',
        'appdev_approve': 'appdevApprove',
        'appdev_delete': 'appdevDelete',
        'appdev_enable': 'appdevEnable',
        'appdev_disable': 'appdevDisable',
        'appdev_resetpwd': 'appdevResetpwd',
        'application_register': 'applicationRegister',
        'application_approve': 'applicationApprove',
        'application_delete': 'applicationDelete',
        'application_enable': 'applicationEnable',
        'application_disable': 'applicationDisable',
        'application_requestapi': 'applicationRequestapi',
        'application_approveapi': 'applicationApproveapi',
        'application_removeapi': 'applicationRemoveapi',
        'application_enableapi': 'applicationEnableapi',
        'application_disableapi': 'applicationDisableapi',
        'apicatalog_enable': 'apicatalogEnable',
        'apicatalog_disable': 'apicatalogDisable',
        'apiproxy_publish': 'apiproxyPublish',
        'apiproxy_deprecate': 'apiproxyDeprecate',
        'apiproxy_undeprecate': 'apiproxyUndeprecate',
        'apiproxy_retire': 'apiproxyRetire',
        'apiproxy_unpublish': 'apiproxyUnpublish',
        'applicationcredentials_create': 'applicationcredentialsCreate',
        'applicationcredentials_update': 'applicationcredentialsUpdate',
        'applicationcredentials_delete': 'applicationcredentialsDelete',
        'applicationcredentials_enable': 'applicationcredentialsEnable',
        'applicationcredentials_disable': 'applicationcredentialsDisable'
    }

    def __init__(self, run_sysquota_exceeded=False, run_sysquota_warning=False, run_appquota_exceeded=False, run_appquota_warning=False, quota_override_changed=False, quota_override_deleted=False, quota_default_changed=False, quota_system_changed=False, organization_create=False, organization_delete=False, organization_enable=False, organization_disable=False, organization_addapi=False, organization_removeapi=False, organization_enableapi=False, organization_disableapi=False, appdev_register=False, appdev_approve=False, appdev_delete=False, appdev_enable=False, appdev_disable=False, appdev_resetpwd=False, application_register=False, application_approve=False, application_delete=False, application_enable=False, application_disable=False, application_requestapi=False, application_approveapi=False, application_removeapi=False, application_enableapi=False, application_disableapi=False, apicatalog_enable=False, apicatalog_disable=False, apiproxy_publish=False, apiproxy_deprecate=False, apiproxy_undeprecate=False, apiproxy_retire=False, apiproxy_unpublish=False, applicationcredentials_create=False, applicationcredentials_update=False, applicationcredentials_delete=False, applicationcredentials_enable=False, applicationcredentials_disable=False):  # noqa: E501
        """AlertConfig - a model defined in Swagger"""  # noqa: E501

        self._run_sysquota_exceeded = None
        self._run_sysquota_warning = None
        self._run_appquota_exceeded = None
        self._run_appquota_warning = None
        self._quota_override_changed = None
        self._quota_override_deleted = None
        self._quota_default_changed = None
        self._quota_system_changed = None
        self._organization_create = None
        self._organization_delete = None
        self._organization_enable = None
        self._organization_disable = None
        self._organization_addapi = None
        self._organization_removeapi = None
        self._organization_enableapi = None
        self._organization_disableapi = None
        self._appdev_register = None
        self._appdev_approve = None
        self._appdev_delete = None
        self._appdev_enable = None
        self._appdev_disable = None
        self._appdev_resetpwd = None
        self._application_register = None
        self._application_approve = None
        self._application_delete = None
        self._application_enable = None
        self._application_disable = None
        self._application_requestapi = None
        self._application_approveapi = None
        self._application_removeapi = None
        self._application_enableapi = None
        self._application_disableapi = None
        self._apicatalog_enable = None
        self._apicatalog_disable = None
        self._apiproxy_publish = None
        self._apiproxy_deprecate = None
        self._apiproxy_undeprecate = None
        self._apiproxy_retire = None
        self._apiproxy_unpublish = None
        self._applicationcredentials_create = None
        self._applicationcredentials_update = None
        self._applicationcredentials_delete = None
        self._applicationcredentials_enable = None
        self._applicationcredentials_disable = None
        self.discriminator = None

        if run_sysquota_exceeded is not None:
            self.run_sysquota_exceeded = run_sysquota_exceeded
        if run_sysquota_warning is not None:
            self.run_sysquota_warning = run_sysquota_warning
        if run_appquota_exceeded is not None:
            self.run_appquota_exceeded = run_appquota_exceeded
        if run_appquota_warning is not None:
            self.run_appquota_warning = run_appquota_warning
        if quota_override_changed is not None:
            self.quota_override_changed = quota_override_changed
        if quota_override_deleted is not None:
            self.quota_override_deleted = quota_override_deleted
        if quota_default_changed is not None:
            self.quota_default_changed = quota_default_changed
        if quota_system_changed is not None:
            self.quota_system_changed = quota_system_changed
        if organization_create is not None:
            self.organization_create = organization_create
        if organization_delete is not None:
            self.organization_delete = organization_delete
        if organization_enable is not None:
            self.organization_enable = organization_enable
        if organization_disable is not None:
            self.organization_disable = organization_disable
        if organization_addapi is not None:
            self.organization_addapi = organization_addapi
        if organization_removeapi is not None:
            self.organization_removeapi = organization_removeapi
        if organization_enableapi is not None:
            self.organization_enableapi = organization_enableapi
        if organization_disableapi is not None:
            self.organization_disableapi = organization_disableapi
        if appdev_register is not None:
            self.appdev_register = appdev_register
        if appdev_approve is not None:
            self.appdev_approve = appdev_approve
        if appdev_delete is not None:
            self.appdev_delete = appdev_delete
        if appdev_enable is not None:
            self.appdev_enable = appdev_enable
        if appdev_disable is not None:
            self.appdev_disable = appdev_disable
        if appdev_resetpwd is not None:
            self.appdev_resetpwd = appdev_resetpwd
        if application_register is not None:
            self.application_register = application_register
        if application_approve is not None:
            self.application_approve = application_approve
        if application_delete is not None:
            self.application_delete = application_delete
        if application_enable is not None:
            self.application_enable = application_enable
        if application_disable is not None:
            self.application_disable = application_disable
        if application_requestapi is not None:
            self.application_requestapi = application_requestapi
        if application_approveapi is not None:
            self.application_approveapi = application_approveapi
        if application_removeapi is not None:
            self.application_removeapi = application_removeapi
        if application_enableapi is not None:
            self.application_enableapi = application_enableapi
        if application_disableapi is not None:
            self.application_disableapi = application_disableapi
        if apicatalog_enable is not None:
            self.apicatalog_enable = apicatalog_enable
        if apicatalog_disable is not None:
            self.apicatalog_disable = apicatalog_disable
        if apiproxy_publish is not None:
            self.apiproxy_publish = apiproxy_publish
        if apiproxy_deprecate is not None:
            self.apiproxy_deprecate = apiproxy_deprecate
        if apiproxy_undeprecate is not None:
            self.apiproxy_undeprecate = apiproxy_undeprecate
        if apiproxy_retire is not None:
            self.apiproxy_retire = apiproxy_retire
        if apiproxy_unpublish is not None:
            self.apiproxy_unpublish = apiproxy_unpublish
        if applicationcredentials_create is not None:
            self.applicationcredentials_create = applicationcredentials_create
        if applicationcredentials_update is not None:
            self.applicationcredentials_update = applicationcredentials_update
        if applicationcredentials_delete is not None:
            self.applicationcredentials_delete = applicationcredentials_delete
        if applicationcredentials_enable is not None:
            self.applicationcredentials_enable = applicationcredentials_enable
        if applicationcredentials_disable is not None:
            self.applicationcredentials_disable = applicationcredentials_disable

    @property
    def run_sysquota_exceeded(self):
        """Gets the run_sysquota_exceeded of this AlertConfig.  # noqa: E501


        :return: The run_sysquota_exceeded of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._run_sysquota_exceeded

    @run_sysquota_exceeded.setter
    def run_sysquota_exceeded(self, run_sysquota_exceeded):
        """Sets the run_sysquota_exceeded of this AlertConfig.


        :param run_sysquota_exceeded: The run_sysquota_exceeded of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._run_sysquota_exceeded = run_sysquota_exceeded

    @property
    def run_sysquota_warning(self):
        """Gets the run_sysquota_warning of this AlertConfig.  # noqa: E501


        :return: The run_sysquota_warning of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._run_sysquota_warning

    @run_sysquota_warning.setter
    def run_sysquota_warning(self, run_sysquota_warning):
        """Sets the run_sysquota_warning of this AlertConfig.


        :param run_sysquota_warning: The run_sysquota_warning of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._run_sysquota_warning = run_sysquota_warning

    @property
    def run_appquota_exceeded(self):
        """Gets the run_appquota_exceeded of this AlertConfig.  # noqa: E501


        :return: The run_appquota_exceeded of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._run_appquota_exceeded

    @run_appquota_exceeded.setter
    def run_appquota_exceeded(self, run_appquota_exceeded):
        """Sets the run_appquota_exceeded of this AlertConfig.


        :param run_appquota_exceeded: The run_appquota_exceeded of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._run_appquota_exceeded = run_appquota_exceeded

    @property
    def run_appquota_warning(self):
        """Gets the run_appquota_warning of this AlertConfig.  # noqa: E501


        :return: The run_appquota_warning of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._run_appquota_warning

    @run_appquota_warning.setter
    def run_appquota_warning(self, run_appquota_warning):
        """Sets the run_appquota_warning of this AlertConfig.


        :param run_appquota_warning: The run_appquota_warning of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._run_appquota_warning = run_appquota_warning

    @property
    def quota_override_changed(self):
        """Gets the quota_override_changed of this AlertConfig.  # noqa: E501


        :return: The quota_override_changed of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._quota_override_changed

    @quota_override_changed.setter
    def quota_override_changed(self, quota_override_changed):
        """Sets the quota_override_changed of this AlertConfig.


        :param quota_override_changed: The quota_override_changed of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._quota_override_changed = quota_override_changed

    @property
    def quota_override_deleted(self):
        """Gets the quota_override_deleted of this AlertConfig.  # noqa: E501


        :return: The quota_override_deleted of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._quota_override_deleted

    @quota_override_deleted.setter
    def quota_override_deleted(self, quota_override_deleted):
        """Sets the quota_override_deleted of this AlertConfig.


        :param quota_override_deleted: The quota_override_deleted of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._quota_override_deleted = quota_override_deleted

    @property
    def quota_default_changed(self):
        """Gets the quota_default_changed of this AlertConfig.  # noqa: E501


        :return: The quota_default_changed of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._quota_default_changed

    @quota_default_changed.setter
    def quota_default_changed(self, quota_default_changed):
        """Sets the quota_default_changed of this AlertConfig.


        :param quota_default_changed: The quota_default_changed of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._quota_default_changed = quota_default_changed

    @property
    def quota_system_changed(self):
        """Gets the quota_system_changed of this AlertConfig.  # noqa: E501


        :return: The quota_system_changed of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._quota_system_changed

    @quota_system_changed.setter
    def quota_system_changed(self, quota_system_changed):
        """Sets the quota_system_changed of this AlertConfig.


        :param quota_system_changed: The quota_system_changed of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._quota_system_changed = quota_system_changed

    @property
    def organization_create(self):
        """Gets the organization_create of this AlertConfig.  # noqa: E501


        :return: The organization_create of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._organization_create

    @organization_create.setter
    def organization_create(self, organization_create):
        """Sets the organization_create of this AlertConfig.


        :param organization_create: The organization_create of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._organization_create = organization_create

    @property
    def organization_delete(self):
        """Gets the organization_delete of this AlertConfig.  # noqa: E501


        :return: The organization_delete of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._organization_delete

    @organization_delete.setter
    def organization_delete(self, organization_delete):
        """Sets the organization_delete of this AlertConfig.


        :param organization_delete: The organization_delete of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._organization_delete = organization_delete

    @property
    def organization_enable(self):
        """Gets the organization_enable of this AlertConfig.  # noqa: E501


        :return: The organization_enable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._organization_enable

    @organization_enable.setter
    def organization_enable(self, organization_enable):
        """Sets the organization_enable of this AlertConfig.


        :param organization_enable: The organization_enable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._organization_enable = organization_enable

    @property
    def organization_disable(self):
        """Gets the organization_disable of this AlertConfig.  # noqa: E501


        :return: The organization_disable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._organization_disable

    @organization_disable.setter
    def organization_disable(self, organization_disable):
        """Sets the organization_disable of this AlertConfig.


        :param organization_disable: The organization_disable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._organization_disable = organization_disable

    @property
    def organization_addapi(self):
        """Gets the organization_addapi of this AlertConfig.  # noqa: E501


        :return: The organization_addapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._organization_addapi

    @organization_addapi.setter
    def organization_addapi(self, organization_addapi):
        """Sets the organization_addapi of this AlertConfig.


        :param organization_addapi: The organization_addapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._organization_addapi = organization_addapi

    @property
    def organization_removeapi(self):
        """Gets the organization_removeapi of this AlertConfig.  # noqa: E501


        :return: The organization_removeapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._organization_removeapi

    @organization_removeapi.setter
    def organization_removeapi(self, organization_removeapi):
        """Sets the organization_removeapi of this AlertConfig.


        :param organization_removeapi: The organization_removeapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._organization_removeapi = organization_removeapi

    @property
    def organization_enableapi(self):
        """Gets the organization_enableapi of this AlertConfig.  # noqa: E501


        :return: The organization_enableapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._organization_enableapi

    @organization_enableapi.setter
    def organization_enableapi(self, organization_enableapi):
        """Sets the organization_enableapi of this AlertConfig.


        :param organization_enableapi: The organization_enableapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._organization_enableapi = organization_enableapi

    @property
    def organization_disableapi(self):
        """Gets the organization_disableapi of this AlertConfig.  # noqa: E501


        :return: The organization_disableapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._organization_disableapi

    @organization_disableapi.setter
    def organization_disableapi(self, organization_disableapi):
        """Sets the organization_disableapi of this AlertConfig.


        :param organization_disableapi: The organization_disableapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._organization_disableapi = organization_disableapi

    @property
    def appdev_register(self):
        """Gets the appdev_register of this AlertConfig.  # noqa: E501


        :return: The appdev_register of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._appdev_register

    @appdev_register.setter
    def appdev_register(self, appdev_register):
        """Sets the appdev_register of this AlertConfig.


        :param appdev_register: The appdev_register of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._appdev_register = appdev_register

    @property
    def appdev_approve(self):
        """Gets the appdev_approve of this AlertConfig.  # noqa: E501


        :return: The appdev_approve of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._appdev_approve

    @appdev_approve.setter
    def appdev_approve(self, appdev_approve):
        """Sets the appdev_approve of this AlertConfig.


        :param appdev_approve: The appdev_approve of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._appdev_approve = appdev_approve

    @property
    def appdev_delete(self):
        """Gets the appdev_delete of this AlertConfig.  # noqa: E501


        :return: The appdev_delete of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._appdev_delete

    @appdev_delete.setter
    def appdev_delete(self, appdev_delete):
        """Sets the appdev_delete of this AlertConfig.


        :param appdev_delete: The appdev_delete of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._appdev_delete = appdev_delete

    @property
    def appdev_enable(self):
        """Gets the appdev_enable of this AlertConfig.  # noqa: E501


        :return: The appdev_enable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._appdev_enable

    @appdev_enable.setter
    def appdev_enable(self, appdev_enable):
        """Sets the appdev_enable of this AlertConfig.


        :param appdev_enable: The appdev_enable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._appdev_enable = appdev_enable

    @property
    def appdev_disable(self):
        """Gets the appdev_disable of this AlertConfig.  # noqa: E501


        :return: The appdev_disable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._appdev_disable

    @appdev_disable.setter
    def appdev_disable(self, appdev_disable):
        """Sets the appdev_disable of this AlertConfig.


        :param appdev_disable: The appdev_disable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._appdev_disable = appdev_disable

    @property
    def appdev_resetpwd(self):
        """Gets the appdev_resetpwd of this AlertConfig.  # noqa: E501


        :return: The appdev_resetpwd of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._appdev_resetpwd

    @appdev_resetpwd.setter
    def appdev_resetpwd(self, appdev_resetpwd):
        """Sets the appdev_resetpwd of this AlertConfig.


        :param appdev_resetpwd: The appdev_resetpwd of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._appdev_resetpwd = appdev_resetpwd

    @property
    def application_register(self):
        """Gets the application_register of this AlertConfig.  # noqa: E501


        :return: The application_register of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_register

    @application_register.setter
    def application_register(self, application_register):
        """Sets the application_register of this AlertConfig.


        :param application_register: The application_register of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_register = application_register

    @property
    def application_approve(self):
        """Gets the application_approve of this AlertConfig.  # noqa: E501


        :return: The application_approve of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_approve

    @application_approve.setter
    def application_approve(self, application_approve):
        """Sets the application_approve of this AlertConfig.


        :param application_approve: The application_approve of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_approve = application_approve

    @property
    def application_delete(self):
        """Gets the application_delete of this AlertConfig.  # noqa: E501


        :return: The application_delete of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_delete

    @application_delete.setter
    def application_delete(self, application_delete):
        """Sets the application_delete of this AlertConfig.


        :param application_delete: The application_delete of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_delete = application_delete

    @property
    def application_enable(self):
        """Gets the application_enable of this AlertConfig.  # noqa: E501


        :return: The application_enable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_enable

    @application_enable.setter
    def application_enable(self, application_enable):
        """Sets the application_enable of this AlertConfig.


        :param application_enable: The application_enable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_enable = application_enable

    @property
    def application_disable(self):
        """Gets the application_disable of this AlertConfig.  # noqa: E501


        :return: The application_disable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_disable

    @application_disable.setter
    def application_disable(self, application_disable):
        """Sets the application_disable of this AlertConfig.


        :param application_disable: The application_disable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_disable = application_disable

    @property
    def application_requestapi(self):
        """Gets the application_requestapi of this AlertConfig.  # noqa: E501


        :return: The application_requestapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_requestapi

    @application_requestapi.setter
    def application_requestapi(self, application_requestapi):
        """Sets the application_requestapi of this AlertConfig.


        :param application_requestapi: The application_requestapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_requestapi = application_requestapi

    @property
    def application_approveapi(self):
        """Gets the application_approveapi of this AlertConfig.  # noqa: E501


        :return: The application_approveapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_approveapi

    @application_approveapi.setter
    def application_approveapi(self, application_approveapi):
        """Sets the application_approveapi of this AlertConfig.


        :param application_approveapi: The application_approveapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_approveapi = application_approveapi

    @property
    def application_removeapi(self):
        """Gets the application_removeapi of this AlertConfig.  # noqa: E501


        :return: The application_removeapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_removeapi

    @application_removeapi.setter
    def application_removeapi(self, application_removeapi):
        """Sets the application_removeapi of this AlertConfig.


        :param application_removeapi: The application_removeapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_removeapi = application_removeapi

    @property
    def application_enableapi(self):
        """Gets the application_enableapi of this AlertConfig.  # noqa: E501


        :return: The application_enableapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_enableapi

    @application_enableapi.setter
    def application_enableapi(self, application_enableapi):
        """Sets the application_enableapi of this AlertConfig.


        :param application_enableapi: The application_enableapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_enableapi = application_enableapi

    @property
    def application_disableapi(self):
        """Gets the application_disableapi of this AlertConfig.  # noqa: E501


        :return: The application_disableapi of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._application_disableapi

    @application_disableapi.setter
    def application_disableapi(self, application_disableapi):
        """Sets the application_disableapi of this AlertConfig.


        :param application_disableapi: The application_disableapi of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._application_disableapi = application_disableapi

    @property
    def apicatalog_enable(self):
        """Gets the apicatalog_enable of this AlertConfig.  # noqa: E501


        :return: The apicatalog_enable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._apicatalog_enable

    @apicatalog_enable.setter
    def apicatalog_enable(self, apicatalog_enable):
        """Sets the apicatalog_enable of this AlertConfig.


        :param apicatalog_enable: The apicatalog_enable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._apicatalog_enable = apicatalog_enable

    @property
    def apicatalog_disable(self):
        """Gets the apicatalog_disable of this AlertConfig.  # noqa: E501


        :return: The apicatalog_disable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._apicatalog_disable

    @apicatalog_disable.setter
    def apicatalog_disable(self, apicatalog_disable):
        """Sets the apicatalog_disable of this AlertConfig.


        :param apicatalog_disable: The apicatalog_disable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._apicatalog_disable = apicatalog_disable

    @property
    def apiproxy_publish(self):
        """Gets the apiproxy_publish of this AlertConfig.  # noqa: E501


        :return: The apiproxy_publish of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._apiproxy_publish

    @apiproxy_publish.setter
    def apiproxy_publish(self, apiproxy_publish):
        """Sets the apiproxy_publish of this AlertConfig.


        :param apiproxy_publish: The apiproxy_publish of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._apiproxy_publish = apiproxy_publish

    @property
    def apiproxy_deprecate(self):
        """Gets the apiproxy_deprecate of this AlertConfig.  # noqa: E501


        :return: The apiproxy_deprecate of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._apiproxy_deprecate

    @apiproxy_deprecate.setter
    def apiproxy_deprecate(self, apiproxy_deprecate):
        """Sets the apiproxy_deprecate of this AlertConfig.


        :param apiproxy_deprecate: The apiproxy_deprecate of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._apiproxy_deprecate = apiproxy_deprecate

    @property
    def apiproxy_undeprecate(self):
        """Gets the apiproxy_undeprecate of this AlertConfig.  # noqa: E501


        :return: The apiproxy_undeprecate of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._apiproxy_undeprecate

    @apiproxy_undeprecate.setter
    def apiproxy_undeprecate(self, apiproxy_undeprecate):
        """Sets the apiproxy_undeprecate of this AlertConfig.


        :param apiproxy_undeprecate: The apiproxy_undeprecate of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._apiproxy_undeprecate = apiproxy_undeprecate

    @property
    def apiproxy_retire(self):
        """Gets the apiproxy_retire of this AlertConfig.  # noqa: E501


        :return: The apiproxy_retire of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._apiproxy_retire

    @apiproxy_retire.setter
    def apiproxy_retire(self, apiproxy_retire):
        """Sets the apiproxy_retire of this AlertConfig.


        :param apiproxy_retire: The apiproxy_retire of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._apiproxy_retire = apiproxy_retire

    @property
    def apiproxy_unpublish(self):
        """Gets the apiproxy_unpublish of this AlertConfig.  # noqa: E501


        :return: The apiproxy_unpublish of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._apiproxy_unpublish

    @apiproxy_unpublish.setter
    def apiproxy_unpublish(self, apiproxy_unpublish):
        """Sets the apiproxy_unpublish of this AlertConfig.


        :param apiproxy_unpublish: The apiproxy_unpublish of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._apiproxy_unpublish = apiproxy_unpublish

    @property
    def applicationcredentials_create(self):
        """Gets the applicationcredentials_create of this AlertConfig.  # noqa: E501

        Specifies whether or not an alert will be generated when an application credential is created  # noqa: E501

        :return: The applicationcredentials_create of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._applicationcredentials_create

    @applicationcredentials_create.setter
    def applicationcredentials_create(self, applicationcredentials_create):
        """Sets the applicationcredentials_create of this AlertConfig.

        Specifies whether or not an alert will be generated when an application credential is created  # noqa: E501

        :param applicationcredentials_create: The applicationcredentials_create of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._applicationcredentials_create = applicationcredentials_create

    @property
    def applicationcredentials_update(self):
        """Gets the applicationcredentials_update of this AlertConfig.  # noqa: E501

        Specifies whether or not an alert will be generated when an application credential is updated  # noqa: E501

        :return: The applicationcredentials_update of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._applicationcredentials_update

    @applicationcredentials_update.setter
    def applicationcredentials_update(self, applicationcredentials_update):
        """Sets the applicationcredentials_update of this AlertConfig.

        Specifies whether or not an alert will be generated when an application credential is updated  # noqa: E501

        :param applicationcredentials_update: The applicationcredentials_update of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._applicationcredentials_update = applicationcredentials_update

    @property
    def applicationcredentials_delete(self):
        """Gets the applicationcredentials_delete of this AlertConfig.  # noqa: E501

        Specifies whether or not an alert will be generated when an application credential is deleted  # noqa: E501

        :return: The applicationcredentials_delete of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._applicationcredentials_delete

    @applicationcredentials_delete.setter
    def applicationcredentials_delete(self, applicationcredentials_delete):
        """Sets the applicationcredentials_delete of this AlertConfig.

        Specifies whether or not an alert will be generated when an application credential is deleted  # noqa: E501

        :param applicationcredentials_delete: The applicationcredentials_delete of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._applicationcredentials_delete = applicationcredentials_delete

    @property
    def applicationcredentials_enable(self):
        """Gets the applicationcredentials_enable of this AlertConfig.  # noqa: E501

        Specifies whether or not an alert will be generated when an application credential is enabled  # noqa: E501

        :return: The applicationcredentials_enable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._applicationcredentials_enable

    @applicationcredentials_enable.setter
    def applicationcredentials_enable(self, applicationcredentials_enable):
        """Sets the applicationcredentials_enable of this AlertConfig.

        Specifies whether or not an alert will be generated when an application credential is enabled  # noqa: E501

        :param applicationcredentials_enable: The applicationcredentials_enable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._applicationcredentials_enable = applicationcredentials_enable

    @property
    def applicationcredentials_disable(self):
        """Gets the applicationcredentials_disable of this AlertConfig.  # noqa: E501

        Specifies whether or not an alert will be generated when an application credential is disabled  # noqa: E501

        :return: The applicationcredentials_disable of this AlertConfig.  # noqa: E501
        :rtype: bool
        """
        return self._applicationcredentials_disable

    @applicationcredentials_disable.setter
    def applicationcredentials_disable(self, applicationcredentials_disable):
        """Sets the applicationcredentials_disable of this AlertConfig.

        Specifies whether or not an alert will be generated when an application credential is disabled  # noqa: E501

        :param applicationcredentials_disable: The applicationcredentials_disable of this AlertConfig.  # noqa: E501
        :type: bool
        """

        self._applicationcredentials_disable = applicationcredentials_disable

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AlertConfig, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AlertConfig):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
