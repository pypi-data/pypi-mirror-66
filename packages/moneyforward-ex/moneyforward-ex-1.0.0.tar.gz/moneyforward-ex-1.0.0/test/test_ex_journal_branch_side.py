# coding: utf-8

"""
    マネーフォワード クラウド経費API

    このページは[マネーフォワード クラウド経費](https://expense.moneyforward.com)（クラウド型の経費精算・ワークフローサービス）のAPIドキュメントです。ご利用開始の手順については、[github](https://github.com/moneyforward/expense-api-doc) をご覧ください。バグ報告や改善要望はgithub上からissue登録をして頂ければ幸いです。このドキュメントは[Swagger](http://swagger.io)の仕様で作成されています。実際にこのページでAPIの試打を行うことができます。試打を行いたい場合は、APIを利用するアプリケーションの登録の際に、Redirect URIを`https://expense.moneyforward.com/api/oauth2-redirect.html`に指定してお試しください。  # noqa: E501

    The version of the OpenAPI document: 1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import moneyforward_ex
from moneyforward_ex.models.ex_journal_branch_side import ExJournalBranchSide  # noqa: E501
from moneyforward_ex.rest import ApiException

class TestExJournalBranchSide(unittest.TestCase):
    """ExJournalBranchSide unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ExJournalBranchSide
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = moneyforward_ex.models.ex_journal_branch_side.ExJournalBranchSide()  # noqa: E501
        if include_optional :
            return ExJournalBranchSide(
                item_id = '0',
                sub_item_id = '0',
                excise_id = '0',
                dept_id = '0',
                project_code_id = '0',
                ex_destination_id = '0',
                side = 1,
                value = 10000,
                excise_value = 800,
                item = moneyforward_ex.models.item.Item(
                    id = '0',
                    excise_id = '0',
                    name = '勘定科目名称',
                    code = 'item-code-xxx', ),
                sub_item = moneyforward_ex.models.item.Item(
                    id = '0',
                    excise_id = '0',
                    name = '勘定科目名称',
                    code = 'item-code-xxx', ),
                excise = moneyforward_ex.models.excise.Excise(
                    id = '0',
                    long_name = '課税仕入 8%',
                    code = '税区分コード',
                    rate = 0.08, ),
                dept = moneyforward_ex.models.dept.Dept(
                    id = '0',
                    name = '営業部',
                    memo = '0',
                    code = '0',
                    disp_order = 56,
                    is_active = True,
                    parent_id = '0',
                    root_id = '0', ),
                project_code = moneyforward_ex.models.project_code.ProjectCode(
                    id = '0',
                    name = '本社移転プロジェクト',
                    code = 'project-code-001',
                    priority = 0,
                    is_active = True,
                    parent_id = '0',
                    root_id = '0', ),
                ex_destination = moneyforward_ex.models.ex_destination.ExDestination(
                    id = '0',
                    name = 'A商店',
                    code = 'A001',
                    pay_day = 31,
                    number_of_months_later = 1,
                    exclude_holiday_kind = 1,
                    is_withholding_tax = False,
                    default_ex_item_id = '0',
                    default_cr_item_id = '0',
                    default_cr_sub_item_id = '0',
                    default_dept_id = '0',
                    default_project_code_id = '0',
                    withholding_tax_cr_item_id = '0',
                    withholding_tax_cr_sub_item_id = '0',
                    is_tax_include = False,
                    is_active = True,
                    priority = 0, )
            )
        else :
            return ExJournalBranchSide(
        )

    def testExJournalBranchSide(self):
        """Test ExJournalBranchSide"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
