{"version":3,"sources":["webpack:///./src/components/ha-dialog.ts","webpack:///./src/components/ha-icon-input.ts","webpack:///./src/panels/config/lovelace/dashboards/dialog-lovelace-dashboard-detail.ts"],"names":["MwcDialog","customElements","get","createCloseHeading","hass","title","html","_templateObject","localize","_decorate","customElement","_initialize","_MwcDialog","F","_MwcDialog2","_inherits","HaDialog","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","d","kind","static","key","value","style","css","_templateObject2","_LitElement","_LitElement2","HaIconInput","decorators","property","attribute","type","Boolean","label","placeholder","_valueChanged","disabled","errorMessage","ev","detail","fireEvent","bubbles","composed","_templateObject3","LitElement","DialogLovelaceDashboardDetail","_showDialog","_asyncToGenerator","regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","_params","_error","undefined","_urlPath","urlPath","dashboard","_showInSidebar","show_in_sidebar","_icon","icon","_title","_requireAdmin","require_admin","updateComplete","stop","_x","_this$hass$userData","_this$hass$userData2","_this$_params$dashboa","_this$_params$dashboa2","defaultPanelUrlPath","defaultPanel","urlInvalid","test","titleInvalid","trim","_close","id","_templateObject4","_titleChanged","userData","showAdvanced","_fillUrlPath","_iconChanged","_templateObject5","_urlChanged","_showSidebarChanged","_requireAdminChanged","_templateObject6","_templateObject7","_deleteDashboard","_submitting","_toggleDefault","_updateDashboard","_this$hass$userData3","_this$hass$userData4","parts","toLowerCase","split","join","target","checked","_this$_params","setDefaultPanel","DEFAULT_PANEL","_updateDashboard2","_callee2","_this$_params2","_this$_params$dashboa3","values","_context2","updateDashboard","url_path","mode","createDashboard","t0","message","finish","_deleteDashboard2","_callee3","_context3","removeDashboard","sent","haStyleDialog","_templateObject8"],"mappings":"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","file":"chunk.c2c691938b62d004e43c.js","sourcesContent":["import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"./ha-icon\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-icon-input\";\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport {\n  LovelaceDashboard,\n  LovelaceDashboardCreateParams,\n  LovelaceDashboardMutableParams,\n} from \"../../../../data/lovelace\";\nimport { DEFAULT_PANEL, setDefaultPanel } from \"../../../../data/panel\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceDashboardDetailsDialogParams } from \"./show-dialog-lovelace-dashboard-detail\";\n\n@customElement(\"dialog-lovelace-dashboard-detail\")\nexport class DialogLovelaceDashboardDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _params?: LovelaceDashboardDetailsDialogParams;\n\n  @property() private _urlPath!: LovelaceDashboard[\"url_path\"];\n\n  @property() private _showInSidebar!: boolean;\n\n  @property() private _icon!: string;\n\n  @property() private _title!: string;\n\n  @property() private _requireAdmin!: LovelaceDashboard[\"require_admin\"];\n\n  @property() private _error?: string;\n\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceDashboardDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._urlPath = this._params.urlPath || \"\";\n    if (this._params.dashboard) {\n      this._showInSidebar = !!this._params.dashboard.show_in_sidebar;\n      this._icon = this._params.dashboard.icon || \"\";\n      this._title = this._params.dashboard.title || \"\";\n      this._requireAdmin = this._params.dashboard.require_admin || false;\n    } else {\n      this._showInSidebar = true;\n      this._icon = \"\";\n      this._title = \"\";\n      this._requireAdmin = false;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const defaultPanelUrlPath = this.hass.defaultPanel;\n    const urlInvalid =\n      this._params.urlPath !== \"lovelace\" &&\n      !/^[a-zA-Z0-9_-]+-[a-zA-Z0-9_-]+$/.test(this._urlPath);\n    const titleInvalid = !this._title.trim();\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.urlPath\n            ? this._title ||\n                this.hass.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.edit_dashboard\"\n                )\n            : this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.new_dashboard\"\n              )\n        )}\n      >\n        <div>\n          ${this._params.dashboard && !this._params.dashboard.id\n            ? this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.cant_edit_yaml\"\n              )\n            : this._params.urlPath === \"lovelace\"\n            ? this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.cant_edit_default\"\n              )\n            : html`\n                ${this._error\n                  ? html` <div class=\"error\">${this._error}</div> `\n                  : \"\"}\n                <div class=\"form\">\n                  <paper-input\n                    .value=${this._title}\n                    @value-changed=${this._titleChanged}\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title\"\n                    )}\n                    @blur=${this.hass.userData?.showAdvanced\n                      ? this._fillUrlPath\n                      : undefined}\n                    .invalid=${titleInvalid}\n                    .errorMessage=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title_required\"\n                    )}\n                    dialogInitialFocus\n                  ></paper-input>\n                  <ha-icon-input\n                    .value=${this._icon}\n                    @value-changed=${this._iconChanged}\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.icon\"\n                    )}\n                  ></ha-icon-input>\n                  ${!this._params.dashboard && this.hass.userData?.showAdvanced\n                    ? html`\n                        <paper-input\n                          .value=${this._urlPath}\n                          @value-changed=${this._urlChanged}\n                          .label=${this.hass.localize(\n                            \"ui.panel.config.lovelace.dashboards.detail.url\"\n                          )}\n                          .errorMessage=${this.hass.localize(\n                            \"ui.panel.config.lovelace.dashboards.detail.url_error_msg\"\n                          )}\n                          .invalid=${urlInvalid}\n                        ></paper-input>\n                      `\n                    : \"\"}\n                  <ha-switch\n                    .checked=${this._showInSidebar}\n                    @change=${this._showSidebarChanged}\n                    >${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.show_sidebar\"\n                    )}\n                  </ha-switch>\n                  <ha-switch\n                    .checked=${this._requireAdmin}\n                    @change=${this._requireAdminChanged}\n                    >${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.require_admin\"\n                    )}\n                  </ha-switch>\n                </div>\n              `}\n        </div>\n        ${this._params.urlPath\n          ? html`\n              ${this._params.dashboard?.id\n                ? html`\n                    <mwc-button\n                      slot=\"secondaryAction\"\n                      class=\"warning\"\n                      @click=${this._deleteDashboard}\n                      .disabled=${this._submitting}\n                    >\n                      ${this.hass.localize(\n                        \"ui.panel.config.lovelace.dashboards.detail.delete\"\n                      )}\n                    </mwc-button>\n                  `\n                : \"\"}\n              <mwc-button\n                slot=\"secondaryAction\"\n                @click=${this._toggleDefault}\n                .disabled=${this._params.urlPath === \"lovelace\" &&\n                defaultPanelUrlPath === \"lovelace\"}\n              >\n                ${this._params.urlPath === defaultPanelUrlPath\n                  ? this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.remove_default\"\n                    )\n                  : this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.set_default\"\n                    )}\n              </mwc-button>\n            `\n          : \"\"}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateDashboard}\"\n          .disabled=${urlInvalid || titleInvalid || this._submitting}\n        >\n          ${this._params.urlPath\n            ? this._params.dashboard?.id\n              ? this.hass.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.update\"\n                )\n              : this.hass.localize(\"ui.common.close\")\n            : this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._urlPath = ev.detail.value;\n  }\n\n  private _iconChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._icon = ev.detail.value;\n  }\n\n  private _titleChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._title = ev.detail.value;\n    if (!this.hass.userData?.showAdvanced) {\n      this._fillUrlPath();\n    }\n  }\n\n  private _fillUrlPath() {\n    if ((this.hass.userData?.showAdvanced && this._urlPath) || !this._title) {\n      return;\n    }\n    const parts = this._title.toLowerCase().split(\" \");\n\n    this._urlPath =\n      parts.length === 1 ? `lovelace-${parts[0]}` : parts.join(\"_\");\n  }\n\n  private _showSidebarChanged(ev: Event) {\n    this._showInSidebar = (ev.target as HaSwitch).checked;\n  }\n\n  private _requireAdminChanged(ev: Event) {\n    this._requireAdmin = (ev.target as HaSwitch).checked;\n  }\n\n  private _toggleDefault() {\n    const urlPath = this._params?.urlPath;\n    if (!urlPath) {\n      return;\n    }\n    setDefaultPanel(\n      this,\n      urlPath === this.hass.defaultPanel ? DEFAULT_PANEL : urlPath\n    );\n  }\n\n  private async _updateDashboard() {\n    if (this._params?.urlPath && !this._params.dashboard?.id) {\n      this._close();\n    }\n    this._submitting = true;\n    try {\n      const values: Partial<LovelaceDashboardMutableParams> = {\n        require_admin: this._requireAdmin,\n        show_in_sidebar: this._showInSidebar,\n        icon: this._icon || undefined,\n        title: this._title,\n      };\n      if (this._params!.dashboard) {\n        await this._params!.updateDashboard(values);\n      } else {\n        (values as LovelaceDashboardCreateParams).url_path = this._urlPath.trim();\n        (values as LovelaceDashboardCreateParams).mode = \"storage\";\n        await this._params!.createDashboard(\n          values as LovelaceDashboardCreateParams\n        );\n      }\n      this._close();\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteDashboard() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeDashboard()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-switch {\n          padding: 16px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-dashboard-detail\": DialogLovelaceDashboardDetail;\n  }\n}\n"],"sourceRoot":""}