{"version":3,"sources":["webpack:///./src/common/util/parse-aspect-ratio.ts","webpack:///./src/common/util/time-cache-function-promise.ts","webpack:///./src/data/camera.ts","webpack:///./src/panels/lovelace/components/hui-image.ts","webpack:///./src/data/auth.ts"],"names":["__webpack_require__","d","__webpack_exports__","parseAspectRatio","parseOrThrow","num","parsed","parseFloat","isNaN","Error","concat","input","endsWith","w","h","substr","length","arr","replace","split","err","timeCachePromiseFunc","_ref","regeneratorRuntime","mark","_callee","cacheKey","cacheTime","func","hass","entityId","_len","args","_key","cache","lastResult","result","_args","arguments","wrap","_context","prev","next","Array","abrupt","apply","then","setTimeout","undefined","stop","_x","_x2","_x3","_x4","_x5","this","CAMERA_SUPPORT_STREAM","computeMJPEGStreamUrl","entity","entity_id","attributes","access_token","fetchThumbnailUrlWithCache","fetchThumbnailUrl","camera_asyncToGenerator","path","getSignedPath","sent","hassUrl","fetchStreamUrl","_ref2","_callee2","format","data","stream","_context2","type","callWS","url","fetchCameraPrefs","updateCameraPrefs","prefs","Object","assign","_decorate","customElement","_initialize","_LitElement","HuiImage","_LitElement2","_inherits","_super","_createSuper","_this","_classCallCheck","call","_assertThisInitialized","F","kind","decorators","property","key","value","query","_get","_getPrototypeOf","prototype","_attached","cameraImage","cameraView","_startUpdateCameraInterval","_stopUpdateCameraInterval","imageSrc","cameraObj","ratio","aspectRatio","stateObj","states","state","imageFallback","stateImage","_cameraImageSrc","image","filter","stateFilter","STATES_OFF","includes","html","_templateObject","styleMap","paddingBottom","toFixed","classMap","Boolean","_templateObject2","_templateObject3","_onImageError","_onImageLoad","display","_loadError","height","_lastImageHeight","changedProps","has","_updateCameraImageSrc","_this2","_cameraUpdater","window","setInterval","clearInterval","_onImageLoad2","_asyncToGenerator","updateComplete","_image","offsetHeight","_updateCameraImageSrc2","static","css","_templateObject4","LitElement","location","protocol","host","fetchAuthProviders","fetch","credentials","createAuthForUser","userId","username","password","user_id"],"mappings":"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","file":"chunk.ba4345b110d2359c1b0a.js","sourcesContent":["// Handle 16x9, 16:9, 1.78x1, 1.78:1, 1.78\n// Ignore everything else\nconst parseOrThrow = (num) => {\n  const parsed = parseFloat(num);\n  if (isNaN(parsed)) {\n    throw new Error(`${num} is not a number`);\n  }\n  return parsed;\n};\n\nexport default function parseAspectRatio(input: string) {\n  if (!input) {\n    return null;\n  }\n  try {\n    if (input.endsWith(\"%\")) {\n      return { w: 100, h: parseOrThrow(input.substr(0, input.length - 1)) };\n    }\n\n    const arr = input.replace(\":\", \"x\").split(\"x\");\n    if (arr.length === 0) {\n      return null;\n    }\n\n    return arr.length === 1\n      ? { w: parseOrThrow(arr[0]), h: 1 }\n      : { w: parseOrThrow(arr[0]), h: parseOrThrow(arr[1]) };\n  } catch (err) {\n    // Ignore the error\n  }\n  return null;\n}\n","import { HomeAssistant } from \"../../types\";\n\ninterface ResultCache<T> {\n  [entityId: string]: Promise<T> | undefined;\n}\n\nexport const timeCachePromiseFunc = async <T>(\n  cacheKey: string,\n  cacheTime: number,\n  func: (\n    hass: HomeAssistant,\n    entityId: string,\n    ...args: unknown[]\n  ) => Promise<T>,\n  hass: HomeAssistant,\n  entityId: string,\n  ...args: unknown[]\n): Promise<T> => {\n  let cache: ResultCache<T> | undefined = (hass as any)[cacheKey];\n\n  if (!cache) {\n    cache = hass[cacheKey] = {};\n  }\n\n  const lastResult = cache[entityId];\n\n  if (lastResult) {\n    return lastResult;\n  }\n\n  const result = func(hass, entityId, ...args);\n  cache[entityId] = result;\n\n  result.then(\n    // When successful, set timer to clear cache\n    () =>\n      setTimeout(() => {\n        cache![entityId] = undefined;\n      }, cacheTime),\n    // On failure, clear cache right away\n    () => {\n      cache![entityId] = undefined;\n    }\n  );\n\n  return result;\n};\n","import { timeCachePromiseFunc } from \"../common/util/time-cache-function-promise\";\nimport { CameraEntity, HomeAssistant } from \"../types\";\nimport { getSignedPath } from \"./auth\";\n\nexport const CAMERA_SUPPORT_ON_OFF = 1;\nexport const CAMERA_SUPPORT_STREAM = 2;\n\nexport interface CameraPreferences {\n  preload_stream: boolean;\n}\n\nexport interface CameraThumbnail {\n  content_type: string;\n  content: string;\n}\n\nexport interface Stream {\n  url: string;\n}\n\nexport const computeMJPEGStreamUrl = (entity: CameraEntity) =>\n  `/api/camera_proxy_stream/${entity.entity_id}?token=${entity.attributes.access_token}`;\n\nexport const fetchThumbnailUrlWithCache = (\n  hass: HomeAssistant,\n  entityId: string\n) =>\n  timeCachePromiseFunc(\n    \"_cameraTmbUrl\",\n    9000,\n    fetchThumbnailUrl,\n    hass,\n    entityId\n  );\n\nexport const fetchThumbnailUrl = async (\n  hass: HomeAssistant,\n  entityId: string\n) => {\n  const path = await getSignedPath(hass, `/api/camera_proxy/${entityId}`);\n  return hass.hassUrl(path.path);\n};\n\nexport const fetchStreamUrl = async (\n  hass: HomeAssistant,\n  entityId: string,\n  format?: \"hls\"\n) => {\n  const data = {\n    type: \"camera/stream\",\n    entity_id: entityId,\n  };\n  if (format) {\n    // @ts-ignore\n    data.format = format;\n  }\n  const stream = await hass.callWS<Stream>(data);\n  stream.url = hass.hassUrl(stream.url);\n  return stream;\n};\n\nexport const fetchCameraPrefs = (hass: HomeAssistant, entityId: string) =>\n  hass.callWS<CameraPreferences>({\n    type: \"camera/get_prefs\",\n    entity_id: entityId,\n  });\n\nexport const updateCameraPrefs = (\n  hass: HomeAssistant,\n  entityId: string,\n  prefs: {\n    preload_stream?: boolean;\n  }\n) =>\n  hass.callWS<CameraPreferences>({\n    type: \"camera/update_prefs\",\n    entity_id: entityId,\n    ...prefs,\n  });\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { styleMap } from \"lit-html/directives/style-map\";\nimport { STATES_OFF } from \"../../../common/const\";\nimport parseAspectRatio from \"../../../common/util/parse-aspect-ratio\";\nimport { fetchThumbnailUrlWithCache } from \"../../../data/camera\";\nimport { CameraEntity, HomeAssistant } from \"../../../types\";\n\nconst UPDATE_INTERVAL = 10000;\nconst DEFAULT_FILTER = \"grayscale(100%)\";\n\nexport interface StateSpecificConfig {\n  [state: string]: string;\n}\n\n@customElement(\"hui-image\")\nexport class HuiImage extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() public entity?: string;\n\n  @property() public image?: string;\n\n  @property() public stateImage?: StateSpecificConfig;\n\n  @property() public cameraImage?: string;\n\n  @property() public cameraView?: \"live\" | \"auto\";\n\n  @property() public aspectRatio?: string;\n\n  @property() public filter?: string;\n\n  @property() public stateFilter?: StateSpecificConfig;\n\n  @property() private _loadError?: boolean;\n\n  @property() private _cameraImageSrc?: string;\n\n  @query(\"img\") private _image!: HTMLImageElement;\n\n  private _lastImageHeight?: number;\n\n  private _cameraUpdater?: number;\n\n  private _attached?: boolean;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    this._attached = true;\n    if (this.cameraImage && this.cameraView !== \"live\") {\n      this._startUpdateCameraInterval();\n    }\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._attached = false;\n    this._stopUpdateCameraInterval();\n  }\n\n  protected render(): TemplateResult {\n    const ratio = this.aspectRatio ? parseAspectRatio(this.aspectRatio) : null;\n    const stateObj =\n      this.hass && this.entity ? this.hass.states[this.entity] : undefined;\n    const state = stateObj ? stateObj.state : \"unavailable\";\n\n    // Figure out image source to use\n    let imageSrc: string | undefined;\n    let cameraObj: CameraEntity | undefined;\n    // Track if we are we using a fallback image, used for filter.\n    let imageFallback = !this.stateImage;\n\n    if (this.cameraImage) {\n      if (this.cameraView === \"live\") {\n        cameraObj =\n          this.hass && (this.hass.states[this.cameraImage] as CameraEntity);\n      } else {\n        imageSrc = this._cameraImageSrc;\n      }\n    } else if (this.stateImage) {\n      const stateImage = this.stateImage[state];\n\n      if (stateImage) {\n        imageSrc = stateImage;\n      } else {\n        imageSrc = this.image;\n        imageFallback = true;\n      }\n    } else {\n      imageSrc = this.image;\n    }\n\n    if (imageSrc) {\n      imageSrc = this.hass!.hassUrl(imageSrc);\n    }\n\n    // Figure out filter to use\n    let filter = this.filter || \"\";\n\n    if (this.stateFilter && this.stateFilter[state]) {\n      filter = this.stateFilter[state];\n    }\n\n    if (!filter && this.entity) {\n      const isOff = !stateObj || STATES_OFF.includes(state);\n      filter = isOff && imageFallback ? DEFAULT_FILTER : \"\";\n    }\n\n    return html`\n      <div\n        style=${styleMap({\n          paddingBottom:\n            ratio && ratio.w > 0 && ratio.h > 0\n              ? `${((100 * ratio.h) / ratio.w).toFixed(2)}%`\n              : \"\",\n        })}\n        class=${classMap({\n          ratio: Boolean(ratio && ratio.w > 0 && ratio.h > 0),\n        })}\n      >\n        ${this.cameraImage && this.cameraView === \"live\"\n          ? html`\n              <ha-camera-stream\n                .hass=${this.hass}\n                .stateObj=\"${cameraObj}\"\n              ></ha-camera-stream>\n            `\n          : html`\n              <img\n                id=\"image\"\n                src=${imageSrc}\n                @error=${this._onImageError}\n                @load=${this._onImageLoad}\n                style=${styleMap({\n                  filter,\n                  display: this._loadError ? \"none\" : \"block\",\n                })}\n              />\n            `}\n        <div\n          id=\"brokenImage\"\n          style=${styleMap({\n            height: `${this._lastImageHeight || \"100\"}px`,\n            display: this._loadError ? \"block\" : \"none\",\n          })}\n        ></div>\n      </div>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"cameraImage\") && this.cameraView !== \"live\") {\n      this._updateCameraImageSrc();\n      this._startUpdateCameraInterval();\n    }\n  }\n\n  private _startUpdateCameraInterval(): void {\n    this._stopUpdateCameraInterval();\n    if (this.cameraImage && this._attached) {\n      this._cameraUpdater = window.setInterval(\n        () => this._updateCameraImageSrc(),\n        UPDATE_INTERVAL\n      );\n    }\n  }\n\n  private _stopUpdateCameraInterval(): void {\n    if (this._cameraUpdater) {\n      clearInterval(this._cameraUpdater);\n    }\n  }\n\n  private _onImageError(): void {\n    this._loadError = true;\n  }\n\n  private async _onImageLoad(): Promise<void> {\n    this._loadError = false;\n    await this.updateComplete;\n    this._lastImageHeight = this._image.offsetHeight;\n  }\n\n  private async _updateCameraImageSrc(): Promise<void> {\n    if (!this.hass || !this.cameraImage) {\n      return;\n    }\n\n    const cameraState = this.hass.states[this.cameraImage] as\n      | CameraEntity\n      | undefined;\n\n    if (!cameraState) {\n      this._onImageError();\n      return;\n    }\n\n    this._cameraImageSrc = await fetchThumbnailUrlWithCache(\n      this.hass,\n      this.cameraImage\n    );\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      img {\n        display: block;\n        height: auto;\n        transition: filter 0.2s linear;\n        width: 100%;\n      }\n\n      .ratio {\n        position: relative;\n        width: 100%;\n        height: 0;\n      }\n\n      .ratio img,\n      .ratio div {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n\n      #brokenImage {\n        background: grey url(\"/static/images/image-broken.svg\") center/36px\n          no-repeat;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-image\": HuiImage;\n  }\n}\n","import { HomeAssistant } from \"../types\";\n\nexport interface AuthProvider {\n  name: string;\n  id: string;\n  type: string;\n}\n\nexport interface Credential {\n  type: string;\n}\n\nexport interface SignedPath {\n  path: string;\n}\n\nexport const hassUrl = `${location.protocol}//${location.host}`;\n\nexport const getSignedPath = (\n  hass: HomeAssistant,\n  path: string\n): Promise<SignedPath> => hass.callWS({ type: \"auth/sign_path\", path });\n\nexport const fetchAuthProviders = () =>\n  fetch(\"/auth/providers\", {\n    credentials: \"same-origin\",\n  });\n\nexport const createAuthForUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  username: string,\n  password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/create\",\n    user_id: userId,\n    username,\n    password,\n  });\n"],"sourceRoot":""}