{"version":3,"sources":["webpack:///./src/panels/lovelace/common/graph/coordinates.ts","webpack:///./src/panels/lovelace/common/graph/get-history-coordinates.ts","webpack:///./src/panels/lovelace/components/hui-graph-base.ts","webpack:///./src/data/graph.ts","webpack:///./src/panels/lovelace/common/graph/get-path.ts","webpack:///./src/panels/lovelace/header-footer/hui-graph-header-footer.ts"],"names":["average","items","reduce","sum","entry","parseFloat","state","length","lastValue","coordinates","history","hours","width","detail","forEach","item","Number","filter","isNaN","min","Math","apply","_toConsumableArray","map","max","now","Date","getTime","res","point","age","last_changed","key","abs","floor","round","toString","push","coords","yRatio","xRatio","isFinite","first","Boolean","last","getCoords","i","offset","arguments","undefined","depth","subItem","index","x","y","height","calcPoints","getHistoryCoordinates","_ref","regeneratorRuntime","mark","_callee","hass","entity","endTime","startTime","stateHistory","wrap","_context","prev","next","setHours","getHours","fetchRecent","sent","abrupt","stop","_x","_x2","_x3","_x4","this","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_inherits","HuiGraphBase","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","concat","_assertThisInitialized","d","kind","decorators","property","value","html","_templateObject","_path","svg","_templateObject2","_templateObject3","changedProps","has","Z","path","_step","_Ax","_Ay","_Bx","_By","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","getPath","static","css","_templateObject4","LitElement","HuiGraphHeaderFooter","hui_graph_header_footer_decorate","hui_graph_header_footer_inherits","hui_graph_header_footer_createSuper","hui_graph_header_footer_classCallCheck","hui_graph_header_footer_assertThisInitialized","config","split","Error","cardConfig","Object","assign","hours_to_show","_config","_coordinates","hui_graph_header_footer_templateObject3","hui_graph_header_footer_templateObject4","hui_graph_header_footer_templateObject2","hui_graph_header_footer_templateObject","_date","_getCoordinates","_getCoordinates2","_templateObject5"],"mappings":"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","file":"chunk.3df3b273df932eed4695.js","sourcesContent":["import { strokeWidth } from \"../../../../data/graph\";\n\nconst average = (items: any[]): number => {\n  return (\n    items.reduce((sum, entry) => sum + parseFloat(entry.state), 0) /\n    items.length\n  );\n};\n\nconst lastValue = (items: any[]): number => {\n  return parseFloat(items[items.length - 1].state) || 0;\n};\n\nconst calcPoints = (\n  history: any,\n  hours: number,\n  width: number,\n  detail: number,\n  min: number,\n  max: number\n): number[][] => {\n  const coords = [] as number[][];\n  const height = 80;\n  let yRatio = (max - min) / height;\n  yRatio = yRatio !== 0 ? yRatio : height;\n  let xRatio = width / (hours - (detail === 1 ? 1 : 0));\n  xRatio = isFinite(xRatio) ? xRatio : width;\n\n  const first = history.filter(Boolean)[0];\n  let last = [average(first), lastValue(first)];\n\n  const getCoords = (item: any[], i: number, offset = 0, depth = 1) => {\n    if (depth > 1 && item) {\n      return item.forEach((subItem, index) =>\n        getCoords(subItem, i, index, depth - 1)\n      );\n    }\n\n    const x = xRatio * (i + offset / 6);\n\n    if (item) {\n      last = [average(item), lastValue(item)];\n    }\n    const y =\n      height + strokeWidth / 2 - ((item ? last[0] : last[1]) - min) / yRatio;\n    return coords.push([x, y]);\n  };\n\n  for (let i = 0; i < history.length; i += 1) {\n    getCoords(history[i], i, 0, detail);\n  }\n\n  if (coords.length === 1) {\n    coords[1] = [width, coords[0][1]];\n  }\n\n  coords.push([width, coords[coords.length - 1][1]]);\n  return coords;\n};\n\nexport const coordinates = (\n  history: any,\n  hours: number,\n  width: number,\n  detail: number\n): number[][] | undefined => {\n  history.forEach((item) => {\n    item.state = Number(item.state);\n  });\n  history = history.filter((item) => !Number.isNaN(item.state));\n\n  const min = Math.min(...history.map((item) => item.state));\n  const max = Math.max(...history.map((item) => item.state));\n  const now = new Date().getTime();\n\n  const reduce = (res, item, point) => {\n    const age = now - new Date(item.last_changed).getTime();\n\n    let key = Math.abs(age / (1000 * 3600) - hours);\n    if (point) {\n      key = (key - Math.floor(key)) * 60;\n      key = Number((Math.round(key / 10) * 10).toString()[0]);\n    } else {\n      key = Math.floor(key);\n    }\n    if (!res[key]) {\n      res[key] = [];\n    }\n    res[key].push(item);\n    return res;\n  };\n\n  history = history.reduce((res, item) => reduce(res, item, false), []);\n  if (detail > 1) {\n    history = history.map((entry) =>\n      entry.reduce((res, item) => reduce(res, item, true), [])\n    );\n  }\n\n  if (!history.length) {\n    return undefined;\n  }\n\n  return calcPoints(history, hours, width, detail, min, max);\n};\n","import { fetchRecent } from \"../../../../data/history\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { coordinates } from \"./coordinates\";\n\nexport const getHistoryCoordinates = async (\n  hass: HomeAssistant,\n  entity: string,\n  hours: number,\n  detail: number\n): Promise<number[][]> => {\n  const endTime = new Date();\n  const startTime = new Date();\n  startTime.setHours(endTime.getHours() - hours);\n\n  const stateHistory = await fetchRecent(hass, entity, startTime, endTime);\n\n  if (stateHistory.length < 1 || stateHistory[0].length < 1) {\n    return [];\n  }\n\n  const coords = coordinates(stateHistory[0], hours, 500, detail);\n\n  if (!coords) {\n    return [];\n  }\n\n  return coords;\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  svg,\n  TemplateResult,\n} from \"lit-element\";\nimport { strokeWidth } from \"../../../data/graph\";\nimport { getPath } from \"../common/graph/get-path\";\n\n@customElement(\"hui-graph-base\")\nexport class HuiGraphBase extends LitElement {\n  @property() public coordinates?: any;\n\n  @property() private _path?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this._path\n        ? svg`<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 100\">\n          <g>\n            <mask id=\"fill\">\n              <path\n                class='fill'\n                fill='white'\n                d=\"${this._path} L 500, 100 L 0, 100 z\"\n              />\n            </mask>\n            <rect height=\"100%\" width=\"100%\" id=\"fill-rect\" fill=\"var(--accent-color)\" mask=\"url(#fill)\"></rect>\n            <mask id=\"line\">\n              <path\n                fill=\"none\"\n                stroke=\"var(--accent-color)\"\n                stroke-width=\"${strokeWidth}\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                d=${this._path}\n              ></path>\n            </mask>\n            <rect height=\"100%\" width=\"100%\" id=\"rect\" fill=\"var(--accent-color)\" mask=\"url(#line)\"></rect>\n          </g>\n        </svg>`\n        : svg`<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 100\"></svg>`}\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!this.coordinates) {\n      return;\n    }\n\n    if (changedProps.has(\"coordinates\")) {\n      this._path = getPath(this.coordinates);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: flex;\n        width: 100%;\n      }\n      .fill {\n        opacity: 0.1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-graph-base\": HuiGraphBase;\n  }\n}\n","export const strokeWidth = 5;\n","const midPoint = (\n  _Ax: number,\n  _Ay: number,\n  _Bx: number,\n  _By: number\n): number[] => {\n  const _Zx = (_Ax - _Bx) / 2 + _Bx;\n  const _Zy = (_Ay - _By) / 2 + _By;\n  return [_Zx, _Zy];\n};\n\nexport const getPath = (coords: number[][]): string => {\n  if (!coords.length) {\n    return \"\";\n  }\n\n  let next: number[];\n  let Z: number[];\n  const X = 0;\n  const Y = 1;\n  let path = \"\";\n  let last = coords.filter(Boolean)[0];\n\n  path += `M ${last[X]},${last[Y]}`;\n\n  for (const coord of coords) {\n    next = coord;\n    Z = midPoint(last[X], last[Y], next[X], next[Y]);\n    path += ` ${Z[X]},${Z[Y]}`;\n    path += ` Q${next[X]},${next[Y]}`;\n    last = next;\n  }\n\n  path += ` ${next![X]},${next![Y]}`;\n  return path;\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport { getHistoryCoordinates } from \"../common/graph/get-history-coordinates\";\n\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../components/hui-graph-base\";\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { GraphHeaderFooterConfig } from \"./types\";\n\nconst MINUTE = 60000;\n\n@customElement(\"hui-graph-header-footer\")\nexport class HuiGraphHeaderFooter extends LitElement\n  implements LovelaceHeaderFooter {\n  public static getStubConfig(): object {\n    return {};\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() protected _config?: GraphHeaderFooterConfig;\n\n  @property() private _coordinates?: number[][];\n\n  private _date?: Date;\n\n  public setConfig(config: GraphHeaderFooterConfig): void {\n    if (!config?.entity || config.entity.split(\".\")[0] !== \"sensor\") {\n      throw new Error(\n        \"Invalid Configuration: An entity from within the sensor domain required\"\n      );\n    }\n\n    const cardConfig = {\n      detail: 1,\n      hours_to_show: 24,\n      ...config,\n    };\n\n    cardConfig.hours_to_show = Number(cardConfig.hours_to_show);\n    cardConfig.detail =\n      cardConfig.detail === 1 || cardConfig.detail === 2\n        ? cardConfig.detail\n        : 1;\n\n    this._config = cardConfig;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    if (!this._coordinates) {\n      return html`\n        <div class=\"container\">\n          <paper-spinner active></paper-spinner>\n        </div>\n      `;\n    }\n\n    if (this._coordinates.length < 1) {\n      return html`\n        <div class=\"container\">\n          <div class=\"info\">\n            No state history found.\n          </div>\n        </div>\n      `;\n    }\n\n    return html`\n      <hui-graph-base .coordinates=${this._coordinates}></hui-graph-base>\n    `;\n  }\n\n  protected firstUpdated(): void {\n    this._date = new Date();\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    if (changedProps.has(\"_config\")) {\n      this._getCoordinates();\n    } else if (Date.now() - this._date!.getTime() >= MINUTE) {\n      this._getCoordinates();\n    }\n  }\n\n  private async _getCoordinates(): Promise<void> {\n    this._coordinates = await getHistoryCoordinates(\n      this.hass!,\n      this._config!.entity,\n      this._config!.hours_to_show!,\n      this._config!.detail!\n    );\n\n    this._date = new Date();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-spinner {\n        position: absolute;\n        top: calc(50% - 28px);\n      }\n      .container {\n        display: flex;\n        justify-content: center;\n        position: relative;\n        padding-bottom: 20%;\n      }\n      .info {\n        position: absolute;\n        top: calc(50% - 16px);\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-graph-header-footer\": HuiGraphHeaderFooter;\n  }\n}\n"],"sourceRoot":""}