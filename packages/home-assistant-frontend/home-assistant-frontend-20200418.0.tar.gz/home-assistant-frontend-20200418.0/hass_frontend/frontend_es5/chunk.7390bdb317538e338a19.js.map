{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-behavior.js","webpack:///./node_modules/@polymer/paper-listbox/paper-listbox.js","webpack:///./node_modules/@polymer/paper-item/paper-item-shared-styles.js","webpack:///./node_modules/@polymer/paper-item/paper-item.js","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/components/user/ha-user-badge.ts","webpack:///./src/components/ha-sidebar.ts","webpack:///./src/external_app/external_config.ts"],"names":["__webpack_require__","d","__webpack_exports__","PaperItemBehavior","_polymer_iron_behaviors_iron_button_state_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_iron_behaviors_iron_control_state_js__WEBPACK_IMPORTED_MODULE_2__","IronButtonState","IronControlState","hostAttributes","role","tabindex","Polymer","_template","html","_templateObject","is","behaviors","IronMenuBehavior","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","ironIconClass","customElements","get","loaded","HaIcon","_ironIconClass","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","key","value","node","eventName","methodName","_get","_getPrototypeOf","prototype","_iconsetName","e","then","bind","define","compare","caseInsensitiveCompare","a","b","toLowerCase","computeInitials","name","trim","split","slice","map","s","substr","join","customElement","StateBadge","property","user","initials","changedProps","toggleAttribute","css","_templateObject2","LitElement","SHOW_AFTER_SPACER","SUPPORT_SCROLL_IF_NEEDED","body","SORT_VALUE_URL_PATHS","logbook","history","developer-tools","hassio","config","panelSorter","aLovelace","component_name","bLovelace","title","aBuiltIn","url_path","bBuiltIn","HaSidebar","type","Boolean","reflect","_this2","hass","ha_sidebar_templateObject","_computePanels2","_slicedToArray","panels","beforeSpacer","afterSpacer","Object","values","forEach","panel","defaultPanel","includes","push","sort","computePanels","notificationCount","_notifications","entityId","states","computeDomain","getDefaultPanel","ha_sidebar_templateObject2","narrow","_templateObject3","localize","dockedSidebar","_toggleSidebar","panelUrl","_listboxFocusIn","_listboxFocusOut","_listboxScroll","_listboxKeydown","_renderPanel","icon","_externalConfig","hasSettingsScreen","_templateObject4","_handleExternalAppConfiguration","_itemMouseEnter","_itemMouseLeave","_handleShowNotificationDrawer","expanded","_templateObject5","_templateObject6","classMap","profile","iron-selected","has","oldHass","bus","_this3","ha_sidebar_get","ha_sidebar_getPrototypeOf","auth","external","cache","cfg","sendMessage","conf","subscribeNotifications","connection","notifications","alwaysExpand","_rtl","computeRTL","selectedEl","shadowRoot","querySelector","scrollIntoViewIfNeeded","ev","Date","getTime","_recentKeydownActiveUntil","_mouseLeaveTimeout","clearTimeout","undefined","_showTooltip","currentTarget","_this4","window","setTimeout","_hideTooltip","target","nodeName","eventOptions","passive","item","_tooltipHideTimeout","tooltip","_tooltip","listbox","top","offsetTop","contains","scrollTop","style","display","left","offsetLeft","clientWidth","_this5","fireEvent","preventDefault","fireMessage","urlPath","_templateObject7","_templateObject8"],"mappings":"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","file":"chunk.7390bdb317538e338a19.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\n\n/*\n`PaperItemBehavior` is a convenience behavior shared by <paper-item> and\n<paper-icon-item> that manages the shared control states and attributes of\nthe items.\n*/\n/** @polymerBehavior PaperItemBehavior */\nexport const PaperItemBehaviorImpl = {\n  hostAttributes: {role: 'option', tabindex: '0'}\n};\n\n/** @polymerBehavior */\nexport const PaperItemBehavior =\n    [IronButtonState, IronControlState, PaperItemBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {IronMenuBehavior} from '@polymer/iron-menu-behavior/iron-menu-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Menus](https://www.google.com/design/spec/components/menus.html)\n\n`<paper-listbox>` implements an accessible listbox control with Material Design\nstyling. The focused item is highlighted, and the selected item has bolded text.\n\n    <paper-listbox>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nAn initial selection can be specified with the `selected` attribute.\n\n    <paper-listbox selected=\"0\">\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nMake a multi-select listbox with the `multi` attribute. Items in a multi-select\nlistbox can be deselected, and multiple item can be selected.\n\n    <paper-listbox multi>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-listbox-background-color`   | Menu background color |\n`--primary-background-color`\n`--paper-listbox-color`              | Menu foreground color |\n`--primary-text-color`\n`--paper-listbox`                    | Mixin applied to the listbox | `{}`\n\n### Accessibility\n\n`<paper-listbox>` has `role=\"listbox\"` by default. A multi-select listbox will\nalso have `aria-multiselectable` set. It implements key bindings to navigate\nthrough the listbox with the up and down arrow keys, esc to exit the listbox,\nand enter to activate a listbox item. Typing the first letter of a listbox item\nwill also focus it.\n\n@group Paper Elements\n@element paper-listbox\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        padding: 8px 0;\n\n        background: var(--paper-listbox-background-color, var(--primary-background-color));\n        color: var(--paper-listbox-color, var(--primary-text-color));\n\n        @apply --paper-listbox;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-listbox',\n  behaviors: [IronMenuBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'listbox'}\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/color.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-item-shared-styles\">\n  <template>\n    <style>\n      :host, .paper-item {\n        display: block;\n        position: relative;\n        min-height: var(--paper-item-min-height, 48px);\n        padding: 0px 16px;\n      }\n\n      .paper-item {\n        @apply --paper-font-subhead;\n        border:none;\n        outline: none;\n        background: white;\n        width: 100%;\n        text-align: left;\n      }\n\n      :host([hidden]), .paper-item[hidden] {\n        display: none !important;\n      }\n\n      :host(.iron-selected), .paper-item.iron-selected {\n        font-weight: var(--paper-item-selected-weight, bold);\n\n        @apply --paper-item-selected;\n      }\n\n      :host([disabled]), .paper-item[disabled] {\n        color: var(--paper-item-disabled-color, var(--disabled-text-color));\n\n        @apply --paper-item-disabled;\n      }\n\n      :host(:focus), .paper-item:focus {\n        position: relative;\n        outline: 0;\n\n        @apply --paper-item-focused;\n      }\n\n      :host(:focus):before, .paper-item:focus:before {\n        @apply --layout-fit;\n\n        background: currentColor;\n        content: '';\n        opacity: var(--dark-divider-opacity);\n        pointer-events: none;\n\n        @apply --paper-item-focused-before;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/**\nMaterial design:\n[Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal\nflexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled\ntwo-line and three-line items.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-item raised>Polymer Project</paper-item>\n    </a>\n\nIf you are concerned about performance and want to use `paper-item` in a\n`paper-listbox` with many items, you can just use a native `button` with the\n`paper-item` class applied (provided you have correctly included the shared\nstyles):\n\n    <style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n    <paper-listbox>\n      <button class=\"paper-item\" role=\"option\">Inbox</button>\n      <button class=\"paper-item\" role=\"option\">Starred</button>\n      <button class=\"paper-item\" role=\"option\">Sent mail</button>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be\nmore appropriate to set `role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or\n`role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n@group Paper Elements\n@element paper-item\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\">\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: 'paper-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import \"@polymer/iron-icon/iron-icon\";\nimport type { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\nimport { Constructor } from \"../types\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { toggleAttribute } from \"../../common/dom/toggle_attribute\";\nimport { User } from \"../../data/user\";\nimport { CurrentUser } from \"../../types\";\n\nconst computeInitials = (name: string) => {\n  if (!name) {\n    return \"user\";\n  }\n  return (\n    name\n      .trim()\n      // Split by space and take first 3 words\n      .split(\" \")\n      .slice(0, 3)\n      // Of each word, take first letter\n      .map((s) => s.substr(0, 1))\n      .join(\"\")\n  );\n};\n\n@customElement(\"ha-user-badge\")\nclass StateBadge extends LitElement {\n  @property() public user?: User | CurrentUser;\n\n  protected render(): TemplateResult {\n    const user = this.user;\n    const initials = user ? computeInitials(user.name) : \"?\";\n    return html` ${initials} `;\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    toggleAttribute(\n      this,\n      \"long\",\n      (this.user ? computeInitials(this.user.name) : \"?\").length > 2\n    );\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-block;\n        box-sizing: border-box;\n        width: 40px;\n        line-height: 40px;\n        border-radius: 50%;\n        text-align: center;\n        background-color: var(--light-primary-color);\n        text-decoration: none;\n        color: var(--primary-text-color);\n        overflow: hidden;\n      }\n\n      :host([long]) {\n        font-size: 80%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-user-badge\": StateBadge;\n  }\n}\n","import \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport type { PaperIconItemElement } from \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  eventOptions,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { compare } from \"../common/string/compare\";\nimport { computeRTL } from \"../common/util/compute_rtl\";\nimport { getDefaultPanel } from \"../data/panel\";\nimport {\n  PersistentNotification,\n  subscribeNotifications,\n} from \"../data/persistent_notification\";\nimport {\n  ExternalConfig,\n  getExternalConfig,\n} from \"../external_app/external_config\";\nimport type { HomeAssistant, PanelInfo } from \"../types\";\nimport \"./ha-icon\";\nimport \"./ha-menu-button\";\nimport \"./user/ha-user-badge\";\n\nconst SHOW_AFTER_SPACER = [\"config\", \"developer-tools\", \"hassio\"];\n\nconst SUPPORT_SCROLL_IF_NEEDED = \"scrollIntoViewIfNeeded\" in document.body;\n\nconst SORT_VALUE_URL_PATHS = {\n  map: 1,\n  logbook: 2,\n  history: 3,\n  \"developer-tools\": 9,\n  hassio: 10,\n  config: 11,\n};\n\nconst panelSorter = (a: PanelInfo, b: PanelInfo) => {\n  // Put all the Lovelace at the top.\n  const aLovelace = a.component_name === \"lovelace\";\n  const bLovelace = b.component_name === \"lovelace\";\n\n  if (aLovelace && bLovelace) {\n    return compare(a.title!, b.title!);\n  }\n  if (aLovelace && !bLovelace) {\n    return -1;\n  }\n  if (bLovelace) {\n    return 1;\n  }\n\n  const aBuiltIn = a.url_path in SORT_VALUE_URL_PATHS;\n  const bBuiltIn = b.url_path in SORT_VALUE_URL_PATHS;\n\n  if (aBuiltIn && bBuiltIn) {\n    return SORT_VALUE_URL_PATHS[a.url_path] - SORT_VALUE_URL_PATHS[b.url_path];\n  }\n  if (aBuiltIn) {\n    return -1;\n  }\n  if (bBuiltIn) {\n    return 1;\n  }\n  // both not built in, sort by title\n  return compare(a.title!, b.title!);\n};\n\nconst computePanels = (hass: HomeAssistant): [PanelInfo[], PanelInfo[]] => {\n  const panels = hass.panels;\n  if (!panels) {\n    return [[], []];\n  }\n\n  const beforeSpacer: PanelInfo[] = [];\n  const afterSpacer: PanelInfo[] = [];\n\n  Object.values(panels).forEach((panel) => {\n    if (!panel.title || panel.url_path === hass.defaultPanel) {\n      return;\n    }\n    (SHOW_AFTER_SPACER.includes(panel.url_path)\n      ? afterSpacer\n      : beforeSpacer\n    ).push(panel);\n  });\n\n  beforeSpacer.sort(panelSorter);\n  afterSpacer.sort(panelSorter);\n\n  return [beforeSpacer, afterSpacer];\n};\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaSidebar extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public narrow!: boolean;\n\n  @property({ type: Boolean }) public alwaysExpand = false;\n\n  @property({ type: Boolean, reflect: true }) public expanded = false;\n\n  @property() private _externalConfig?: ExternalConfig;\n\n  @property() private _notifications?: PersistentNotification[];\n\n  // property used only in css\n  // @ts-ignore\n  @property({ type: Boolean, reflect: true }) private _rtl = false;\n\n  private _mouseLeaveTimeout?: number;\n\n  private _tooltipHideTimeout?: number;\n\n  private _recentKeydownActiveUntil = 0;\n\n  protected render() {\n    const hass = this.hass;\n\n    if (!hass) {\n      return html``;\n    }\n\n    const [beforeSpacer, afterSpacer] = computePanels(hass);\n\n    let notificationCount = this._notifications\n      ? this._notifications.length\n      : 0;\n    for (const entityId in hass.states) {\n      if (computeDomain(entityId) === \"configurator\") {\n        notificationCount++;\n      }\n    }\n\n    const defaultPanel = getDefaultPanel(hass);\n\n    return html`\n      <div class=\"menu\">\n        ${!this.narrow\n          ? html`\n              <paper-icon-button\n                aria-label=${hass.localize(\"ui.sidebar.sidebar_toggle\")}\n                .icon=${hass.dockedSidebar === \"docked\"\n                  ? \"hass:menu-open\"\n                  : \"hass:menu\"}\n                @click=${this._toggleSidebar}\n              ></paper-icon-button>\n            `\n          : \"\"}\n        <span class=\"title\">Home Assistant</span>\n      </div>\n      <paper-listbox\n        attr-for-selected=\"data-panel\"\n        .selected=${hass.panelUrl}\n        @focusin=${this._listboxFocusIn}\n        @focusout=${this._listboxFocusOut}\n        @scroll=${this._listboxScroll}\n        @keydown=${this._listboxKeydown}\n      >\n        ${this._renderPanel(\n          defaultPanel.url_path,\n          defaultPanel.icon || \"hass:view-dashboard\",\n          defaultPanel.title || hass.localize(\"panel.states\")\n        )}\n        ${beforeSpacer.map((panel) =>\n          this._renderPanel(\n            panel.url_path,\n            panel.icon,\n            hass.localize(`panel.${panel.title}`) || panel.title\n          )\n        )}\n        <div class=\"spacer\" disabled></div>\n\n        ${afterSpacer.map((panel) =>\n          this._renderPanel(\n            panel.url_path,\n            panel.icon,\n            hass.localize(`panel.${panel.title}`) || panel.title\n          )\n        )}\n        ${this._externalConfig && this._externalConfig.hasSettingsScreen\n          ? html`\n              <a\n                aria-role=\"option\"\n                aria-label=${hass.localize(\n                  \"ui.sidebar.external_app_configuration\"\n                )}\n                href=\"#external-app-configuration\"\n                tabindex=\"-1\"\n                @click=${this._handleExternalAppConfiguration}\n                @mouseenter=${this._itemMouseEnter}\n                @mouseleave=${this._itemMouseLeave}\n              >\n                <paper-icon-item>\n                  <ha-icon\n                    slot=\"item-icon\"\n                    icon=\"hass:cellphone-settings-variant\"\n                  ></ha-icon>\n                  <span class=\"item-text\">\n                    ${hass.localize(\"ui.sidebar.external_app_configuration\")}\n                  </span>\n                </paper-icon-item>\n              </a>\n            `\n          : \"\"}\n      </paper-listbox>\n\n      <div class=\"divider\"></div>\n\n      <div\n        class=\"notifications-container\"\n        @mouseenter=${this._itemMouseEnter}\n        @mouseleave=${this._itemMouseLeave}\n      >\n        <paper-icon-item\n          class=\"notifications\"\n          aria-role=\"option\"\n          @click=${this._handleShowNotificationDrawer}\n        >\n          <ha-icon slot=\"item-icon\" icon=\"hass:bell\"></ha-icon>\n          ${!this.expanded && notificationCount > 0\n            ? html`\n                <span class=\"notification-badge\" slot=\"item-icon\">\n                  ${notificationCount}\n                </span>\n              `\n            : \"\"}\n          <span class=\"item-text\">\n            ${hass.localize(\"ui.notification_drawer.title\")}\n          </span>\n          ${this.expanded && notificationCount > 0\n            ? html`\n                <span class=\"notification-badge\">${notificationCount}</span>\n              `\n            : \"\"}\n        </paper-icon-item>\n      </div>\n\n      <a\n        class=${classMap({\n          profile: true,\n          // Mimick behavior that paper-listbox provides\n          \"iron-selected\": hass.panelUrl === \"profile\",\n        })}\n        href=\"/profile\"\n        data-panel=\"panel\"\n        tabindex=\"-1\"\n        aria-role=\"option\"\n        aria-label=${hass.localize(\"panel.profile\")}\n        @mouseenter=${this._itemMouseEnter}\n        @mouseleave=${this._itemMouseLeave}\n      >\n        <paper-icon-item>\n          <ha-user-badge slot=\"item-icon\" .user=${hass.user}></ha-user-badge>\n\n          <span class=\"item-text\">\n            ${hass.user ? hass.user.name : \"\"}\n          </span>\n        </paper-icon-item>\n      </a>\n      <div disabled class=\"bottom-spacer\"></div>\n      <div class=\"tooltip\"></div>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (\n      changedProps.has(\"expanded\") ||\n      changedProps.has(\"narrow\") ||\n      changedProps.has(\"alwaysExpand\") ||\n      changedProps.has(\"_externalConfig\") ||\n      changedProps.has(\"_notifications\")\n    ) {\n      return true;\n    }\n    if (!this.hass || !changedProps.has(\"hass\")) {\n      return false;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant;\n    if (!oldHass) {\n      return true;\n    }\n    const hass = this.hass;\n    return (\n      hass.panels !== oldHass.panels ||\n      hass.panelUrl !== oldHass.panelUrl ||\n      hass.user !== oldHass.user ||\n      hass.localize !== oldHass.localize ||\n      hass.states !== oldHass.states ||\n      hass.defaultPanel !== oldHass.defaultPanel\n    );\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    if (this.hass && this.hass.auth.external) {\n      getExternalConfig(this.hass.auth.external).then((conf) => {\n        this._externalConfig = conf;\n      });\n    }\n    subscribeNotifications(this.hass.connection, (notifications) => {\n      this._notifications = notifications;\n    });\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    if (changedProps.has(\"alwaysExpand\")) {\n      this.expanded = this.alwaysExpand;\n    }\n    if (!changedProps.has(\"hass\")) {\n      return;\n    }\n\n    this._rtl = computeRTL(this.hass);\n\n    if (!SUPPORT_SCROLL_IF_NEEDED) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (!oldHass || oldHass.panelUrl !== this.hass.panelUrl) {\n      const selectedEl = this.shadowRoot!.querySelector(\".iron-selected\");\n      if (selectedEl) {\n        // @ts-ignore\n        selectedEl.scrollIntoViewIfNeeded();\n      }\n    }\n  }\n\n  private get _tooltip() {\n    return this.shadowRoot!.querySelector(\".tooltip\")! as HTMLDivElement;\n  }\n\n  private _itemMouseEnter(ev: MouseEvent) {\n    // On keypresses on the listbox, we're going to ignore mouse enter events\n    // for 100ms so that we ignore it when pressing down arrow scrolls the\n    // sidebar causing the mouse to hover a new icon\n    if (\n      this.expanded ||\n      new Date().getTime() < this._recentKeydownActiveUntil\n    ) {\n      return;\n    }\n    if (this._mouseLeaveTimeout) {\n      clearTimeout(this._mouseLeaveTimeout);\n      this._mouseLeaveTimeout = undefined;\n    }\n    this._showTooltip(ev.currentTarget as PaperIconItemElement);\n  }\n\n  private _itemMouseLeave() {\n    if (this._mouseLeaveTimeout) {\n      clearTimeout(this._mouseLeaveTimeout);\n    }\n    this._mouseLeaveTimeout = window.setTimeout(() => {\n      this._hideTooltip();\n    }, 500);\n  }\n\n  private _listboxFocusIn(ev) {\n    if (this.expanded || ev.target.nodeName !== \"A\") {\n      return;\n    }\n    this._showTooltip(ev.target.querySelector(\"paper-icon-item\"));\n  }\n\n  private _listboxFocusOut() {\n    this._hideTooltip();\n  }\n\n  @eventOptions({\n    passive: true,\n  })\n  private _listboxScroll() {\n    // On keypresses on the listbox, we're going to ignore scroll events\n    // for 100ms so that if pressing down arrow scrolls the sidebar, the tooltip\n    // will not be hidden.\n    if (new Date().getTime() < this._recentKeydownActiveUntil) {\n      return;\n    }\n    this._hideTooltip();\n  }\n\n  private _listboxKeydown() {\n    this._recentKeydownActiveUntil = new Date().getTime() + 100;\n  }\n\n  private _showTooltip(item: PaperIconItemElement) {\n    if (this._tooltipHideTimeout) {\n      clearTimeout(this._tooltipHideTimeout);\n      this._tooltipHideTimeout = undefined;\n    }\n    const tooltip = this._tooltip;\n    const listbox = this.shadowRoot!.querySelector(\"paper-listbox\")!;\n    let top = item.offsetTop + 11;\n    if (listbox.contains(item)) {\n      top -= listbox.scrollTop;\n    }\n    tooltip.innerHTML = item.querySelector(\".item-text\")!.innerHTML;\n    tooltip.style.display = \"block\";\n    tooltip.style.top = `${top}px`;\n    tooltip.style.left = `${item.offsetLeft + item.clientWidth + 4}px`;\n  }\n\n  private _hideTooltip() {\n    // Delay it a little in case other events are pending processing.\n    if (!this._tooltipHideTimeout) {\n      this._tooltipHideTimeout = window.setTimeout(() => {\n        this._tooltipHideTimeout = undefined;\n        this._tooltip.style.display = \"none\";\n      }, 10);\n    }\n  }\n\n  private _handleShowNotificationDrawer() {\n    fireEvent(this, \"hass-show-notifications\");\n  }\n\n  private _handleExternalAppConfiguration(ev: Event) {\n    ev.preventDefault();\n    this.hass.auth.external!.fireMessage({\n      type: \"config_screen/show\",\n    });\n  }\n\n  private _toggleSidebar() {\n    fireEvent(this, \"hass-toggle-menu\");\n  }\n\n  private _renderPanel(urlPath, icon, title) {\n    return html`\n      <a\n        aria-role=\"option\"\n        href=\"${`/${urlPath}`}\"\n        data-panel=\"${urlPath}\"\n        tabindex=\"-1\"\n        @mouseenter=${this._itemMouseEnter}\n        @mouseleave=${this._itemMouseLeave}\n      >\n        <paper-icon-item>\n          <ha-icon slot=\"item-icon\" .icon=\"${icon}\"></ha-icon>\n          <span class=\"item-text\">${title}</span>\n        </paper-icon-item>\n      </a>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        height: 100%;\n        display: block;\n        overflow: hidden;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        border-right: 1px solid var(--divider-color);\n        background-color: var(--sidebar-background-color);\n        width: 64px;\n      }\n      :host([expanded]) {\n        width: 256px;\n      }\n\n      .menu {\n        box-sizing: border-box;\n        height: 65px;\n        display: flex;\n        padding: 0 12px;\n        border-bottom: 1px solid transparent;\n        white-space: nowrap;\n        font-weight: 400;\n        color: var(--primary-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        background-color: var(--primary-background-color);\n        font-size: 20px;\n        align-items: center;\n      }\n      :host([expanded]) .menu {\n        width: 256px;\n      }\n\n      .menu paper-icon-button {\n        color: var(--sidebar-icon-color);\n      }\n      :host([expanded]) .menu paper-icon-button {\n        margin-right: 23px;\n      }\n      :host([expanded][_rtl]) .menu paper-icon-button {\n        margin-right: 0px;\n        margin-left: 23px;\n      }\n\n      .title {\n        display: none;\n      }\n      :host([expanded]) .title {\n        display: initial;\n      }\n\n      paper-listbox::-webkit-scrollbar {\n        width: 0.4rem;\n        height: 0.4rem;\n      }\n\n      paper-listbox::-webkit-scrollbar-thumb {\n        -webkit-border-radius: 4px;\n        border-radius: 4px;\n        background: var(--scrollbar-thumb-color);\n      }\n\n      paper-listbox {\n        padding: 4px 0;\n        display: flex;\n        flex-direction: column;\n        box-sizing: border-box;\n        height: calc(100% - 196px);\n        overflow-y: auto;\n        overflow-x: hidden;\n        scrollbar-color: var(--scrollbar-thumb-color) transparent;\n        scrollbar-width: thin;\n        background: none;\n      }\n\n      a {\n        text-decoration: none;\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n        position: relative;\n        display: block;\n        outline: 0;\n      }\n\n      paper-icon-item {\n        box-sizing: border-box;\n        margin: 4px 8px;\n        padding-left: 12px;\n        border-radius: 4px;\n        --paper-item-min-height: 40px;\n        width: 48px;\n      }\n      :host([expanded]) paper-icon-item {\n        width: 240px;\n      }\n      :host([_rtl]) paper-icon-item {\n        padding-left: auto;\n        padding-right: 12px;\n      }\n\n      ha-icon[slot=\"item-icon\"] {\n        color: var(--sidebar-icon-color);\n      }\n\n      .iron-selected paper-icon-item::before,\n      a:not(.iron-selected):focus::before {\n        border-radius: 4px;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: \"\";\n        transition: opacity 15ms linear;\n        will-change: opacity;\n      }\n      .iron-selected paper-icon-item::before {\n        background-color: var(--sidebar-selected-icon-color);\n        opacity: 0.12;\n      }\n      a:not(.iron-selected):focus::before {\n        background-color: currentColor;\n        opacity: var(--dark-divider-opacity);\n        margin: 4px 8px;\n      }\n      .iron-selected paper-icon-item:focus::before,\n      .iron-selected:focus paper-icon-item::before {\n        opacity: 0.2;\n      }\n\n      .iron-selected paper-icon-item[pressed]:before {\n        opacity: 0.37;\n      }\n\n      paper-icon-item span {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n      }\n\n      a.iron-selected paper-icon-item ha-icon {\n        color: var(--sidebar-selected-icon-color);\n      }\n\n      a.iron-selected .item-text {\n        color: var(--sidebar-selected-text-color);\n      }\n\n      paper-icon-item .item-text {\n        display: none;\n        max-width: calc(100% - 56px);\n      }\n      :host([expanded]) paper-icon-item .item-text {\n        display: block;\n      }\n\n      .divider {\n        bottom: 112px;\n        padding: 10px 0;\n      }\n      .divider::before {\n        content: \" \";\n        display: block;\n        height: 1px;\n        background-color: var(--divider-color);\n      }\n      .notifications-container {\n        display: flex;\n      }\n      .notifications {\n        cursor: pointer;\n      }\n      .notifications .item-text {\n        flex: 1;\n      }\n      .profile {\n      }\n      .profile paper-icon-item {\n        padding-left: 4px;\n      }\n      :host([_rtl]) .profile paper-icon-item {\n        padding-left: auto;\n        padding-right: 4px;\n      }\n      .profile .item-text {\n        margin-left: 8px;\n      }\n      :host([_rtl]) .profile .item-text {\n        margin-right: 8px;\n      }\n\n      .notification-badge {\n        min-width: 20px;\n        box-sizing: border-box;\n        border-radius: 50%;\n        font-weight: 400;\n        background-color: var(--accent-color);\n        line-height: 20px;\n        text-align: center;\n        padding: 0px 6px;\n        color: var(--text-primary-color);\n      }\n      ha-icon + .notification-badge {\n        position: absolute;\n        bottom: 14px;\n        left: 26px;\n        font-size: 0.65em;\n      }\n\n      .spacer {\n        flex: 1;\n        pointer-events: none;\n      }\n\n      .subheader {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n        padding: 16px;\n        white-space: nowrap;\n      }\n\n      .dev-tools {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        padding: 0 8px;\n        width: 256px;\n        box-sizing: border-box;\n      }\n\n      .dev-tools a {\n        color: var(--sidebar-icon-color);\n      }\n\n      .tooltip {\n        display: none;\n        position: absolute;\n        opacity: 0.9;\n        border-radius: 2px;\n        white-space: nowrap;\n        color: var(--sidebar-background-color);\n        background-color: var(--sidebar-text-color);\n        padding: 4px;\n        font-weight: 500;\n      }\n\n      :host([_rtl]) .menu paper-icon-button {\n        -webkit-transform: scaleX(-1);\n        transform: scaleX(-1);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-sidebar\": HaSidebar;\n  }\n}\n\ncustomElements.define(\"ha-sidebar\", HaSidebar);\n","import { ExternalMessaging } from \"./external_messaging\";\n\nexport interface ExternalConfig {\n  hasSettingsScreen: boolean;\n}\n\nexport const getExternalConfig = (\n  bus: ExternalMessaging\n): Promise<ExternalConfig> => {\n  if (!bus.cache.cfg) {\n    bus.cache.cfg = bus.sendMessage<ExternalConfig>({\n      type: \"config/get\",\n    });\n  }\n  return bus.cache.cfg;\n};\n"],"sourceRoot":""}