{"version":3,"sources":["webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/lovelace/resources/dialog-lovelace-resource-detail.ts"],"names":["MwcDialog","customElements","get","createCloseHeading","hass","title","html","localize","_decorate","customElement","_initialize","_MwcDialog","F","[object Object]","args","super","this","d","kind","static","key","value","style","css","DialogLovelaceResourceDetail","_LitElement","decorators","property","async","params","_params","_error","undefined","resource","_url","url","_type","type","updateComplete","urlInvalid","trim","_close","_urlChanged","_typeChanged","_deleteResource","_submitting","_updateResource","ev","detail","item","getAttribute","values","res_type","updateResource","createResource","err","message","removeResource","haStyleDialog","LitElement"],"mappings":"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","file":"chunk.b0ceea09b3dcd317cc3a.js","sourcesContent":["import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport {\n  LovelaceResource,\n  LovelaceResourcesMutableParams,\n} from \"../../../../data/lovelace\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceResourceDetailsDialogParams } from \"./show-dialog-lovelace-resource-detail\";\n\n@customElement(\"dialog-lovelace-resource-detail\")\nexport class DialogLovelaceResourceDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _params?: LovelaceResourceDetailsDialogParams;\n\n  @property() private _url!: LovelaceResource[\"url\"];\n\n  @property() private _type!: LovelaceResource[\"type\"];\n\n  @property() private _error?: string;\n\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceResourceDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.resource) {\n      this._url = this._params.resource.url || \"\";\n      this._type = this._params.resource.type || \"module\";\n    } else {\n      this._url = \"\";\n      this._type = \"module\";\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const urlInvalid = this._url.trim() === \"\";\n    return html`\n      <ha-dialog\n        open\n        @closing=${this._close}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.resource\n            ? this._params.resource.url\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.new_resource\"\n              )\n        )}\n      >\n        <div>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            <h3 class=\"warning\">\n              ${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.warning_header\"\n              )}\n            </h3>\n            ${this.hass!.localize(\n              \"ui.panel.config.lovelace.resources.detail.warning_text\"\n            )}\n            <paper-input\n              .value=${this._url}\n              @value-changed=${this._urlChanged}\n              .label=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.url\"\n              )}\n              .errorMessage=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.url_error_msg\"\n              )}\n              .invalid=${urlInvalid}\n              dialogInitialFocus\n            ></paper-input>\n            <br />\n            <ha-paper-dropdown-menu\n              .label=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.type\"\n              )}\n            >\n              <paper-listbox\n                slot=\"dropdown-content\"\n                .selected=${this._type}\n                @iron-select=${this._typeChanged}\n                attr-for-selected=\"type\"\n              >\n                <paper-item type=\"module\">\n                  ${this.hass!.localize(\n                    \"ui.panel.config.lovelace.resources.types.module\"\n                  )}\n                </paper-item>\n                ${this._type === \"js\"\n                  ? html`\n                      <paper-item type=\"js\">\n                        ${this.hass!.localize(\n                          \"ui.panel.config.lovelace.resources.types.js\"\n                        )}\n                      </paper-item>\n                    `\n                  : \"\"}\n                <paper-item type=\"css\">\n                  ${this.hass!.localize(\n                    \"ui.panel.config.lovelace.resources.types.css\"\n                  )}\n                </paper-item>\n                ${this._type === \"html\"\n                  ? html`\n                      <paper-item type=\"html\">\n                        ${this.hass!.localize(\n                          \"ui.panel.config.lovelace.resources.types.html\"\n                        )}\n                      </paper-item>\n                    `\n                  : \"\"}\n              </paper-listbox>\n            </ha-paper-dropdown-menu>\n          </div>\n        </div>\n        ${this._params.resource\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteResource}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.lovelace.resources.detail.delete\"\n                )}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateResource}\"\n          .disabled=${urlInvalid || this._submitting}\n        >\n          ${this._params.resource\n            ? this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.update\"\n              )\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._url = ev.detail.value;\n  }\n\n  private _typeChanged(ev: CustomEvent) {\n    this._type = ev.detail.item.getAttribute(\"type\");\n  }\n\n  private async _updateResource() {\n    this._submitting = true;\n    try {\n      const values: LovelaceResourcesMutableParams = {\n        url: this._url.trim(),\n        res_type: this._type,\n      };\n      if (this._params!.resource) {\n        await this._params!.updateResource(values);\n      } else {\n        await this._params!.createResource(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteResource() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeResource()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .warning {\n          color: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-resource-detail\": DialogLovelaceResourceDetail;\n  }\n}\n"],"sourceRoot":""}