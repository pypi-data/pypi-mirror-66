{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/common/config/is_component_loaded.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-shopping-list-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","isComponentLoaded","hass","component","config","components","indexOf","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_inherits","HuiThemeSelectEditor","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","kind","decorators","property","key","html","_templateObject","label","localize","_changed","Object","keys","themes","sort","map","theme","_templateObject2","static","css","_templateObject3","ev","target","selected","fireEvent","LitElement","cardConfigStruct","type","title","HuiShoppingListEditor","_config","_title","_valueChanged","_theme","configValue","assign","_templateObject4"],"mappings":"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","file":"chunk.27d3d7f7da993a4052f0.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport const isComponentLoaded = (\n  hass: HomeAssistant,\n  component: string\n): boolean => hass && hass.config.components.indexOf(component) !== -1;\n","import \"@material/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n        `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`}\n        dynamic-align\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this.value}\n          attr-for-selected=\"theme\"\n          @iron-select=${this._changed}\n        >\n          <paper-item theme=\"remove\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.generic.no_theme\"\n            )}</paper-item\n          >\n          ${Object.keys(this.hass!.themes.themes)\n            .sort()\n            .map((theme) => {\n              return html` <paper-item theme=${theme}>${theme}</paper-item> `;\n            })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.selected === \"\") {\n      return;\n    }\n    this.value = ev.target.selected === \"remove\" ? \"\" : ev.target.selected;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { ShoppingListCardConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport \"../../components/hui-theme-select-editor\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { EditorTarget, EntitiesEditorEvent } from \"../types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-shopping-list-card-editor\")\nexport class HuiShoppingListEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ShoppingListCardConfig;\n\n  public setConfig(config: ShoppingListCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        ${!isComponentLoaded(this.hass, \"shopping_list\")\n          ? html`\n              <div class=\"error\">\n                ${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.shopping-list.integration_not_loaded\"\n                )}\n              </div>\n            `\n          : \"\"}\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error {\n        color: var(--google-red-500);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-shopping-list-card-editor\": HuiShoppingListEditor;\n  }\n}\n"],"sourceRoot":""}