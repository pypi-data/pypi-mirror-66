{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-stack-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","cardConfigStruct","type","cards","title","HuiStackCardEditor","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","kind","decorators","property","key","query","config","_config","hass","html","_templateObject","selected","_selectedCard","numcards","_templateObject2","_handleSelectedCard","map","_card","i","_templateObject3","undefined","_templateObject4","_toggleMode","_guiModeAvailable","localize","_cardEditorEl","_GUImode","_handleMove","_handleDeleteCard","lovelace","_handleConfigChanged","_handleGUIModeChanged","_templateObject5","_handleCardPicked","ev","target","id","_setMode","parseInt","detail","stopPropagation","guiModeAvailable","fireEvent","push","splice","Math","max","source","card","guiMode","_this$_cardEditorEl","toggleMode","GUImode","static","css","_templateObject6","LitElement"],"mappings":"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","file":"chunk.4a0c377c36b7d39846b2.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import \"@polymer/paper-tabs\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent, HASSDomEvent } from \"../../../../common/dom/fire_event\";\nimport { LovelaceConfig } from \"../../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { StackCardConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport {\n  ConfigChangedEvent,\n  HuiCardEditor,\n} from \"../card-editor/hui-card-editor\";\nimport { GUIModeChangedEvent } from \"../types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  cards: [\"any\"],\n  title: \"string?\",\n});\n\n@customElement(\"hui-stack-card-editor\")\nexport class HuiStackCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() public lovelace?: LovelaceConfig;\n\n  @property() private _config?: StackCardConfig;\n\n  @property() private _selectedCard = 0;\n\n  @property() private _GUImode = true;\n\n  @property() private _guiModeAvailable? = true;\n\n  @query(\"hui-card-editor\") private _cardEditorEl?: HuiCardEditor;\n\n  public setConfig(config: StackCardConfig): void {\n    this._config = cardConfigStruct(config);\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n    const selected = this._selectedCard!;\n    const numcards = this._config.cards.length;\n\n    return html`\n      <div class=\"card-config\">\n        <div class=\"toolbar\">\n          <paper-tabs\n            .selected=${selected}\n            scrollable\n            @iron-activate=${this._handleSelectedCard}\n          >\n            ${this._config.cards.map((_card, i) => {\n              return html`\n                <paper-tab>\n                  ${i + 1}\n                </paper-tab>\n              `;\n            })}\n          </paper-tabs>\n          <paper-tabs\n            id=\"add-card\"\n            .selected=${selected === numcards ? \"0\" : undefined}\n            @iron-activate=${this._handleSelectedCard}\n          >\n            <paper-tab>\n              <ha-icon icon=\"hass:plus\"></ha-icon>\n            </paper-tab>\n          <paper-tabs>\n        </div>\n\n        <div id=\"editor\">\n          ${\n            selected < numcards\n              ? html`\n                  <div id=\"card-options\">\n                    <mwc-button\n                      @click=${this._toggleMode}\n                      .disabled=${!this._guiModeAvailable}\n                      class=\"gui-mode-button\"\n                    >\n                      ${this.hass!.localize(\n                        !this._cardEditorEl || this._GUImode\n                          ? \"ui.panel.lovelace.editor.edit_card.show_code_editor\"\n                          : \"ui.panel.lovelace.editor.edit_card.show_visual_editor\"\n                      )}\n                    </mwc-button>\n                    <paper-icon-button\n                      id=\"move-before\"\n                      title=\"Move card before\"\n                      icon=\"hass:arrow-left\"\n                      .disabled=${selected === 0}\n                      @click=${this._handleMove}\n                    ></paper-icon-button>\n\n                    <paper-icon-button\n                      id=\"move-after\"\n                      title=\"Move card after\"\n                      icon=\"hass:arrow-right\"\n                      .disabled=${selected === numcards - 1}\n                      @click=${this._handleMove}\n                    ></paper-icon-button>\n\n                    <paper-icon-button\n                      icon=\"hass:delete\"\n                      @click=${this._handleDeleteCard}\n                    ></paper-icon-button>\n                  </div>\n\n                  <hui-card-editor\n                    .hass=${this.hass}\n                    .value=${this._config.cards[selected]}\n                    .lovelace=${this.lovelace}\n                    @config-changed=${this._handleConfigChanged}\n                    @GUImode-changed=${this._handleGUIModeChanged}\n                  ></hui-card-editor>\n                `\n              : html`\n                  <hui-card-picker\n                    .hass=${this.hass}\n                    .lovelace=${this.lovelace}\n                    @config-changed=\"${this._handleCardPicked}\"\n                  ></hui-card-picker>\n                `\n          }\n        </div>\n      </div>\n    `;\n  }\n\n  private _handleSelectedCard(ev) {\n    if (ev.target.id === \"add-card\") {\n      this._selectedCard = this._config!.cards.length;\n      return;\n    }\n    this._setMode(true);\n    this._guiModeAvailable = true;\n    this._selectedCard = parseInt(ev.detail.selected, 10);\n  }\n\n  private _handleConfigChanged(ev: HASSDomEvent<ConfigChangedEvent>) {\n    ev.stopPropagation();\n    if (!this._config) {\n      return;\n    }\n    this._config.cards[this._selectedCard] = ev.detail.config;\n    this._guiModeAvailable = ev.detail.guiModeAvailable;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleCardPicked(ev) {\n    ev.stopPropagation();\n    if (!this._config) {\n      return;\n    }\n    const config = ev.detail.config;\n    this._config.cards.push(config);\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleDeleteCard() {\n    if (!this._config) {\n      return;\n    }\n    this._config.cards.splice(this._selectedCard, 1);\n    this._selectedCard = Math.max(0, this._selectedCard - 1);\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleMove(ev) {\n    if (!this._config) {\n      return;\n    }\n    const source = this._selectedCard;\n    const target = ev.target.id === \"move-before\" ? source - 1 : source + 1;\n    const card = this._config.cards.splice(this._selectedCard, 1)[0];\n    this._config.cards.splice(target, 0, card);\n    this._selectedCard = target;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleGUIModeChanged(ev: HASSDomEvent<GUIModeChangedEvent>): void {\n    ev.stopPropagation();\n    this._GUImode = ev.detail.guiMode;\n    this._guiModeAvailable = ev.detail.guiModeAvailable;\n  }\n\n  private _toggleMode(): void {\n    this._cardEditorEl?.toggleMode();\n  }\n\n  private _setMode(value: boolean): void {\n    this._GUImode = value;\n    if (this._cardEditorEl) {\n      this._cardEditorEl!.GUImode = value;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .toolbar {\n        display: flex;\n        --paper-tabs-selection-bar-color: var(--primary-color);\n        --paper-tab-ink: var(--primary-color);\n      }\n      paper-tabs {\n        display: flex;\n        font-size: 14px;\n        flex-grow: 1;\n      }\n      #add-card {\n        max-width: 32px;\n        padding: 0;\n      }\n\n      #card-options {\n        display: flex;\n        justify-content: flex-end;\n        width: 100%;\n      }\n\n      #editor {\n        border: 1px solid var(--divider-color);\n        padding: 12px;\n      }\n      @media (max-width: 450px) {\n        #editor {\n          margin: 0 -12px;\n        }\n      }\n\n      .gui-mode-button {\n        margin-right: auto;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-stack-card-editor\": HuiStackCardEditor;\n  }\n}\n"],"sourceRoot":""}