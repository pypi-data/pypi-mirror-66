{"version":3,"sources":["webpack:///./src/data/graph.ts","webpack:///./src/panels/lovelace/common/graph/get-path.ts","webpack:///./src/panels/lovelace/components/hui-graph-base.ts","webpack:///./src/panels/lovelace/common/graph/coordinates.ts","webpack:///./src/panels/lovelace/header-footer/hui-graph-header-footer.ts"],"names":["midPoint","_Ax","_Ay","_Bx","_By","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","d","kind","decorators","property","key","value","html","_path","svg","changedProps","coordinates","has","coords","length","next","Z","path","last","filter","Boolean","coord","getPath","static","css","LitElement","average","items","reduce","sum","entry","parseFloat","state","lastValue","history","hours","width","detail","forEach","item","Number","isNaN","min","Math","map","max","now","Date","getTime","res","point","age","last_changed","abs","floor","round","toString","push","yRatio","xRatio","isFinite","first","getCoords","i","offset","depth","subItem","index","x","y","height","calcPoints","HuiGraphHeaderFooter","hui_graph_header_footer_decorate","config","entity","split","Error","cardConfig","Object","assign","hours_to_show","_config","hass","_coordinates","hasConfigOrEntityChanged","_fetching","oldConfig","get","_stateHistory","_getCoordinates","_date","async","_this$_stateHistory","endTime","startTime","setHours","getHours","stateHistory","fetchRecent"],"mappings":"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","file":"chunk.e03dbce04c36f67a7a46.js","sourcesContent":["export const strokeWidth = 5;\n","const midPoint = (\n  _Ax: number,\n  _Ay: number,\n  _Bx: number,\n  _By: number\n): number[] => {\n  const _Zx = (_Ax - _Bx) / 2 + _Bx;\n  const _Zy = (_Ay - _By) / 2 + _By;\n  return [_Zx, _Zy];\n};\n\nexport const getPath = (coords: number[][]): string => {\n  if (!coords.length) {\n    return \"\";\n  }\n\n  let next: number[];\n  let Z: number[];\n  const X = 0;\n  const Y = 1;\n  let path = \"\";\n  let last = coords.filter(Boolean)[0];\n\n  path += `M ${last[X]},${last[Y]}`;\n\n  for (const coord of coords) {\n    next = coord;\n    Z = midPoint(last[X], last[Y], next[X], next[Y]);\n    path += ` ${Z[X]},${Z[Y]}`;\n    path += ` Q${next[X]},${next[Y]}`;\n    last = next;\n  }\n\n  path += ` ${next![X]},${next![Y]}`;\n  return path;\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  svg,\n  TemplateResult,\n} from \"lit-element\";\nimport { strokeWidth } from \"../../../data/graph\";\nimport { getPath } from \"../common/graph/get-path\";\n\n@customElement(\"hui-graph-base\")\nexport class HuiGraphBase extends LitElement {\n  @property() public coordinates?: any;\n\n  @property() private _path?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this._path\n        ? svg`<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 100\">\n          <g>\n            <mask id=\"fill\">\n              <path\n                class='fill'\n                fill='white'\n                d=\"${this._path} L 500, 100 L 0, 100 z\"\n              />\n            </mask>\n            <rect height=\"100%\" width=\"100%\" id=\"fill-rect\" fill=\"var(--accent-color)\" mask=\"url(#fill)\"></rect>\n            <mask id=\"line\">\n              <path\n                fill=\"none\"\n                stroke=\"var(--accent-color)\"\n                stroke-width=\"${strokeWidth}\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                d=${this._path}\n              ></path>\n            </mask>\n            <rect height=\"100%\" width=\"100%\" id=\"rect\" fill=\"var(--accent-color)\" mask=\"url(#line)\"></rect>\n          </g>\n        </svg>`\n        : svg`<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 100\"></svg>`}\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!this.coordinates) {\n      return;\n    }\n\n    if (changedProps.has(\"coordinates\")) {\n      this._path = getPath(this.coordinates);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: flex;\n        width: 100%;\n      }\n      .fill {\n        opacity: 0.1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-graph-base\": HuiGraphBase;\n  }\n}\n","import { strokeWidth } from \"../../../../data/graph\";\n\nconst average = (items: any[]): number => {\n  return (\n    items.reduce((sum, entry) => sum + parseFloat(entry.state), 0) /\n    items.length\n  );\n};\n\nconst lastValue = (items: any[]): number => {\n  return parseFloat(items[items.length - 1].state) || 0;\n};\n\nconst calcPoints = (\n  history: any,\n  hours: number,\n  width: number,\n  detail: number,\n  min: number,\n  max: number\n): number[][] => {\n  const coords = [] as number[][];\n  const height = 80;\n  let yRatio = (max - min) / height;\n  yRatio = yRatio !== 0 ? yRatio : height;\n  let xRatio = width / (hours - (detail === 1 ? 1 : 0));\n  xRatio = isFinite(xRatio) ? xRatio : width;\n\n  const first = history.filter(Boolean)[0];\n  let last = [average(first), lastValue(first)];\n\n  const getCoords = (item: any[], i: number, offset = 0, depth = 1) => {\n    if (depth > 1 && item) {\n      return item.forEach((subItem, index) =>\n        getCoords(subItem, i, index, depth - 1)\n      );\n    }\n\n    const x = xRatio * (i + offset / 6);\n\n    if (item) {\n      last = [average(item), lastValue(item)];\n    }\n    const y =\n      height + strokeWidth / 2 - ((item ? last[0] : last[1]) - min) / yRatio;\n    return coords.push([x, y]);\n  };\n\n  for (let i = 0; i < history.length; i += 1) {\n    getCoords(history[i], i, 0, detail);\n  }\n\n  if (coords.length === 1) {\n    coords[1] = [width, coords[0][1]];\n  }\n\n  coords.push([width, coords[coords.length - 1][1]]);\n  return coords;\n};\n\nexport const coordinates = (\n  history: any,\n  hours: number,\n  width: number,\n  detail: number\n): number[][] | undefined => {\n  history.forEach((item) => {\n    item.state = Number(item.state);\n  });\n  history = history.filter((item) => !Number.isNaN(item.state));\n\n  const min = Math.min(...history.map((item) => item.state));\n  const max = Math.max(...history.map((item) => item.state));\n  const now = new Date().getTime();\n\n  const reduce = (res, item, point) => {\n    const age = now - new Date(item.last_changed).getTime();\n\n    let key = Math.abs(age / (1000 * 3600) - hours);\n    if (point) {\n      key = (key - Math.floor(key)) * 60;\n      key = Number((Math.round(key / 10) * 10).toString()[0]);\n    } else {\n      key = Math.floor(key);\n    }\n    if (!res[key]) {\n      res[key] = [];\n    }\n    res[key].push(item);\n    return res;\n  };\n\n  history = history.reduce((res, item) => reduce(res, item, false), []);\n  if (detail > 1) {\n    history = history.map((entry) =>\n      entry.reduce((res, item) => reduce(res, item, true), [])\n    );\n  }\n\n  if (!history.length) {\n    return undefined;\n  }\n\n  return calcPoints(history, hours, width, detail, min, max);\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../components/hui-graph-base\";\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { GraphHeaderFooterConfig } from \"./types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport { fetchRecent } from \"../../../data/history\";\nimport { coordinates } from \"../common/graph/coordinates\";\n\nconst MINUTE = 60000;\nconst DAY = 86400000;\n\n@customElement(\"hui-graph-header-footer\")\nexport class HuiGraphHeaderFooter extends LitElement\n  implements LovelaceHeaderFooter {\n  public static getStubConfig(): object {\n    return {};\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() protected _config?: GraphHeaderFooterConfig;\n\n  @property() private _coordinates?: number[][];\n\n  private _date?: Date;\n\n  private _stateHistory?: HassEntity[];\n\n  private _fetching = false;\n\n  public setConfig(config: GraphHeaderFooterConfig): void {\n    if (!config?.entity || config.entity.split(\".\")[0] !== \"sensor\") {\n      throw new Error(\n        \"Invalid Configuration: An entity from within the sensor domain required\"\n      );\n    }\n\n    const cardConfig = {\n      detail: 1,\n      hours_to_show: 24,\n      ...config,\n    };\n\n    cardConfig.hours_to_show = Number(cardConfig.hours_to_show);\n    cardConfig.detail =\n      cardConfig.detail === 1 || cardConfig.detail === 2\n        ? cardConfig.detail\n        : 1;\n\n    this._config = cardConfig;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    if (!this._coordinates) {\n      return html`\n        <div class=\"container\">\n          <paper-spinner active></paper-spinner>\n        </div>\n      `;\n    }\n\n    if (this._coordinates.length < 1) {\n      return html`\n        <div class=\"container\">\n          <div class=\"info\">\n            No state history found.\n          </div>\n        </div>\n      `;\n    }\n\n    return html`\n      <hui-graph-base .coordinates=${this._coordinates}></hui-graph-base>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (\n      !this._config ||\n      !this.hass ||\n      (this._fetching && !changedProps.has(\"_config\"))\n    ) {\n      return;\n    }\n\n    if (changedProps.has(\"_config\")) {\n      const oldConfig = changedProps.get(\"_config\") as GraphHeaderFooterConfig;\n      if (!oldConfig || oldConfig.entity !== this._config.entity) {\n        this._stateHistory = [];\n      }\n\n      this._getCoordinates();\n    } else if (Date.now() - this._date!.getTime() >= MINUTE) {\n      this._getCoordinates();\n    }\n  }\n\n  private async _getCoordinates(): Promise<void> {\n    this._fetching = true;\n    const endTime = new Date();\n    const startTime =\n      !this._date || !this._stateHistory?.length\n        ? new Date(\n            new Date().setHours(\n              endTime.getHours() - this._config!.hours_to_show!\n            )\n          )\n        : this._date;\n\n    if (this._stateHistory!.length) {\n      this._stateHistory = this._stateHistory!.filter(\n        (entity) =>\n          endTime.getTime() - new Date(entity.last_changed).getTime() <= DAY\n      );\n    }\n\n    const stateHistory = await fetchRecent(\n      this.hass!,\n      this._config!.entity,\n      startTime,\n      endTime,\n      Boolean(this._stateHistory!.length)\n    );\n\n    if (stateHistory.length && stateHistory[0].length) {\n      this._stateHistory!.push(...stateHistory[0]);\n    }\n\n    this._coordinates = coordinates(\n      this._stateHistory,\n      this._config!.hours_to_show!,\n      500,\n      this._config!.detail!\n    );\n\n    this._date = endTime;\n    this._fetching = false;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-spinner {\n        position: absolute;\n        top: calc(50% - 28px);\n      }\n      .container {\n        display: flex;\n        justify-content: center;\n        position: relative;\n        padding-bottom: 20%;\n      }\n      .info {\n        position: absolute;\n        top: calc(50% - 16px);\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-graph-header-footer\": HuiGraphHeaderFooter;\n  }\n}\n"],"sourceRoot":""}