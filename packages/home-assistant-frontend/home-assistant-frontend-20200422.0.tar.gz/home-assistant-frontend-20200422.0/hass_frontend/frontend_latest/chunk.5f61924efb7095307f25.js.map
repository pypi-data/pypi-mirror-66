{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-weather-forecast-card-editor.ts"],"names":["HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","Array","memoizeOne","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","stateObj","entity_id","value","attributes","device_class","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_clearValue","length","ev","stopPropagation","_setValue","detail","newValue","setTimeout","fireEvent","css","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","icon","configElementStyle","_decorate","customElement","F","kind","decorators","_changed","themes","theme","static","target","selected","cardConfigStruct","entity","name","show_forecast","HuiWeatherForecastCardEditor","config","_config","_entity","_name","_theme","configValue","assign","checked"],"mappings":"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","file":"chunk.5f61924efb7095307f25.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { HomeAssistant } from \"../../types\";\nimport \"./state-badge\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public disabled?: boolean;\n\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n\n  @property() public hass?: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n\n  @property({ type: Boolean }) private _opened?: boolean;\n\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter,\n      this.includeDeviceClasses\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 0px 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@material/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n        `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`}\n        dynamic-align\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this.value}\n          attr-for-selected=\"theme\"\n          @iron-select=${this._changed}\n        >\n          <paper-item theme=\"remove\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.generic.no_theme\"\n            )}</paper-item\n          >\n          ${Object.keys(this.hass!.themes.themes)\n            .sort()\n            .map((theme) => {\n              return html` <paper-item theme=${theme}>${theme}</paper-item> `;\n            })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.selected === \"\") {\n      return;\n    }\n    this.value = ev.target.selected === \"remove\" ? \"\" : ev.target.selected;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-switch\";\n\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { WeatherForecastCardConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport \"../../components/hui-theme-select-editor\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  theme: \"string?\",\n  show_forecast: \"boolean?\",\n});\n\n@customElement(\"hui-weather-forecast-card-editor\")\nexport class HuiWeatherForecastCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: WeatherForecastCardConfig;\n\n  public setConfig(config: WeatherForecastCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  get _show_forecast(): boolean {\n    return this._config!.show_forecast || true;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=${this.hass}\n          .value=${this._entity}\n          .configValue=${\"entity\"}\n          .includeDomains=${[\"weather\"]}\n          @change=${this._valueChanged}\n          allow-custom-entity\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.name\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=${this._name}\n            .configValue=${\"name\"}\n            @value-changed=${this._valueChanged}\n          ></paper-input>\n          <hui-theme-select-editor\n            .hass=${this.hass}\n            .value=${this._theme}\n            .configValue=${\"theme\"}\n            @value-changed=${this._valueChanged}\n          ></hui-theme-select-editor>\n        </div>\n        <ha-switch\n          .checked=${this._config!.show_forecast !== false}\n          .configValue=${\"show_forecast\"}\n          @change=${this._valueChanged}\n          >Show forecast</ha-switch\n        >\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]:\n            target.checked !== undefined ? target.checked : target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-weather-forecast-card-editor\": HuiWeatherForecastCardEditor;\n  }\n}\n"],"sourceRoot":""}