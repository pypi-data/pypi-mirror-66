Metadata-Version: 1.1
Name: hlso
Version: 0.4.4
Summary: Classify C. Liberibacter solanacearum haplotypes
Home-page: https://github.com/holtgrewe/hlso
Author: Manuel Holtgrewe
Author-email: manuel.holtgrewe@bihealth.de
License: MIT license
Description: .. image:: https://readthedocs.org/projects/haplotype-lso/badge/?version=latest
            :target: https://haplotype-lso.readthedocs.io/en/latest/?badge=latest
            :alt: Documentation Status
        
        =============
        Haplotype-LSO
        =============
        
        Haplotype assignment of *Candidatus Liberibacter solanacearum* following IPPC (International Plant Protection Convention) standard `DP 21: Candidatus Liberibacter solanacearum <https://www.ippc.int/en/publications/84157>`_.
        
        - `Official Web App <https://haplotype-lso.bihealth.org>`_
        - `Tutorial <https://haplotype-lso.readthedocs.io/en/latest/?badge=latest>`_
        
        -----------
        Quick Facts
        -----------
        
        - License: MIT
        - Programming Language Python
        
        ------------------------------
        Input / Output - What it Does!
        ------------------------------
        
        This program takes as the input Sanger sequences from the 16S, 16S-23S, and 50S primers from the IPPC standard DP21.
        It then aligns them to the GenBank reference sequences ``EU812559`` and ``EU834131`` (as specified in DP21).
        Based on the alignments and the document DP21, sequence identity is computed and haplotyping is performed, yielding:
        
        - sequence identity to ``EU822559`` for identifying the species *C. Liberibacter solanacearum*, and
        - haplotyping of the read based on variation from the reference sequence.
        
        Sample names can be inferred from the read names or from a separate mapping TSV file.
        
        -----------
        Quick Start
        -----------
        
        This is gonna be really quick!
        
        Installation
        ============
        
        We recommend using `Bioconda <https://bioconda.github.io>`_.
        
        First `install Bioconda <https://bioconda.github.io/user/install.html#getting-started>`_.
        Then (``clsify`` is the old package name of Haplotype-Lso and it will be renamed soon):
        
        .. code-block:: bash
        
            # conda install -y clsify
        
        And -- tadaa -- you're ready to go!
        
        Running
        =======
        
        You can have one FASTA (or FASTQ) file with all of your reads or one file for each.
        If you have a single sequence per FASTA (or FASTQ) file then you can use the file name instead of the sequence name.
        
        .. code-block:: bash
        
            # hlso -o result.tsv INPUT.fasta
            ## OR
            # hlso [--use-file-name] -o result.tsv INPUT1.fasta INPUT2.fasta [...]
            ## e.g.,
            # hlso [--use-file-name] -o result.tsv INPUT*.fasta
        
        ---------------
        Developer Guide
        ---------------
        
        Releasing Packages
        ==================
        
        For the `PyPi package <https://pypi.org/project/hlso/>`_:
        
        .. code-block:: shell
        
            $ python setup.py sdist
            $ twine upload --repository-url https://test.pypi.org/legacy/ dist/hlso-*.tar.gz
            $ twine upload dist/hlso-*.tar.gz
        
        For the Bioconda package, see `the great documentation <http://bioconda.github.io/updating.html>`_.
        The Docker image will automatically be created as a BioContainer when the Bioconda package is built.
        
        
        =======
        History
        =======
        
        
        ------
        v0.4.4
        ------
        
        - Fix file conversion problem.
        
        ------
        v0.4.3
        ------
        
        - Fixing issue with AB1/SCF support.
        
        ------
        v0.4.2
        ------
        
        - Fix for multi-region sequences.
        - Fixing collision, variant must be identified by sequence, position, and reference.
        
        ------
        v0.4.1
        ------
        
        - Fixing bug with display of BLAST match.
        - Adding link-out to NCBI WWWBLAST submission.
        - Removing some cruft from repository.
        - Fixing bug in phylogenetic coputation in case of BLAST all-to-all matches not a square number.
        
        ------
        v0.4.0
        ------
        
        - Compute region-wise phylogenetic tree.
        
        ------
        v0.3.4
        ------
        
        - Support for uploading to PyPi.
        
        ------
        v0.3.3
        ------
        
        - Fixing regular expression.
        
        ------
        v0.3.2
        ------
        
        - Changing file name pattern do dot-separated scheme.
        - Greatly extending documentation.
        
        ------
        v0.3.1
        ------
        
        - Starting out with tutorial and manual.
        
        ------
        v0.3.0
        ------
        
        - Adding tutorial.
        - Rebranding as "Haplotype-LSO" (``hlso``).
        - Properly normalizing indels according to Tan et al. (2015).
        - Adding support for haplotyping with indels.
        
        ------
        v0.2.0
        ------
        
        - Removing dependency on bcftools.
          Haplotyping is done from BLAST match now.
        - Adding tests for ``blast`` module.
        - Rewrite of the whole BLAST and haplotyping interface and architecture.
        
        ------
        v0.1.1
        ------
        
        - Zapping gremlins in haplotype table.
        - Change formatting of README.
        
        ------
        v0.1.0
        ------
        
        Initial release.
        
        - Everything is new!
        
Keywords: hlso
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
