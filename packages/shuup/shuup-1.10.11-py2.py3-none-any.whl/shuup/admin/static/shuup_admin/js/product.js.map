{"version":3,"sources":["../base/js/dropzone.js","edit_media.js"],"names":["activateDropzone","$dropzone","attrs","length","selector","attr","$data","$","data","uploadPath","upload_path","addRemoveLinks","add_remove_links","uploadUrl","upload_url","window","ShuupAdminConfig","browserUrls","media","browsable","extraAttrs","Object","keys","filter","startsWith","forEach","attrKey","replace","params","assign","url","csrfmiddlewaretoken","csrf","dictRemoveFile","gettext","autoProcessQueue","uploadMultiple","parallelUploads","maxFiles","dictDefaultMessage","clickable","accept","file","done","kind","type","indexOf","dropzone","Dropzone","on","onAddedFile","files","removeFile","onSuccess","find","val","xhr","JSON","parse","responseText","id","onQueueComplete","noop","BrowseAPI","openBrowseWindow","disabledMenus","onSelect","obj","name","text","remove","emit","thumbnail","fileInput","document","createElement","body","appendChild","prop","css","evt","target","addFile","trigger","push","console","error","activateDropzones","each","idx","object","includes","module","exports","onDropzoneSuccess","$section","addMediaPanel","section","maxPanelId","map","v","el","toArray","value","panelCount","Math","max","$source","html","$html","targetId","$contents","$name","append","prepend","insertBefore","e","preventDefault","confirm","parents","fadeOut","next","$panel","current","split","$imagePanels","removeClass","addClass","replaceWith","i","field","targetPath","queueComplete","zoneData","fieldId","onDropzoneQueueComplete","location","pathname","productId","product_id","$fileInputs","fileIds","fileId","parseInt","isNaN","ajax","add_media","method","file_ids","traditional","success","added","addedMedia","filePanel","product_media","Messages","enqueue","tags","message","alert"],"mappings":"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","file":"product.js","sourceRoot":"../../../static_src/product","sourcesContent":["/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2020, Shoop Commerce Ltd. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction activateDropzone($dropzone, attrs={}) {\n    if(!$dropzone.length) {\n        console.error(\"[dropzone.js] Unable to find requested element \", $dropzone);\n        return;\n    }\n\n    const selector = \"#\" + $dropzone.attr(\"id\");\n    const $data = $(selector).data();\n    const uploadPath = attrs.uploadPath || $data.upload_path;\n    const addRemoveLinks = $data.add_remove_links;\n    const uploadUrl = $data.upload_url || window.ShuupAdminConfig.browserUrls.media;\n    const browsable = (window.ShuupAdminConfig.browserUrls[\"media\"] && $data.browsable && $data.browsable !== \"False\");\n\n    // Load attributes encoded in attributes with `data-dz-` prefixes\n    // e.g.: data-dz-maxFilesize=\"10000\"\n    const extraAttrs = {};\n    Object.keys($data).filter(attr => attr.startsWith(\"dz_\")).forEach((attr) => {\n        const attrKey = attr.replace(\"dz_\", \"\");\n        extraAttrs[attrKey] = $data[attr];\n    });\n\n    const params = Object.assign({\n        url: uploadUrl + \"?action=upload&path=\" + uploadPath,\n        uploadUrl,\n        params: {\n            csrfmiddlewaretoken: window.ShuupAdminConfig.csrf\n        },\n        addRemoveLinks: (addRemoveLinks === \"True\"),\n        dictRemoveFile: gettext(\"Clear\"),\n        autoProcessQueue: true,\n        uploadMultiple: false,\n        parallelUploads: 1,\n        maxFiles: 1,\n        dictDefaultMessage: gettext(\"Drop files here or click to browse.\"),\n        clickable: false,\n        accept: function(file, done) {\n            if ($data.kind === \"images\" && file.type.indexOf(\"image\") < 0) {\n                done(gettext(\"only images can be uploaded!\"));\n            } else {\n                done();\n            }\n        }\n    }, extraAttrs, attrs);\n    const dropzone = new Dropzone(selector, params);\n\n    dropzone.on(\"addedfile\", attrs.onAddedFile || function(file) {\n        if(params.maxFiles === 1 && dropzone.files.length > 1) {\n            dropzone.removeFile(dropzone.files[0]);\n        }\n    });\n\n    dropzone.on(\"removedfile\", attrs.onSuccess || function(data){\n        $(selector).find(\"input\").val(\"\");\n    });\n\n    dropzone.on(\"success\", attrs.onSuccess || function(data){\n        // file selected through dnd\n        if(data.xhr) {\n            data = JSON.parse(data.xhr.responseText).file;\n        }\n        $(selector).find(\"input\").val(data.id);\n    });\n\n    dropzone.on(\"queuecomplete\", attrs.onQueueComplete || $.noop);\n\n    $(selector).on(\"click\", function() {\n        if (browsable) {\n            window.BrowseAPI.openBrowseWindow({\n                kind: \"media\",\n                disabledMenus: [\"delete\", \"rename\"],\n                filter: $(selector).data().kind,\n                onSelect: (obj) => {\n                    obj.name = obj.text;\n                    $(selector).find(\"input\").val(obj.id);\n                    $(selector).find(\".dz-preview\").remove();\n                    dropzone.emit(\"addedfile\", obj);\n                    if(obj.thumbnail) {\n                        dropzone.emit(\"thumbnail\", obj, obj.thumbnail);\n                    }\n                    dropzone.emit(\"success\", obj);\n                    dropzone.emit(\"complete\", obj);\n                }\n            });\n        } else {\n            const fileInput = document.createElement(\"input\");\n            document.body.appendChild(fileInput);\n            $(fileInput).prop(\"type\", \"file\").css(\"display\", \"none\").on(\"change\", (evt) => {\n                const file = evt.target.files[0];\n                dropzone.addFile(file);\n                fileInput.remove();\n            }).trigger(\"click\");\n        }\n    });\n\n    const data = $(selector).data();\n    if(data.url) {\n        dropzone.files.push(data);\n        dropzone.emit(\"addedfile\", data);\n        if(data.thumbnail){\n            dropzone.emit(\"thumbnail\", data, data.thumbnail);\n        }\n        dropzone.emit(\"complete\", data);\n    }\n}\n\nwindow.activateDropzones = function() {\n    $(\"div[data-dropzone='true']\").each(function(idx, object) {\n        const dropzone = $(object);\n        if(!dropzone.attr(\"id\").includes(\"__prefix__\") && dropzone.find(\".dz-message\").length === 0) {\n            activateDropzone(dropzone);\n        }\n    });\n};\nwindow.activateDropzone = activateDropzone;\n\n$(function(){\n    window.activateDropzones();\n});\n\nmodule.exports = { activateDropzone }\n","/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2020, Shoop Commerce Ltd. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { activateDropzone } from '../base/js/dropzone';\n\n$(function() {\n    $(\".product-media-delete\").on(\"click\", function(e) {\n        e.preventDefault();\n        if (confirm(gettext(\"Are you sure you want to delete this media?\")))\n        {\n            $(this).parents(\".panel\").fadeOut();\n            $(this).next(\".d-none\").find(\"input\").prop(\"checked\", true);\n        }\n    });\n\n    $(document).on(\"click\", \".set-as-primary\", function(e) {\n        e.preventDefault();\n        const $panel = $(this).parents(\".panel\");\n        const prefix = $panel.data(\"prefix\");\n\n        const [, current] = prefix.split(\"-\");\n\n        const $imagePanels = $(\"#product-images-section .panel\");\n\n        $imagePanels.removeClass(\"panel-selected\").addClass(\"panel-default\");\n\n        $(\".is-primary-image\").replaceWith(function() {\n            return $(\"<a>\", {\"class\": \"set-as-primary btn btn-sm btn-inverse\", \"href\": \"#\"}).text(gettext(\"Set as primary image\"));\n        });\n\n        $imagePanels.each(function(i) {\n            $(\"#id_images-\" + i + \"-is_primary\").prop(\"checked\", false);\n        });\n\n        $(this).replaceWith(function() {\n            return $(\"<span>\", {\"class\": \"is-primary-image\"}).text(gettext(\"Primary image\"));\n        });\n\n        $panel.addClass(\"panel-selected\");\n        $(\"#id_images-\" + current + \"-is_primary\").prop(\"checked\", true);\n    });\n\n    function addMediaPanel($section, file) {\n        const section = $section.attr(\"id\");\n        const maxPanelId = $(\"#\" + section + \" .panel\")\n            .map((v, el) => $(el).data(\"idx\")).toArray()\n            .filter(value => value !== \"__prefix_name__\");\n        const panelCount = maxPanelId.length ? Math.max(...maxPanelId) : 0;\n        const $source = $(\"#\" + section + \"-placeholder-panel\");\n\n        let html = $source.html().replace(/__prefix__/g, panelCount).replace(/__prefix_name__/g, panelCount + 1);\n        if (file) {\n            html = html.replace(/__file_id__/g, file.id);\n        }\n        const $html = $(html);\n\n        let targetId = \"id_images\";\n        if (section.indexOf(\"media\") > 0) {\n            targetId = \"id_media\";\n        }\n\n        $(\"#\" + targetId + \"-TOTAL_FORMS\").val($(\"#\" + section + \" .panel\").length);\n        $(\"#\" + targetId + \"-INITIAL_FORMS\").val($(\"#\" + section + \" .panel\").length);\n        if (file) {\n            let $contents = $(\"<a class='thumbnail-image' href='\" + file.url + \"' target='_blank'></a>\");\n            let $name = \"<h4>\" + file.name + \"</h4>\";\n            if(targetId === \"id_images\") {\n                $contents.append(\"<img src='\" + file.url + \"'>\");\n                $html.find(\".thumbnail\").append($contents);\n            } else {\n                $contents.append(\"<img src='\" + file.url + \"' />\");\n                $html.find(\".extra-fields\").prepend($name);\n            }\n            $html.find(\".file-control\").find(\"input\").val(file.id);\n        }\n        $html.insertBefore($source);\n    }\n\n    function onDropzoneQueueComplete(dropzone, kind) {\n        if(location.pathname.indexOf(\"new\") > 0) {\n            // save product media the traditional way via the save button when creating a new product\n            return;\n        }\n        const productId = $(\"#product-\" + kind + \"-section-dropzone\").data().product_id;\n        const $fileInputs = $(\"#product-\" + kind + \"-section\").find(\".file-control input\");\n        var fileIds = [];\n\n        for(var i = 0; i < $fileInputs.length; i++){\n            let fileId = parseInt($($fileInputs[i]).val());\n            if(!isNaN(fileId)) {\n                fileIds.push(parseInt($($fileInputs[i]).val()));\n            }\n        }\n\n        $.ajax({\n            url: window.ShuupAdminConfig.browserUrls.add_media.replace(\"/99999/\", \"/\" + productId + \"/\"),\n            method: \"POST\",\n            data: {\n                csrfmiddlewaretoken: ShuupAdminConfig.csrf,\n                product_id: productId,\n                file_ids: fileIds,\n                kind\n            },\n            traditional: true,\n            success: function(data) {\n                if (data.added) {\n                    data.added.forEach((addedMedia) => {\n                        const filePanel = $(\".panel[data-file='\" + addedMedia.file + \"']\");\n                        const idx = parseInt(filePanel.data(\"idx\"), 10) - 1;\n                        $(\"#id_\" + kind + \"-\" + idx + \"-file\").prop(\"value\", addedMedia.file);\n                        $(\"#id_\" + kind + \"-\" + idx + \"-id\").prop(\"value\", addedMedia.product_media);\n                    });\n                }\n                window.Messages.enqueue({\n                    tags: \"success\",\n                    text: data.message\n                });\n            },\n            error: function(data) {\n                alert(\"ERROR\");\n            }\n        });\n    }\n\n    function onDropzoneSuccess($section, file) {\n        // file selected through dnd\n        if(file.xhr) {\n            file = JSON.parse(file.xhr.responseText).file;\n        }\n        addMediaPanel($section, file);\n    }\n    const dropzones = [\n        {\n            field: 'product-images-section',\n            targetPath: \"/products/images\",\n            maxFiles: 10,\n            queueComplete: \"images\"\n        },\n        {\n            field: 'product-media-section',\n            targetPath: \"/products/media\",\n            maxFiles: 10,\n            queueComplete: \"media\"\n        }\n    ];\n    dropzones.forEach(function(zoneData) {\n        var fieldId = \"#\" + zoneData.field + \"-dropzone\";\n        if ($(fieldId).length) {\n            activateDropzone($(fieldId), {\n                uploadPath: zoneData.targetPath,\n                maxFiles: zoneData.maxFiles,\n                onSuccess: function(file) {\n                    onDropzoneSuccess($(\"#\" + zoneData.field), file);\n                },\n                onQueueComplete: function() {\n                    onDropzoneQueueComplete(this, zoneData.queueComplete);\n                }\n            });\n        }\n    });\n});\n"]}