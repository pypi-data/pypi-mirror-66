# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: solar-power-production/SolarPowerProduction.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import FeedHeader_pb2 as FeedHeader__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='solar-power-production/SolarPowerProduction.proto',
  package='solar_production',
  syntax='proto3',
  serialized_options=b'\n\032io.pravah.solar.production',
  serialized_pb=b'\n1solar-power-production/SolarPowerProduction.proto\x12\x10solar_production\x1a\x10\x46\x65\x65\x64Header.proto\"[\n\x0b\x46\x65\x65\x64Message\x12\x1b\n\x06header\x18\x01 \x01(\x0b\x32\x0b.FeedHeader\x12/\n\x08stations\x18\x02 \x03(\x0b\x32\x1d.solar_production.FeedStation\"\xfe\x01\n\x0b\x46\x65\x65\x64Station\x12\n\n\x02id\x18\x01 \x01(\t\x12(\n\x06status\x18\x02 \x01(\x0b\x32\x18.solar_production.Status\x12N\n\x19powerGenerationParameters\x18\x03 \x01(\x0b\x32+.solar_production.PowerGenerationParameters\x12$\n\x04info\x18\x04 \x01(\x0b\x32\x16.solar_production.Info\x12\x30\n\x0cinverterList\x18\x05 \x03(\x0b\x32\x1a.solar_production.Inverter\x12\x11\n\ttimestamp\x18\x06 \x01(\x04\"\xc1\x02\n\x08Inverter\x12\n\n\x02id\x18\x01 \x01(\t\x12(\n\x06status\x18\x02 \x01(\x0b\x32\x18.solar_production.Status\x12:\n\x0fphaseComponents\x18\x03 \x03(\x0b\x32!.solar_production.PhaseComponents\x12:\n\x0fsolarPanelGroup\x18\x04 \x03(\x0b\x32!.solar_production.SolarPanelGroup\x12N\n\x19powerGenerationParameters\x18\x05 \x01(\x0b\x32+.solar_production.PowerGenerationParameters\x12$\n\x04info\x18\x06 \x01(\x0b\x32\x16.solar_production.Info\x12\x11\n\ttimestamp\x18\x07 \x01(\x04\"\x97\x01\n\x19PowerGenerationParameters\x12\x1a\n\x12\x63urrentPowerOutput\x18\x01 \x01(\x02\x12\x1b\n\x13powerGeneratedToday\x18\x02 \x01(\x02\x12\x13\n\x0birradiation\x18\x03 \x01(\x02\x12\x11\n\twindspeed\x18\x04 \x01(\x02\x12\x19\n\x11moduleTemperature\x18\x05 \x01(\x02\"Y\n\x04Info\x12\x15\n\rpowerCapacity\x18\x01 \x01(\x01\x12\x0c\n\x04name\x18\x02 \x01(\t\x12,\n\x08location\x18\x03 \x01(\x0b\x32\x1a.solar_production.Location\"\xa9\x01\n\x0fPhaseComponents\x12@\n\x12\x65lectricComponents\x18\x01 \x01(\x0b\x32$.solar_production.ElectricComponents\x12\x36\n\x05phase\x18\x02 \x01(\x0e\x32\'.solar_production.PhaseComponents.Phase\"\x1c\n\x05Phase\x12\x05\n\x01\x42\x10\x00\x12\x05\n\x01R\x10\x01\x12\x05\n\x01Y\x10\x02\"\x87\x01\n\x0fSolarPanelGroup\x12@\n\x12\x65lectricComponents\x18\x01 \x01(\x0b\x32$.solar_production.ElectricComponents\x12\x12\n\npanelCount\x18\x02 \x01(\r\x12\x1e\n\x16\x61verageGroupModuleTemp\x18\x03 \x01(\x02\"X\n\x12\x45lectricComponents\x12\r\n\x05power\x18\x01 \x01(\x01\x12\x0f\n\x07voltage\x18\x02 \x01(\x01\x12\x0f\n\x07\x63urrent\x18\x03 \x01(\x01\x12\x11\n\tfrequency\x18\x04 \x01(\x01\"/\n\x08Location\x12\x10\n\x08latitude\x18\x01 \x01(\x01\x12\x11\n\tlongitude\x18\x02 \x01(\x01\"r\n\x06Status\x12-\n\x05state\x18\x01 \x01(\x0e\x32\x1e.solar_production.Status.State\x12\x0f\n\x07message\x18\x02 \x01(\t\"(\n\x05State\x12\r\n\tCONNECTED\x10\x00\x12\x10\n\x0c\x44ISCONNECTED\x10\x01\"$\n\x05\x45rror\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02\x42\x1c\n\x1aio.pravah.solar.productionb\x06proto3'
  ,
  dependencies=[FeedHeader__pb2.DESCRIPTOR,])



_PHASECOMPONENTS_PHASE = _descriptor.EnumDescriptor(
  name='Phase',
  full_name='solar_production.PhaseComponents.Phase',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='B', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='R', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Y', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1150,
  serialized_end=1178,
)
_sym_db.RegisterEnumDescriptor(_PHASECOMPONENTS_PHASE)

_STATUS_STATE = _descriptor.EnumDescriptor(
  name='State',
  full_name='solar_production.Status.State',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CONNECTED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISCONNECTED', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1531,
  serialized_end=1571,
)
_sym_db.RegisterEnumDescriptor(_STATUS_STATE)


_FEEDMESSAGE = _descriptor.Descriptor(
  name='FeedMessage',
  full_name='solar_production.FeedMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='solar_production.FeedMessage.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stations', full_name='solar_production.FeedMessage.stations', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=89,
  serialized_end=180,
)


_FEEDSTATION = _descriptor.Descriptor(
  name='FeedStation',
  full_name='solar_production.FeedStation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='solar_production.FeedStation.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='solar_production.FeedStation.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='powerGenerationParameters', full_name='solar_production.FeedStation.powerGenerationParameters', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='info', full_name='solar_production.FeedStation.info', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inverterList', full_name='solar_production.FeedStation.inverterList', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='solar_production.FeedStation.timestamp', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=183,
  serialized_end=437,
)


_INVERTER = _descriptor.Descriptor(
  name='Inverter',
  full_name='solar_production.Inverter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='solar_production.Inverter.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='solar_production.Inverter.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phaseComponents', full_name='solar_production.Inverter.phaseComponents', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='solarPanelGroup', full_name='solar_production.Inverter.solarPanelGroup', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='powerGenerationParameters', full_name='solar_production.Inverter.powerGenerationParameters', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='info', full_name='solar_production.Inverter.info', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='solar_production.Inverter.timestamp', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=440,
  serialized_end=761,
)


_POWERGENERATIONPARAMETERS = _descriptor.Descriptor(
  name='PowerGenerationParameters',
  full_name='solar_production.PowerGenerationParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='currentPowerOutput', full_name='solar_production.PowerGenerationParameters.currentPowerOutput', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='powerGeneratedToday', full_name='solar_production.PowerGenerationParameters.powerGeneratedToday', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='irradiation', full_name='solar_production.PowerGenerationParameters.irradiation', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='windspeed', full_name='solar_production.PowerGenerationParameters.windspeed', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='moduleTemperature', full_name='solar_production.PowerGenerationParameters.moduleTemperature', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=764,
  serialized_end=915,
)


_INFO = _descriptor.Descriptor(
  name='Info',
  full_name='solar_production.Info',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='powerCapacity', full_name='solar_production.Info.powerCapacity', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='solar_production.Info.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='location', full_name='solar_production.Info.location', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=917,
  serialized_end=1006,
)


_PHASECOMPONENTS = _descriptor.Descriptor(
  name='PhaseComponents',
  full_name='solar_production.PhaseComponents',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='electricComponents', full_name='solar_production.PhaseComponents.electricComponents', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phase', full_name='solar_production.PhaseComponents.phase', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PHASECOMPONENTS_PHASE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1009,
  serialized_end=1178,
)


_SOLARPANELGROUP = _descriptor.Descriptor(
  name='SolarPanelGroup',
  full_name='solar_production.SolarPanelGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='electricComponents', full_name='solar_production.SolarPanelGroup.electricComponents', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='panelCount', full_name='solar_production.SolarPanelGroup.panelCount', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='averageGroupModuleTemp', full_name='solar_production.SolarPanelGroup.averageGroupModuleTemp', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1181,
  serialized_end=1316,
)


_ELECTRICCOMPONENTS = _descriptor.Descriptor(
  name='ElectricComponents',
  full_name='solar_production.ElectricComponents',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='power', full_name='solar_production.ElectricComponents.power', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='voltage', full_name='solar_production.ElectricComponents.voltage', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='current', full_name='solar_production.ElectricComponents.current', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='solar_production.ElectricComponents.frequency', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1318,
  serialized_end=1406,
)


_LOCATION = _descriptor.Descriptor(
  name='Location',
  full_name='solar_production.Location',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='latitude', full_name='solar_production.Location.latitude', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='longitude', full_name='solar_production.Location.longitude', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1408,
  serialized_end=1455,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='solar_production.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='solar_production.Status.state', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='solar_production.Status.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STATUS_STATE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1457,
  serialized_end=1571,
)


_ERROR = _descriptor.Descriptor(
  name='Error',
  full_name='solar_production.Error',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='solar_production.Error.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='solar_production.Error.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1573,
  serialized_end=1609,
)

_FEEDMESSAGE.fields_by_name['header'].message_type = FeedHeader__pb2._FEEDHEADER
_FEEDMESSAGE.fields_by_name['stations'].message_type = _FEEDSTATION
_FEEDSTATION.fields_by_name['status'].message_type = _STATUS
_FEEDSTATION.fields_by_name['powerGenerationParameters'].message_type = _POWERGENERATIONPARAMETERS
_FEEDSTATION.fields_by_name['info'].message_type = _INFO
_FEEDSTATION.fields_by_name['inverterList'].message_type = _INVERTER
_INVERTER.fields_by_name['status'].message_type = _STATUS
_INVERTER.fields_by_name['phaseComponents'].message_type = _PHASECOMPONENTS
_INVERTER.fields_by_name['solarPanelGroup'].message_type = _SOLARPANELGROUP
_INVERTER.fields_by_name['powerGenerationParameters'].message_type = _POWERGENERATIONPARAMETERS
_INVERTER.fields_by_name['info'].message_type = _INFO
_INFO.fields_by_name['location'].message_type = _LOCATION
_PHASECOMPONENTS.fields_by_name['electricComponents'].message_type = _ELECTRICCOMPONENTS
_PHASECOMPONENTS.fields_by_name['phase'].enum_type = _PHASECOMPONENTS_PHASE
_PHASECOMPONENTS_PHASE.containing_type = _PHASECOMPONENTS
_SOLARPANELGROUP.fields_by_name['electricComponents'].message_type = _ELECTRICCOMPONENTS
_STATUS.fields_by_name['state'].enum_type = _STATUS_STATE
_STATUS_STATE.containing_type = _STATUS
DESCRIPTOR.message_types_by_name['FeedMessage'] = _FEEDMESSAGE
DESCRIPTOR.message_types_by_name['FeedStation'] = _FEEDSTATION
DESCRIPTOR.message_types_by_name['Inverter'] = _INVERTER
DESCRIPTOR.message_types_by_name['PowerGenerationParameters'] = _POWERGENERATIONPARAMETERS
DESCRIPTOR.message_types_by_name['Info'] = _INFO
DESCRIPTOR.message_types_by_name['PhaseComponents'] = _PHASECOMPONENTS
DESCRIPTOR.message_types_by_name['SolarPanelGroup'] = _SOLARPANELGROUP
DESCRIPTOR.message_types_by_name['ElectricComponents'] = _ELECTRICCOMPONENTS
DESCRIPTOR.message_types_by_name['Location'] = _LOCATION
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['Error'] = _ERROR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FeedMessage = _reflection.GeneratedProtocolMessageType('FeedMessage', (_message.Message,), {
  'DESCRIPTOR' : _FEEDMESSAGE,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.FeedMessage)
  })
_sym_db.RegisterMessage(FeedMessage)

FeedStation = _reflection.GeneratedProtocolMessageType('FeedStation', (_message.Message,), {
  'DESCRIPTOR' : _FEEDSTATION,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.FeedStation)
  })
_sym_db.RegisterMessage(FeedStation)

Inverter = _reflection.GeneratedProtocolMessageType('Inverter', (_message.Message,), {
  'DESCRIPTOR' : _INVERTER,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.Inverter)
  })
_sym_db.RegisterMessage(Inverter)

PowerGenerationParameters = _reflection.GeneratedProtocolMessageType('PowerGenerationParameters', (_message.Message,), {
  'DESCRIPTOR' : _POWERGENERATIONPARAMETERS,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.PowerGenerationParameters)
  })
_sym_db.RegisterMessage(PowerGenerationParameters)

Info = _reflection.GeneratedProtocolMessageType('Info', (_message.Message,), {
  'DESCRIPTOR' : _INFO,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.Info)
  })
_sym_db.RegisterMessage(Info)

PhaseComponents = _reflection.GeneratedProtocolMessageType('PhaseComponents', (_message.Message,), {
  'DESCRIPTOR' : _PHASECOMPONENTS,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.PhaseComponents)
  })
_sym_db.RegisterMessage(PhaseComponents)

SolarPanelGroup = _reflection.GeneratedProtocolMessageType('SolarPanelGroup', (_message.Message,), {
  'DESCRIPTOR' : _SOLARPANELGROUP,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.SolarPanelGroup)
  })
_sym_db.RegisterMessage(SolarPanelGroup)

ElectricComponents = _reflection.GeneratedProtocolMessageType('ElectricComponents', (_message.Message,), {
  'DESCRIPTOR' : _ELECTRICCOMPONENTS,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.ElectricComponents)
  })
_sym_db.RegisterMessage(ElectricComponents)

Location = _reflection.GeneratedProtocolMessageType('Location', (_message.Message,), {
  'DESCRIPTOR' : _LOCATION,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.Location)
  })
_sym_db.RegisterMessage(Location)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), {
  'DESCRIPTOR' : _STATUS,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.Status)
  })
_sym_db.RegisterMessage(Status)

Error = _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), {
  'DESCRIPTOR' : _ERROR,
  '__module__' : 'solar_power_production.SolarPowerProduction_pb2'
  # @@protoc_insertion_point(class_scope:solar_production.Error)
  })
_sym_db.RegisterMessage(Error)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
