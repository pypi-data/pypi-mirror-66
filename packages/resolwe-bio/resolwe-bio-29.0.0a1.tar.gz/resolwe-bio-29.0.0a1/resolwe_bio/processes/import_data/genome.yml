# ===============
# Import - Genome
# ===============
---

- slug: upload-genome
  name: Genome
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/rnaseq:4.9.0
    resources:
      cores: 10
      memory: 16384
      network: true
  data_name: '{{ src.file|default("?") }}'
  version: 3.4.1
  type: data:genome:fasta
  category: Import
  persistence: RAW
  description: |
    Import genome sequence in FASTA format which includes .fasta.gz
    (preferred), .fa., .fna., or .fasta extensions.
  input:
    - name: src
      label: Genome sequence (FASTA)
      type: basic:file
      description: |
        Genome sequence in FASTA format. Supported extensions: .fasta.gz (preferred), .fa.*, .fna.* or .fasta.*
      validate_regex: '\.(fasta|fa|fna|fsa)(|\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z)$'
    - name: species
      label: Species
      type: basic:string
      description: |
        Species latin name.
      allow_custom_choice: true
      choices:
        - label: Homo sapiens
          value: Homo sapiens
        - label: Mus musculus
          value: Mus musculus
        - label: Rattus norvegicus
          value: Rattus norvegicus
        - label: Dictyostelium discoideum
          value: Dictyostelium discoideum
        - label: Odocoileus virginianus texanus
          value: Odocoileus virginianus texanus
        - label: Solanum tuberosum
          value: Solanum tuberosum
    - name: build
      label: Genome build
      type: basic:string
    - name: advanced
      label: Advanced
      group:
        - name: bowtie_index
          label: Bowtie index files
          type: basic:file
          required: false
          description: |
            Bowtie index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: bowtie2_index
          label: Bowtie2 index files
          type: basic:file
          required: false
          description: |
            Bowtie2 index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: bwa_index
          label: BWA index files
          type: basic:file
          required: false
          description: |
            BWA index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: hisat2_index
          label: HISAT2 index files
          type: basic:file
          required: false
          description: |
            HISAT2 index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: subread_index
          label: subread index files
          type: basic:file
          required: false
          description: |
            Subread index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
        - name: walt_index
          label: WALT index files
          type: basic:file
          required: false
          description: |
            WALT index files. Supported extensions (*.tar.gz).
          validate_regex: '(\.tar\.gz)$'
  output:
    - name: fastagz
      label: Genome FASTA file (compressed)
      type: basic:file
    - name: fasta
      label: Genome FASTA file
      type: basic:file
    - name: index_bt
      label: Bowtie index
      type: basic:dir
    - name: index_bt2
      label: Bowtie2 index
      type: basic:dir
    - name: index_bwa
      label: BWA index
      type: basic:dir
    - name: index_hisat2
      label: HISAT2 index
      type: basic:dir
    - name: index_subread
      label: subread index
      type: basic:dir
    - name: index_walt
      label: WALT index
      type: basic:dir
    - name: fai
      label: Fasta index
      type: basic:file
    - name: dict
      label: Fasta dict
      type: basic:file
    - name: fasta_track_jbrowse
      label: Jbrowse track
      type: basic:file
      hidden: true
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      re-import {{ src.file_temp }} {{ src.file }} "fasta|fa|fna|fsa" fasta 0.1
      FASTA_NAME="${NAME}"

      # If last line empty, remove this line from a FASTA file. Improves Cufflinks compatibility.
      if [ "$(tail -n 1 "${FASTA_NAME}.fasta")" == "" ]; then
        echo "Removing empty line at the end of FASTA file."
        sed -i '$ d' "${FASTA_NAME}.fasta"
        rm "${FASTA_NAME}.fasta.gz"
        gzip -c -k "${FASTA_NAME}.fasta" > "${FASTA_NAME}.fasta.gz"
      fi

      # Create fasta index
      samtools faidx "${FASTA_NAME}.fasta"
      re-checkrc

      # Create fasta dictionary file
      picard-tools CreateSequenceDictionary R="${FASTA_NAME}.fasta" O="${FASTA_NAME}.dict"
      re-checkrc

      # Create JBrowse track
      prepare-refseqs.pl --fasta "${FASTA_NAME}".fasta --out .
      re-checkrc "Reference sequence processing for JBrowse failed."

      re-save-file fastagz "${FASTA_NAME}.fasta.gz"
      re-save-file fasta "${FASTA_NAME}.fasta"
      re-save-file fai "${FASTA_NAME}.fasta.fai"
      re-save-file dict "${FASTA_NAME}.dict"
      re-save-file fasta_track_jbrowse seq/refSeqs.json seq

      re-save species {{ species }}
      re-save build {{ build }}

      rename_index () {
        IN_NAME="$1"
        DIR_NAME="$2"
        PREFIX="$3"
        mkdir TEMP
        tar xzf "${IN_NAME}" --directory TEMP
        FULL_DIR=`ls -d TEMP/*/`
        PREFIX_LEN=`python -c "import os; print(len(os.path.commonprefix(os.listdir('${FULL_DIR}'))))"`
        if [ -z "${PREFIX_LEN}" ] || [ "${PREFIX_LEN}" -lt 1 ]; then
          re-error "Error determining index prefix"
        fi
        for FN in TEMP/*/*; do
          BN=`basename "${FN}"`
          mv "${FN}" "${DIR_NAME}/${PREFIX}.${BN:PREFIX_LEN}"
        done
        rm -r TEMP
      }

      {% set directory = 'bowtie_index' %}
      mkdir {{ directory }}
      {% if advanced.bowtie_index %}
        re-import {{ advanced.bowtie_index.file_temp }} {{ advanced.bowtie_index.file }} tar tar 0.2 compress
        rename_index "${NAME}.tar.gz" {{ directory }} "${FASTA_NAME}_index"
      {% else %}
        bowtie-build "${FASTA_NAME}.fasta" {{ directory }}/"${FASTA_NAME}_index" --threads {{ requirements.resources.cores }}
        re-checkrc "Error building Bowtie index"
        re-progress 0.2
      {% endif %}
      re-save-dir index_bt {{ directory }}

      {% set directory = 'bowtie2_index' %}
      mkdir {{ directory }}
      {% if advanced.bowtie2_index %}
        re-import {{ advanced.bowtie2_index.file_temp }} {{ advanced.bowtie2_index.file }} tar tar 0.3 compress
        rename_index "${NAME}.tar.gz" {{ directory }} "${FASTA_NAME}_index"
      {% else %}
        bowtie2-build "${FASTA_NAME}.fasta" {{ directory }}/"${FASTA_NAME}_index" --threads {{ requirements.resources.cores }}
        re-checkrc "Error building Bowtie2 index"
        re-progress 0.3
      {% endif %}
      cp "${FASTA_NAME}.fasta" {{ directory }}/"${FASTA_NAME}_index.fa"
      re-save-dir index_bt2 {{ directory }}

      {% set directory = 'BWA_index' %}
      mkdir {{ directory }}
      {% if advanced.bwa_index %}
        re-import {{ advanced.bwa_index.file_temp }} {{ advanced.bwa_index.file }} tar tar 0.4 compress
        rename_index "${NAME}.tar.gz" {{ directory }} "${FASTA_NAME}.fasta"
      {% else %}
        bwa index -p {{ directory }}/"${FASTA_NAME}.fasta" "${FASTA_NAME}.fasta"
        re-checkrc "Error building BWA index"
        re-progress 0.4
      {% endif %}
      re-save-dir index_bwa {{ directory }}

      {% set directory = 'hisat2_index' %}
      mkdir {{ directory }}
      {% if advanced.hisat2_index %}
        re-import {{ advanced.hisat2_index.file_temp }} {{ advanced.hisat2_index.file }} tar tar 0.5 compress
        rename_index "${NAME}.tar.gz" {{ directory }} "${FASTA_NAME}_index"
      {% else %}
        hisat2-build "${FASTA_NAME}.fasta" {{ directory }}/"${FASTA_NAME}_index"
        re-checkrc "Error building HISAT2 index"
        re-progress 0.5
      {% endif %}
      re-save-dir index_hisat2 {{ directory }}

      {% set directory = 'subread_index' %}
      mkdir {{ directory }}
      {% if advanced.subread_index %}
        re-import {{ advanced.subread_index.file_temp }} {{ advanced.subread_index.file }} tar tar 0.6 compress
        rename_index "${NAME}.tar.gz" {{ directory }} "${FASTA_NAME}_index"
      {% else %}
        subread-buildindex "${FASTA_NAME}.fasta" -o {{ directory }}/"${FASTA_NAME}_index"
        re-checkrc "Error building Subread index"
        re-progress 0.6
      {% endif %}
      re-save-dir index_subread {{ directory }}

      {% set directory = 'walt_index' %}
      mkdir {{ directory }}
      {% if advanced.walt %}
        re-import {{ advanced.walt_index.file_temp|default(advanced.walt_index.file) }} {{ advanced.walt_index.file }} tar tar 0.9 compress
        format_index_files.py "${NAME}.tar.gz" "${FASTA_NAME}_index" {{ directory }}
      {% else %}
        makedb-walt -c "${FASTA_NAME}.fasta" -o {{ directory }}/"${FASTA_NAME}.dbindex"
        re-checkrc "Error building WALT index"
        re-progress 0.9
      {% endif %}
      re-save-dir index_walt {{ directory }}
