Metadata-Version: 2.1
Name: celo-etl
Version: 0.0.1
Summary: Tools for exporting Celo blockchain data to CSV or JSON
Home-page: https://github.com/codabl/celo-etl
Author: Gonzalo Astorga
Author-email: gonzalo@codabl.com
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/codabl/celo-etl/issues
Project-URL: Source, https://github.com/codabl/celo-etl
Description: # Celo ETL
        
        [![Build Status](https://travis-ci.org/blockchain-etl/ethereum-etl.png)](https://travis-ci.org/blockchain-etl/ethereum-etl)
        [![Discord](https://img.shields.io/badge/discord-join%20chat-blue.svg)](https://discord.gg/wukrezR)
        
        Celo ETL lets you convert blockchain data into convenient formats like CSVs and relational databases.
        
        [Full documentation available here](http://celo-etl.readthedocs.io/).
        
        ## Quickstart
        
        Install Celo ETL:
        
        ```bash
        pip3 install celo-etl
        ```
        
        Export blocks and transactions ([Schema](docs/schema.md#blockscsv), [Reference](docs/commands.md#export_blocks_and_transactions)):
        
        ```bash
        > ethereumetl export_blocks_and_transactions --start-block 0 --end-block 500000 \
        --provider-uri https://mainnet.infura.io --blocks-output blocks.csv --transactions-output transactions.csv
        ```
        
        Export ERC20 and ERC721 transfers ([Schema](docs/schema.md#token_transferscsv), [Reference](docs/commands.md##export_token_transfers)):
        
        ```bash
        > ethereumetl export_token_transfers --start-block 0 --end-block 500000 \
        --provider-uri file://$HOME/Library/Ethereum/geth.ipc --output token_transfers.csv
        ```
        
        Export traces ([Schema](docs/schema.md#tracescsv), [Reference](docs/commands.md#export_traces)):
        
        ```bash
        > ethereumetl export_traces --start-block 0 --end-block 500000 \
        --provider-uri file://$HOME/Library/Ethereum/parity.ipc --output traces.csv
        ```
        
        ---
        
        Stream blocks, transactions, logs, token_transfers continually to console ([Reference](docs/commands.md#stream)):
        
        ```bash
        > pip3 install celo-etl[streaming]
        > ethereumetl stream --start-block 500000 -e block,transaction,log,token_transfer --log-file log.txt
        ```
        
        Find other commands [here](https://celo-etl.readthedocs.io/en/latest/commands/).
        
        For the latest version, check out the repo and call 
        ```bash
        > pip3 install -e . 
        > python3 ethereumetl.py
        ```
        
        ## Useful Links
        
        - [Schema](https://celo-etl.readthedocs.io/en/latest/schema/)
        - [Command Reference](https://celo-etl.readthedocs.io/en/latest/commands/)
        - [Documentation](https://celo-etl.readthedocs.io/)
        - [Exporting the Blockchain](https://celo-etl.readthedocs.io/en/latest/exporting-the-blockchain/)
        - [Querying in Amazon Athena](https://celo-etl.readthedocs.io/en/latest/amazon-athena/)
        - [Querying in Google BigQuery](https://celo-etl.readthedocs.io/en/latest/google-bigquery/)
        - [Querying in Kaggle](https://www.kaggle.com/bigquery/ethereum-blockchain)
        - [Airflow DAGs](https://github.com/blockchain-etl/celo-etl-airflow)
        - [Postgres ETL](https://github.com/blockchain-etl/celo-etl-postgresql)
        
        ## Running Tests
        
        ```bash
        > pip3 install -e .[dev,streaming]
        > export ETHEREUM_ETL_RUN_SLOW_TESTS=True
        > pytest -vv
        ```
        
        ### Running Tox Tests
        
        ```bash
        > pip3 install tox
        > tox
        ```
        
        ## Running in Docker
        
        1. Install Docker https://docs.docker.com/install/
        
        2. Build a docker image
                
                > docker build -t celo-etl:latest .
                > docker image ls
                
        3. Run a container out of the image
        
                > docker run -v $HOME/output:/celo-etl/output celo-etl:latest export_all -s 0 -e 5499999 -b 100000 -p https://mainnet.infura.io
                > docker run -v $HOME/output:/celo-etl/output celo-etl:latest export_all -s 2018-01-01 -e 2018-01-01 -p https://mainnet.infura.io
        
        4. Run streaming to console or Pub/Sub
        
                > docker build -t celo-etl:latest -f Dockerfile .
                > echo "Stream to console"
                > docker run celo-etl:latest stream --start-block 500000 --log-file log.txt
                > echo "Stream to Pub/Sub"
                > docker run -v /path_to_credentials_file/:/celo-etl/ --env GOOGLE_APPLICATION_CREDENTIALS=/celo-etl/credentials_file.json celo-etl:latest stream --start-block 500000 --output projects/<your-project>/topics/crypto_ethereum
        
Keywords: celo
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3.5.3,<3.8.0
Description-Content-Type: text/markdown
Provides-Extra: streaming
Provides-Extra: dev
