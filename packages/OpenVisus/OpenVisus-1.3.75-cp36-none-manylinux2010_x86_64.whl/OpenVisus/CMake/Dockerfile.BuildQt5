# if you want to create a "new" minimal Qt5 file this is what I did
# sudo docker build  -t openvisus/manylinuxqt -f CMake/Dockerfile.BuildQt5 .
# sudo docker create -ti --name dummy openvisus/manylinuxqt bash
# sudo docker cp dummy:/root/qt5.11.2.tar.gz . 
# sudo docker rm -fv dummy
# copy the file qt5.11.2.tar.gz to github

# see 
#    https://kate-editor.org/2014/12/22/qt-5-4-on-red-hat-enterprise-5/
#    https://github.com/qt/qt5/tree/5.11

FROM quay.io/pypa/manylinux1_x86_64

RUN yum update
RUN yum install -y wget 
RUN wget http://people.centos.org/tru/devtools-1.1/devtools-1.1.repo -O /etc/yum.repos.d/devtools-1.1.repo
RUN scl enable devtoolset-1.1 devtoolset-1.1 bash

WORKDIR /tmp
RUN wget --no-check-certificate http://xcb.freedesktop.org/dist/libpthread-stubs-0.3.tar.gz
RUN tar -xzf libpthread-stubs-0.3.tar.gz
RUN pushd libpthread-stubs-0.3 && ./configure && make  && make install && popd

WORKDIR /tmp
RUN wget --no-check-certificate http://xcb.freedesktop.org/dist/xcb-proto-1.11.tar.gz
RUN tar -xzf xcb-proto-1.11.tar.gz
RUN pushd xcb-proto-1.11 && ./configure && make && make install && popd

WORKDIR /tmp
RUN wget --no-check-certificate http://xcb.freedesktop.org/dist/libxcb-1.11.tar.gz
RUN tar -xzf libxcb-1.11.tar.gz
RUN pushd libxcb-1.11 &&  ./configure && make && make install && popd

WORKDIR /tmp
RUN yum install -y xz python26 libX11-devel libx11-xcb-devel libXrender-devel  fontconfig-devel  libXau-devel libXext-devel  mesa-libGL-devel mesa-libGLU-devel
RUN wget --no-check-certificate --quiet http://download.qt.io/archive/qt/5.11/5.11.2/single/qt-everywhere-src-5.11.2.tar.xz
RUN unxz qt-everywhere-src-5.11.2.tar.xz &&  tar xf qt-everywhere-src-5.11.2.tar
WORKDIR /tmp/qt-everywhere-src-5.11.2

RUN ./configure \
	-v \
	-opensource \
	-confirm-license \
	-nomake tests \
	-nomake examples \
	-qt-xcb\
	-qpa xcb \
	-make libs \
	-opengl desktop \
	-qt-zlib	\
	-qt-libjpeg \
	-qt-libpng	 \
	-qt-freetype \
	-qt-pcre \
	-qt-harfbuzz \
	-skip qt3d \
	-skip qtactiveqt \
	-skip qtandroidextras \
	-skip qtcanvas3d \
	-skip qtcharts \
	-skip qtconnectivity \
	-skip qtdatavis3d \
	-skip qtdeclarative \
	-skip qtdoc \
	-skip qtdocgallery \
	-skip qtenginio \
	-skip qtfeedback \
	-skip qtgamepad \
	-skip qtlocation \
	-skip qtmacextras \
	-skip qtmultimedia \
	-skip qtnetworkauth \
	-skip qtpim \
	-skip qtpurchasing \
	-skip qtqa \
	-skip qtquickcontrols \
	-skip qtquickcontrols2 \
	-skip qtremoteobjects \
	-skip qtrepotools \
	-skip qtscript \
	-skip qtscxml \
	-skip qtsensors \
	-skip qtserialbus \
	-skip qtserialport \
	-skip qtspeech \
	-skip qtsvg \
	-skip qtvirtualkeyboard \
	-skip qtwayland \
	-skip qtwebchannel \
	-skip qtwebengine \
	-skip qtwebglplugin \
	-skip qtwebsockets \
	-skip qtwebview \
	-skip qtwinextras \
	-skip qtx11extras \
	-skip qtxmlpatterns \
	-R ‘\\\$$ORIGIN’ \
	-D XK_dead_currency=0xfe6f \
	-D XK_ISO_Level5_Lock=0xfe13 \
	-D FC_WEIGHT_EXTRABLACK=215 \
	-D FC_WEIGHT_ULTRABLACK=FC_WEIGHT_EXTRABLACK \
	-DGLX_GLXEXT_LEGACY \
	-DGLX_GLXEXT_PROTOTYPES \
 	-D _X_INLINE=inline

#-skip qtbase 
#-skip qtimageformats
#-skip qtgraphicaleffects 
#-skip qtsystems 
#-skip qttools 
#-skip qttranslations

RUN sed -i "s/#define QTESTLIB_USE_PERF_EVENTS/#undef QTESTLIB_USE_PERF_EVENTS/g" qtbase/src/testlib/qbenchmark_p.h
RUN make 
RUN make install

WORKDIR /usr/local
RUN mv Qt-5.11.2 qt5.11.2 
RUN tar czf /root/qt5.11.2.tar.gz ./qt5.11.2



